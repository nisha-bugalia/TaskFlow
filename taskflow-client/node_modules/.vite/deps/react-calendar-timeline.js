import {
  init_moment,
  moment_exports
} from "./chunk-JSCIUXJ5.js";
import {
  require_react
} from "./chunk-OE6NBOXF.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS
} from "./chunk-AUZ3RYOM.js";

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/interactjs/dist/interact.min.js
var require_interact_min = __commonJS({
  "node_modules/interactjs/dist/interact.min.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).interact = e();
    }(exports, function() {
      "use strict";
      function t(t2, e2) {
        var n2 = Object.keys(t2);
        if (Object.getOwnPropertySymbols) {
          var r2 = Object.getOwnPropertySymbols(t2);
          e2 && (r2 = r2.filter(function(e3) {
            return Object.getOwnPropertyDescriptor(t2, e3).enumerable;
          })), n2.push.apply(n2, r2);
        }
        return n2;
      }
      function e(e2) {
        for (var n2 = 1; n2 < arguments.length; n2++) {
          var r2 = null != arguments[n2] ? arguments[n2] : {};
          n2 % 2 ? t(Object(r2), true).forEach(function(t2) {
            a(e2, t2, r2[t2]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(r2)) : t(Object(r2)).forEach(function(t2) {
            Object.defineProperty(e2, t2, Object.getOwnPropertyDescriptor(r2, t2));
          });
        }
        return e2;
      }
      function n(t2) {
        return n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
          return typeof t3;
        } : function(t3) {
          return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
        }, n(t2);
      }
      function r(t2, e2) {
        if (!(t2 instanceof e2))
          throw new TypeError("Cannot call a class as a function");
      }
      function i(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t2, d(r2.key), r2);
        }
      }
      function o(t2, e2, n2) {
        return e2 && i(t2.prototype, e2), n2 && i(t2, n2), Object.defineProperty(t2, "prototype", { writable: false }), t2;
      }
      function a(t2, e2, n2) {
        return (e2 = d(e2)) in t2 ? Object.defineProperty(t2, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t2[e2] = n2, t2;
      }
      function s(t2, e2) {
        if ("function" != typeof e2 && null !== e2)
          throw new TypeError("Super expression must either be null or a function");
        t2.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t2, writable: true, configurable: true } }), Object.defineProperty(t2, "prototype", { writable: false }), e2 && l(t2, e2);
      }
      function c(t2) {
        return c = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t3) {
          return t3.__proto__ || Object.getPrototypeOf(t3);
        }, c(t2);
      }
      function l(t2, e2) {
        return l = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t3, e3) {
          return t3.__proto__ = e3, t3;
        }, l(t2, e2);
      }
      function u(t2) {
        if (void 0 === t2)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t2;
      }
      function p(t2) {
        var e2 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if ("function" == typeof Proxy)
            return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (t3) {
            return false;
          }
        }();
        return function() {
          var n2, r2 = c(t2);
          if (e2) {
            var i2 = c(this).constructor;
            n2 = Reflect.construct(r2, arguments, i2);
          } else
            n2 = r2.apply(this, arguments);
          return function(t3, e3) {
            if (e3 && ("object" == typeof e3 || "function" == typeof e3))
              return e3;
            if (void 0 !== e3)
              throw new TypeError("Derived constructors may only return object or undefined");
            return u(t3);
          }(this, n2);
        };
      }
      function f() {
        return f = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(t2, e2, n2) {
          var r2 = function(t3, e3) {
            for (; !Object.prototype.hasOwnProperty.call(t3, e3) && null !== (t3 = c(t3)); )
              ;
            return t3;
          }(t2, e2);
          if (r2) {
            var i2 = Object.getOwnPropertyDescriptor(r2, e2);
            return i2.get ? i2.get.call(arguments.length < 3 ? t2 : n2) : i2.value;
          }
        }, f.apply(this, arguments);
      }
      function d(t2) {
        var e2 = function(t3, e3) {
          if ("object" != typeof t3 || null === t3)
            return t3;
          var n2 = t3[Symbol.toPrimitive];
          if (void 0 !== n2) {
            var r2 = n2.call(t3, e3 || "default");
            if ("object" != typeof r2)
              return r2;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === e3 ? String : Number)(t3);
        }(t2, "string");
        return "symbol" == typeof e2 ? e2 : e2 + "";
      }
      var h = function(t2) {
        return !(!t2 || !t2.Window) && t2 instanceof t2.Window;
      }, v = void 0, g = void 0;
      function m(t2) {
        v = t2;
        var e2 = t2.document.createTextNode("");
        e2.ownerDocument !== t2.document && "function" == typeof t2.wrap && t2.wrap(e2) === e2 && (t2 = t2.wrap(t2)), g = t2;
      }
      function y(t2) {
        return h(t2) ? t2 : (t2.ownerDocument || t2).defaultView || g.window;
      }
      "undefined" != typeof window && window && m(window);
      var b = function(t2) {
        return !!t2 && "object" === n(t2);
      }, x = function(t2) {
        return "function" == typeof t2;
      }, w = { window: function(t2) {
        return t2 === g || h(t2);
      }, docFrag: function(t2) {
        return b(t2) && 11 === t2.nodeType;
      }, object: b, func: x, number: function(t2) {
        return "number" == typeof t2;
      }, bool: function(t2) {
        return "boolean" == typeof t2;
      }, string: function(t2) {
        return "string" == typeof t2;
      }, element: function(t2) {
        if (!t2 || "object" !== n(t2))
          return false;
        var e2 = y(t2) || g;
        return /object|function/.test("undefined" == typeof Element ? "undefined" : n(Element)) ? t2 instanceof Element || t2 instanceof e2.Element : 1 === t2.nodeType && "string" == typeof t2.nodeName;
      }, plainObject: function(t2) {
        return b(t2) && !!t2.constructor && /function Object\b/.test(t2.constructor.toString());
      }, array: function(t2) {
        return b(t2) && void 0 !== t2.length && x(t2.splice);
      } };
      function E(t2) {
        var e2 = t2.interaction;
        if ("drag" === e2.prepared.name) {
          var n2 = e2.prepared.axis;
          "x" === n2 ? (e2.coords.cur.page.y = e2.coords.start.page.y, e2.coords.cur.client.y = e2.coords.start.client.y, e2.coords.velocity.client.y = 0, e2.coords.velocity.page.y = 0) : "y" === n2 && (e2.coords.cur.page.x = e2.coords.start.page.x, e2.coords.cur.client.x = e2.coords.start.client.x, e2.coords.velocity.client.x = 0, e2.coords.velocity.page.x = 0);
        }
      }
      function T(t2) {
        var e2 = t2.iEvent, n2 = t2.interaction;
        if ("drag" === n2.prepared.name) {
          var r2 = n2.prepared.axis;
          if ("x" === r2 || "y" === r2) {
            var i2 = "x" === r2 ? "y" : "x";
            e2.page[i2] = n2.coords.start.page[i2], e2.client[i2] = n2.coords.start.client[i2], e2.delta[i2] = 0;
          }
        }
      }
      var S = { id: "actions/drag", install: function(t2) {
        var e2 = t2.actions, n2 = t2.Interactable, r2 = t2.defaults;
        n2.prototype.draggable = S.draggable, e2.map.drag = S, e2.methodDict.drag = "draggable", r2.actions.drag = S.defaults;
      }, listeners: { "interactions:before-action-move": E, "interactions:action-resume": E, "interactions:action-move": T, "auto-start:check": function(t2) {
        var e2 = t2.interaction, n2 = t2.interactable, r2 = t2.buttons, i2 = n2.options.drag;
        if (i2 && i2.enabled && (!e2.pointerIsDown || !/mouse|pointer/.test(e2.pointerType) || 0 != (r2 & n2.options.drag.mouseButtons)))
          return t2.action = { name: "drag", axis: "start" === i2.lockAxis ? i2.startAxis : i2.lockAxis }, false;
      } }, draggable: function(t2) {
        return w.object(t2) ? (this.options.drag.enabled = false !== t2.enabled, this.setPerAction("drag", t2), this.setOnEvents("drag", t2), /^(xy|x|y|start)$/.test(t2.lockAxis) && (this.options.drag.lockAxis = t2.lockAxis), /^(xy|x|y)$/.test(t2.startAxis) && (this.options.drag.startAxis = t2.startAxis), this) : w.bool(t2) ? (this.options.drag.enabled = t2, this) : this.options.drag;
      }, beforeMove: E, move: T, defaults: { startAxis: "xy", lockAxis: "xy" }, getCursor: function() {
        return "move";
      }, filterEventType: function(t2) {
        return 0 === t2.search("drag");
      } }, _ = S, P = { init: function(t2) {
        var e2 = t2;
        P.document = e2.document, P.DocumentFragment = e2.DocumentFragment || O, P.SVGElement = e2.SVGElement || O, P.SVGSVGElement = e2.SVGSVGElement || O, P.SVGElementInstance = e2.SVGElementInstance || O, P.Element = e2.Element || O, P.HTMLElement = e2.HTMLElement || P.Element, P.Event = e2.Event, P.Touch = e2.Touch || O, P.PointerEvent = e2.PointerEvent || e2.MSPointerEvent;
      }, document: null, DocumentFragment: null, SVGElement: null, SVGSVGElement: null, SVGElementInstance: null, Element: null, HTMLElement: null, Event: null, Touch: null, PointerEvent: null };
      function O() {
      }
      var k = P;
      var D = { init: function(t2) {
        var e2 = k.Element, n2 = t2.navigator || {};
        D.supportsTouch = "ontouchstart" in t2 || w.func(t2.DocumentTouch) && k.document instanceof t2.DocumentTouch, D.supportsPointerEvent = false !== n2.pointerEnabled && !!k.PointerEvent, D.isIOS = /iP(hone|od|ad)/.test(n2.platform), D.isIOS7 = /iP(hone|od|ad)/.test(n2.platform) && /OS 7[^\d]/.test(n2.appVersion), D.isIe9 = /MSIE 9/.test(n2.userAgent), D.isOperaMobile = "Opera" === n2.appName && D.supportsTouch && /Presto/.test(n2.userAgent), D.prefixedMatchesSelector = "matches" in e2.prototype ? "matches" : "webkitMatchesSelector" in e2.prototype ? "webkitMatchesSelector" : "mozMatchesSelector" in e2.prototype ? "mozMatchesSelector" : "oMatchesSelector" in e2.prototype ? "oMatchesSelector" : "msMatchesSelector", D.pEventTypes = D.supportsPointerEvent ? k.PointerEvent === t2.MSPointerEvent ? { up: "MSPointerUp", down: "MSPointerDown", over: "mouseover", out: "mouseout", move: "MSPointerMove", cancel: "MSPointerCancel" } : { up: "pointerup", down: "pointerdown", over: "pointerover", out: "pointerout", move: "pointermove", cancel: "pointercancel" } : null, D.wheelEvent = k.document && "onmousewheel" in k.document ? "mousewheel" : "wheel";
      }, supportsTouch: null, supportsPointerEvent: null, isIOS7: null, isIOS: null, isIe9: null, isOperaMobile: null, prefixedMatchesSelector: null, pEventTypes: null, wheelEvent: null };
      var I = D;
      function M(t2, e2) {
        if (t2.contains)
          return t2.contains(e2);
        for (; e2; ) {
          if (e2 === t2)
            return true;
          e2 = e2.parentNode;
        }
        return false;
      }
      function z(t2, e2) {
        for (; w.element(t2); ) {
          if (R(t2, e2))
            return t2;
          t2 = A(t2);
        }
        return null;
      }
      function A(t2) {
        var e2 = t2.parentNode;
        if (w.docFrag(e2)) {
          for (; (e2 = e2.host) && w.docFrag(e2); )
            ;
          return e2;
        }
        return e2;
      }
      function R(t2, e2) {
        return g !== v && (e2 = e2.replace(/\/deep\//g, " ")), t2[I.prefixedMatchesSelector](e2);
      }
      var C = function(t2) {
        return t2.parentNode || t2.host;
      };
      function j(t2, e2) {
        for (var n2, r2 = [], i2 = t2; (n2 = C(i2)) && i2 !== e2 && n2 !== i2.ownerDocument; )
          r2.unshift(i2), i2 = n2;
        return r2;
      }
      function F(t2, e2, n2) {
        for (; w.element(t2); ) {
          if (R(t2, e2))
            return true;
          if ((t2 = A(t2)) === n2)
            return R(t2, e2);
        }
        return false;
      }
      function X(t2) {
        return t2.correspondingUseElement || t2;
      }
      function Y(t2) {
        var e2 = t2 instanceof k.SVGElement ? t2.getBoundingClientRect() : t2.getClientRects()[0];
        return e2 && { left: e2.left, right: e2.right, top: e2.top, bottom: e2.bottom, width: e2.width || e2.right - e2.left, height: e2.height || e2.bottom - e2.top };
      }
      function L(t2) {
        var e2, n2 = Y(t2);
        if (!I.isIOS7 && n2) {
          var r2 = { x: (e2 = (e2 = y(t2)) || g).scrollX || e2.document.documentElement.scrollLeft, y: e2.scrollY || e2.document.documentElement.scrollTop };
          n2.left += r2.x, n2.right += r2.x, n2.top += r2.y, n2.bottom += r2.y;
        }
        return n2;
      }
      function q(t2) {
        for (var e2 = []; t2; )
          e2.push(t2), t2 = A(t2);
        return e2;
      }
      function B(t2) {
        return !!w.string(t2) && (k.document.querySelector(t2), true);
      }
      function V(t2, e2) {
        for (var n2 in e2)
          t2[n2] = e2[n2];
        return t2;
      }
      function W(t2, e2, n2) {
        return "parent" === t2 ? A(n2) : "self" === t2 ? e2.getRect(n2) : z(n2, t2);
      }
      function G(t2, e2, n2, r2) {
        var i2 = t2;
        return w.string(i2) ? i2 = W(i2, e2, n2) : w.func(i2) && (i2 = i2.apply(void 0, r2)), w.element(i2) && (i2 = L(i2)), i2;
      }
      function N(t2) {
        return t2 && { x: "x" in t2 ? t2.x : t2.left, y: "y" in t2 ? t2.y : t2.top };
      }
      function U(t2) {
        return !t2 || "x" in t2 && "y" in t2 || ((t2 = V({}, t2)).x = t2.left || 0, t2.y = t2.top || 0, t2.width = t2.width || (t2.right || 0) - t2.x, t2.height = t2.height || (t2.bottom || 0) - t2.y), t2;
      }
      function H(t2, e2, n2) {
        t2.left && (e2.left += n2.x), t2.right && (e2.right += n2.x), t2.top && (e2.top += n2.y), t2.bottom && (e2.bottom += n2.y), e2.width = e2.right - e2.left, e2.height = e2.bottom - e2.top;
      }
      function K(t2, e2, n2) {
        var r2 = n2 && t2.options[n2];
        return N(G(r2 && r2.origin || t2.options.origin, t2, e2, [t2 && e2])) || { x: 0, y: 0 };
      }
      function $(t2, e2) {
        var n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : function(t3) {
          return true;
        }, r2 = arguments.length > 3 ? arguments[3] : void 0;
        if (r2 = r2 || {}, w.string(t2) && -1 !== t2.search(" ") && (t2 = J(t2)), w.array(t2))
          return t2.forEach(function(t3) {
            return $(t3, e2, n2, r2);
          }), r2;
        if (w.object(t2) && (e2 = t2, t2 = ""), w.func(e2) && n2(t2))
          r2[t2] = r2[t2] || [], r2[t2].push(e2);
        else if (w.array(e2))
          for (var i2 = 0, o2 = e2; i2 < o2.length; i2++) {
            var a2 = o2[i2];
            $(t2, a2, n2, r2);
          }
        else if (w.object(e2))
          for (var s2 in e2) {
            $(J(s2).map(function(e3) {
              return "".concat(t2).concat(e3);
            }), e2[s2], n2, r2);
          }
        return r2;
      }
      function J(t2) {
        return t2.trim().split(/ +/);
      }
      var Q = function(t2, e2) {
        return Math.sqrt(t2 * t2 + e2 * e2);
      }, Z = ["webkit", "moz"];
      function tt(t2, e2) {
        t2.__set || (t2.__set = {});
        var n2 = function(n3) {
          if (Z.some(function(t3) {
            return 0 === n3.indexOf(t3);
          }))
            return 1;
          "function" != typeof t2[n3] && "__set" !== n3 && Object.defineProperty(t2, n3, { get: function() {
            return n3 in t2.__set ? t2.__set[n3] : t2.__set[n3] = e2[n3];
          }, set: function(e3) {
            t2.__set[n3] = e3;
          }, configurable: true });
        };
        for (var r2 in e2)
          n2(r2);
        return t2;
      }
      function et(t2, e2) {
        t2.page = t2.page || {}, t2.page.x = e2.page.x, t2.page.y = e2.page.y, t2.client = t2.client || {}, t2.client.x = e2.client.x, t2.client.y = e2.client.y, t2.timeStamp = e2.timeStamp;
      }
      function nt(t2) {
        t2.page.x = 0, t2.page.y = 0, t2.client.x = 0, t2.client.y = 0;
      }
      function rt(t2) {
        return t2 instanceof k.Event || t2 instanceof k.Touch;
      }
      function it(t2, e2, n2) {
        return t2 = t2 || "page", (n2 = n2 || {}).x = e2[t2 + "X"], n2.y = e2[t2 + "Y"], n2;
      }
      function ot(t2, e2) {
        return e2 = e2 || { x: 0, y: 0 }, I.isOperaMobile && rt(t2) ? (it("screen", t2, e2), e2.x += window.scrollX, e2.y += window.scrollY) : it("page", t2, e2), e2;
      }
      function at(t2) {
        return w.number(t2.pointerId) ? t2.pointerId : t2.identifier;
      }
      function st(t2, e2, n2) {
        var r2 = e2.length > 1 ? lt(e2) : e2[0];
        ot(r2, t2.page), function(t3, e3) {
          e3 = e3 || {}, I.isOperaMobile && rt(t3) ? it("screen", t3, e3) : it("client", t3, e3);
        }(r2, t2.client), t2.timeStamp = n2;
      }
      function ct(t2) {
        var e2 = [];
        return w.array(t2) ? (e2[0] = t2[0], e2[1] = t2[1]) : "touchend" === t2.type ? 1 === t2.touches.length ? (e2[0] = t2.touches[0], e2[1] = t2.changedTouches[0]) : 0 === t2.touches.length && (e2[0] = t2.changedTouches[0], e2[1] = t2.changedTouches[1]) : (e2[0] = t2.touches[0], e2[1] = t2.touches[1]), e2;
      }
      function lt(t2) {
        for (var e2 = { pageX: 0, pageY: 0, clientX: 0, clientY: 0, screenX: 0, screenY: 0 }, n2 = 0; n2 < t2.length; n2++) {
          var r2 = t2[n2];
          for (var i2 in e2)
            e2[i2] += r2[i2];
        }
        for (var o2 in e2)
          e2[o2] /= t2.length;
        return e2;
      }
      function ut(t2) {
        if (!t2.length)
          return null;
        var e2 = ct(t2), n2 = Math.min(e2[0].pageX, e2[1].pageX), r2 = Math.min(e2[0].pageY, e2[1].pageY), i2 = Math.max(e2[0].pageX, e2[1].pageX), o2 = Math.max(e2[0].pageY, e2[1].pageY);
        return { x: n2, y: r2, left: n2, top: r2, right: i2, bottom: o2, width: i2 - n2, height: o2 - r2 };
      }
      function pt(t2, e2) {
        var n2 = e2 + "X", r2 = e2 + "Y", i2 = ct(t2), o2 = i2[0][n2] - i2[1][n2], a2 = i2[0][r2] - i2[1][r2];
        return Q(o2, a2);
      }
      function ft(t2, e2) {
        var n2 = e2 + "X", r2 = e2 + "Y", i2 = ct(t2), o2 = i2[1][n2] - i2[0][n2], a2 = i2[1][r2] - i2[0][r2];
        return 180 * Math.atan2(a2, o2) / Math.PI;
      }
      function dt(t2) {
        return w.string(t2.pointerType) ? t2.pointerType : w.number(t2.pointerType) ? [void 0, void 0, "touch", "pen", "mouse"][t2.pointerType] : /touch/.test(t2.type || "") || t2 instanceof k.Touch ? "touch" : "mouse";
      }
      function ht(t2) {
        var e2 = w.func(t2.composedPath) ? t2.composedPath() : t2.path;
        return [X(e2 ? e2[0] : t2.target), X(t2.currentTarget)];
      }
      var vt = function() {
        function t2(e2) {
          r(this, t2), this.immediatePropagationStopped = false, this.propagationStopped = false, this._interaction = e2;
        }
        return o(t2, [{ key: "preventDefault", value: function() {
        } }, { key: "stopPropagation", value: function() {
          this.propagationStopped = true;
        } }, { key: "stopImmediatePropagation", value: function() {
          this.immediatePropagationStopped = this.propagationStopped = true;
        } }]), t2;
      }();
      Object.defineProperty(vt.prototype, "interaction", { get: function() {
        return this._interaction._proxy;
      }, set: function() {
      } });
      var gt = function(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          t2.push(r2);
        }
        return t2;
      }, mt = function(t2) {
        return gt([], t2);
      }, yt = function(t2, e2) {
        for (var n2 = 0; n2 < t2.length; n2++)
          if (e2(t2[n2], n2, t2))
            return n2;
        return -1;
      }, bt = function(t2, e2) {
        return t2[yt(t2, e2)];
      }, xt = function(t2) {
        s(n2, t2);
        var e2 = p(n2);
        function n2(t3, i2, o2) {
          var a2;
          r(this, n2), (a2 = e2.call(this, i2._interaction)).dropzone = void 0, a2.dragEvent = void 0, a2.relatedTarget = void 0, a2.draggable = void 0, a2.propagationStopped = false, a2.immediatePropagationStopped = false;
          var s2 = "dragleave" === o2 ? t3.prev : t3.cur, c2 = s2.element, l2 = s2.dropzone;
          return a2.type = o2, a2.target = c2, a2.currentTarget = c2, a2.dropzone = l2, a2.dragEvent = i2, a2.relatedTarget = i2.target, a2.draggable = i2.interactable, a2.timeStamp = i2.timeStamp, a2;
        }
        return o(n2, [{ key: "reject", value: function() {
          var t3 = this, e3 = this._interaction.dropState;
          if ("dropactivate" === this.type || this.dropzone && e3.cur.dropzone === this.dropzone && e3.cur.element === this.target)
            if (e3.prev.dropzone = this.dropzone, e3.prev.element = this.target, e3.rejected = true, e3.events.enter = null, this.stopImmediatePropagation(), "dropactivate" === this.type) {
              var r2 = e3.activeDrops, i2 = yt(r2, function(e4) {
                var n3 = e4.dropzone, r3 = e4.element;
                return n3 === t3.dropzone && r3 === t3.target;
              });
              e3.activeDrops.splice(i2, 1);
              var o2 = new n2(e3, this.dragEvent, "dropdeactivate");
              o2.dropzone = this.dropzone, o2.target = this.target, this.dropzone.fire(o2);
            } else
              this.dropzone.fire(new n2(e3, this.dragEvent, "dragleave"));
        } }, { key: "preventDefault", value: function() {
        } }, { key: "stopPropagation", value: function() {
          this.propagationStopped = true;
        } }, { key: "stopImmediatePropagation", value: function() {
          this.immediatePropagationStopped = this.propagationStopped = true;
        } }]), n2;
      }(vt);
      function wt(t2, e2) {
        for (var n2 = 0, r2 = t2.slice(); n2 < r2.length; n2++) {
          var i2 = r2[n2], o2 = i2.dropzone, a2 = i2.element;
          e2.dropzone = o2, e2.target = a2, o2.fire(e2), e2.propagationStopped = e2.immediatePropagationStopped = false;
        }
      }
      function Et(t2, e2) {
        for (var n2 = function(t3, e3) {
          for (var n3 = [], r3 = 0, i3 = t3.interactables.list; r3 < i3.length; r3++) {
            var o2 = i3[r3];
            if (o2.options.drop.enabled) {
              var a2 = o2.options.drop.accept;
              if (!(w.element(a2) && a2 !== e3 || w.string(a2) && !R(e3, a2) || w.func(a2) && !a2({ dropzone: o2, draggableElement: e3 })))
                for (var s2 = 0, c2 = o2.getAllElements(); s2 < c2.length; s2++) {
                  var l2 = c2[s2];
                  l2 !== e3 && n3.push({ dropzone: o2, element: l2, rect: o2.getRect(l2) });
                }
            }
          }
          return n3;
        }(t2, e2), r2 = 0; r2 < n2.length; r2++) {
          var i2 = n2[r2];
          i2.rect = i2.dropzone.getRect(i2.element);
        }
        return n2;
      }
      function Tt(t2, e2, n2) {
        for (var r2 = t2.dropState, i2 = t2.interactable, o2 = t2.element, a2 = [], s2 = 0, c2 = r2.activeDrops; s2 < c2.length; s2++) {
          var l2 = c2[s2], u2 = l2.dropzone, p2 = l2.element, f2 = l2.rect, d2 = u2.dropCheck(e2, n2, i2, o2, p2, f2);
          a2.push(d2 ? p2 : null);
        }
        var h2 = function(t3) {
          for (var e3, n3, r3, i3 = [], o3 = 0; o3 < t3.length; o3++) {
            var a3 = t3[o3], s3 = t3[e3];
            if (a3 && o3 !== e3)
              if (s3) {
                var c3 = C(a3), l3 = C(s3);
                if (c3 !== a3.ownerDocument)
                  if (l3 !== a3.ownerDocument)
                    if (c3 !== l3) {
                      i3 = i3.length ? i3 : j(s3);
                      var u3 = void 0;
                      if (s3 instanceof k.HTMLElement && a3 instanceof k.SVGElement && !(a3 instanceof k.SVGSVGElement)) {
                        if (a3 === l3)
                          continue;
                        u3 = a3.ownerSVGElement;
                      } else
                        u3 = a3;
                      for (var p3 = j(u3, s3.ownerDocument), f3 = 0; p3[f3] && p3[f3] === i3[f3]; )
                        f3++;
                      var d3 = [p3[f3 - 1], p3[f3], i3[f3]];
                      if (d3[0])
                        for (var h3 = d3[0].lastChild; h3; ) {
                          if (h3 === d3[1]) {
                            e3 = o3, i3 = p3;
                            break;
                          }
                          if (h3 === d3[2])
                            break;
                          h3 = h3.previousSibling;
                        }
                    } else
                      r3 = s3, void 0, void 0, (parseInt(y(n3 = a3).getComputedStyle(n3).zIndex, 10) || 0) >= (parseInt(y(r3).getComputedStyle(r3).zIndex, 10) || 0) && (e3 = o3);
                  else
                    e3 = o3;
              } else
                e3 = o3;
          }
          return e3;
        }(a2);
        return r2.activeDrops[h2] || null;
      }
      function St(t2, e2, n2) {
        var r2 = t2.dropState, i2 = { enter: null, leave: null, activate: null, deactivate: null, move: null, drop: null };
        return "dragstart" === n2.type && (i2.activate = new xt(r2, n2, "dropactivate"), i2.activate.target = null, i2.activate.dropzone = null), "dragend" === n2.type && (i2.deactivate = new xt(r2, n2, "dropdeactivate"), i2.deactivate.target = null, i2.deactivate.dropzone = null), r2.rejected || (r2.cur.element !== r2.prev.element && (r2.prev.dropzone && (i2.leave = new xt(r2, n2, "dragleave"), n2.dragLeave = i2.leave.target = r2.prev.element, n2.prevDropzone = i2.leave.dropzone = r2.prev.dropzone), r2.cur.dropzone && (i2.enter = new xt(r2, n2, "dragenter"), n2.dragEnter = r2.cur.element, n2.dropzone = r2.cur.dropzone)), "dragend" === n2.type && r2.cur.dropzone && (i2.drop = new xt(r2, n2, "drop"), n2.dropzone = r2.cur.dropzone, n2.relatedTarget = r2.cur.element), "dragmove" === n2.type && r2.cur.dropzone && (i2.move = new xt(r2, n2, "dropmove"), n2.dropzone = r2.cur.dropzone)), i2;
      }
      function _t(t2, e2) {
        var n2 = t2.dropState, r2 = n2.activeDrops, i2 = n2.cur, o2 = n2.prev;
        e2.leave && o2.dropzone.fire(e2.leave), e2.enter && i2.dropzone.fire(e2.enter), e2.move && i2.dropzone.fire(e2.move), e2.drop && i2.dropzone.fire(e2.drop), e2.deactivate && wt(r2, e2.deactivate), n2.prev.dropzone = i2.dropzone, n2.prev.element = i2.element;
      }
      function Pt(t2, e2) {
        var n2 = t2.interaction, r2 = t2.iEvent, i2 = t2.event;
        if ("dragmove" === r2.type || "dragend" === r2.type) {
          var o2 = n2.dropState;
          e2.dynamicDrop && (o2.activeDrops = Et(e2, n2.element));
          var a2 = r2, s2 = Tt(n2, a2, i2);
          o2.rejected = o2.rejected && !!s2 && s2.dropzone === o2.cur.dropzone && s2.element === o2.cur.element, o2.cur.dropzone = s2 && s2.dropzone, o2.cur.element = s2 && s2.element, o2.events = St(n2, 0, a2);
        }
      }
      var Ot = { id: "actions/drop", install: function(t2) {
        var e2 = t2.actions, n2 = t2.interactStatic, r2 = t2.Interactable, i2 = t2.defaults;
        t2.usePlugin(_), r2.prototype.dropzone = function(t3) {
          return function(t4, e3) {
            if (w.object(e3)) {
              if (t4.options.drop.enabled = false !== e3.enabled, e3.listeners) {
                var n3 = $(e3.listeners), r3 = Object.keys(n3).reduce(function(t5, e4) {
                  return t5[/^(enter|leave)/.test(e4) ? "drag".concat(e4) : /^(activate|deactivate|move)/.test(e4) ? "drop".concat(e4) : e4] = n3[e4], t5;
                }, {}), i3 = t4.options.drop.listeners;
                i3 && t4.off(i3), t4.on(r3), t4.options.drop.listeners = r3;
              }
              return w.func(e3.ondrop) && t4.on("drop", e3.ondrop), w.func(e3.ondropactivate) && t4.on("dropactivate", e3.ondropactivate), w.func(e3.ondropdeactivate) && t4.on("dropdeactivate", e3.ondropdeactivate), w.func(e3.ondragenter) && t4.on("dragenter", e3.ondragenter), w.func(e3.ondragleave) && t4.on("dragleave", e3.ondragleave), w.func(e3.ondropmove) && t4.on("dropmove", e3.ondropmove), /^(pointer|center)$/.test(e3.overlap) ? t4.options.drop.overlap = e3.overlap : w.number(e3.overlap) && (t4.options.drop.overlap = Math.max(Math.min(1, e3.overlap), 0)), "accept" in e3 && (t4.options.drop.accept = e3.accept), "checker" in e3 && (t4.options.drop.checker = e3.checker), t4;
            }
            if (w.bool(e3))
              return t4.options.drop.enabled = e3, t4;
            return t4.options.drop;
          }(this, t3);
        }, r2.prototype.dropCheck = function(t3, e3, n3, r3, i3, o2) {
          return function(t4, e4, n4, r4, i4, o3, a2) {
            var s2 = false;
            if (!(a2 = a2 || t4.getRect(o3)))
              return !!t4.options.drop.checker && t4.options.drop.checker(e4, n4, s2, t4, o3, r4, i4);
            var c2 = t4.options.drop.overlap;
            if ("pointer" === c2) {
              var l2 = K(r4, i4, "drag"), u2 = ot(e4);
              u2.x += l2.x, u2.y += l2.y;
              var p2 = u2.x > a2.left && u2.x < a2.right, f2 = u2.y > a2.top && u2.y < a2.bottom;
              s2 = p2 && f2;
            }
            var d2 = r4.getRect(i4);
            if (d2 && "center" === c2) {
              var h2 = d2.left + d2.width / 2, v2 = d2.top + d2.height / 2;
              s2 = h2 >= a2.left && h2 <= a2.right && v2 >= a2.top && v2 <= a2.bottom;
            }
            if (d2 && w.number(c2)) {
              s2 = Math.max(0, Math.min(a2.right, d2.right) - Math.max(a2.left, d2.left)) * Math.max(0, Math.min(a2.bottom, d2.bottom) - Math.max(a2.top, d2.top)) / (d2.width * d2.height) >= c2;
            }
            t4.options.drop.checker && (s2 = t4.options.drop.checker(e4, n4, s2, t4, o3, r4, i4));
            return s2;
          }(this, t3, e3, n3, r3, i3, o2);
        }, n2.dynamicDrop = function(e3) {
          return w.bool(e3) ? (t2.dynamicDrop = e3, n2) : t2.dynamicDrop;
        }, V(e2.phaselessTypes, { dragenter: true, dragleave: true, dropactivate: true, dropdeactivate: true, dropmove: true, drop: true }), e2.methodDict.drop = "dropzone", t2.dynamicDrop = false, i2.actions.drop = Ot.defaults;
      }, listeners: { "interactions:before-action-start": function(t2) {
        var e2 = t2.interaction;
        "drag" === e2.prepared.name && (e2.dropState = { cur: { dropzone: null, element: null }, prev: { dropzone: null, element: null }, rejected: null, events: null, activeDrops: [] });
      }, "interactions:after-action-start": function(t2, e2) {
        var n2 = t2.interaction, r2 = (t2.event, t2.iEvent);
        if ("drag" === n2.prepared.name) {
          var i2 = n2.dropState;
          i2.activeDrops = [], i2.events = {}, i2.activeDrops = Et(e2, n2.element), i2.events = St(n2, 0, r2), i2.events.activate && (wt(i2.activeDrops, i2.events.activate), e2.fire("actions/drop:start", { interaction: n2, dragEvent: r2 }));
        }
      }, "interactions:action-move": Pt, "interactions:after-action-move": function(t2, e2) {
        var n2 = t2.interaction, r2 = t2.iEvent;
        if ("drag" === n2.prepared.name) {
          var i2 = n2.dropState;
          _t(n2, i2.events), e2.fire("actions/drop:move", { interaction: n2, dragEvent: r2 }), i2.events = {};
        }
      }, "interactions:action-end": function(t2, e2) {
        if ("drag" === t2.interaction.prepared.name) {
          var n2 = t2.interaction, r2 = t2.iEvent;
          Pt(t2, e2), _t(n2, n2.dropState.events), e2.fire("actions/drop:end", { interaction: n2, dragEvent: r2 });
        }
      }, "interactions:stop": function(t2) {
        var e2 = t2.interaction;
        if ("drag" === e2.prepared.name) {
          var n2 = e2.dropState;
          n2 && (n2.activeDrops = null, n2.events = null, n2.cur.dropzone = null, n2.cur.element = null, n2.prev.dropzone = null, n2.prev.element = null, n2.rejected = false);
        }
      } }, getActiveDrops: Et, getDrop: Tt, getDropEvents: St, fireDropEvents: _t, filterEventType: function(t2) {
        return 0 === t2.search("drag") || 0 === t2.search("drop");
      }, defaults: { enabled: false, accept: null, overlap: "pointer" } }, kt = Ot;
      function Dt(t2) {
        var e2 = t2.interaction, n2 = t2.iEvent, r2 = t2.phase;
        if ("gesture" === e2.prepared.name) {
          var i2 = e2.pointers.map(function(t3) {
            return t3.pointer;
          }), o2 = "start" === r2, a2 = "end" === r2, s2 = e2.interactable.options.deltaSource;
          if (n2.touches = [i2[0], i2[1]], o2)
            n2.distance = pt(i2, s2), n2.box = ut(i2), n2.scale = 1, n2.ds = 0, n2.angle = ft(i2, s2), n2.da = 0, e2.gesture.startDistance = n2.distance, e2.gesture.startAngle = n2.angle;
          else if (a2 || e2.pointers.length < 2) {
            var c2 = e2.prevEvent;
            n2.distance = c2.distance, n2.box = c2.box, n2.scale = c2.scale, n2.ds = 0, n2.angle = c2.angle, n2.da = 0;
          } else
            n2.distance = pt(i2, s2), n2.box = ut(i2), n2.scale = n2.distance / e2.gesture.startDistance, n2.angle = ft(i2, s2), n2.ds = n2.scale - e2.gesture.scale, n2.da = n2.angle - e2.gesture.angle;
          e2.gesture.distance = n2.distance, e2.gesture.angle = n2.angle, w.number(n2.scale) && n2.scale !== 1 / 0 && !isNaN(n2.scale) && (e2.gesture.scale = n2.scale);
        }
      }
      var It = { id: "actions/gesture", before: ["actions/drag", "actions/resize"], install: function(t2) {
        var e2 = t2.actions, n2 = t2.Interactable, r2 = t2.defaults;
        n2.prototype.gesturable = function(t3) {
          return w.object(t3) ? (this.options.gesture.enabled = false !== t3.enabled, this.setPerAction("gesture", t3), this.setOnEvents("gesture", t3), this) : w.bool(t3) ? (this.options.gesture.enabled = t3, this) : this.options.gesture;
        }, e2.map.gesture = It, e2.methodDict.gesture = "gesturable", r2.actions.gesture = It.defaults;
      }, listeners: { "interactions:action-start": Dt, "interactions:action-move": Dt, "interactions:action-end": Dt, "interactions:new": function(t2) {
        t2.interaction.gesture = { angle: 0, distance: 0, scale: 1, startAngle: 0, startDistance: 0 };
      }, "auto-start:check": function(t2) {
        if (!(t2.interaction.pointers.length < 2)) {
          var e2 = t2.interactable.options.gesture;
          if (e2 && e2.enabled)
            return t2.action = { name: "gesture" }, false;
        }
      } }, defaults: {}, getCursor: function() {
        return "";
      }, filterEventType: function(t2) {
        return 0 === t2.search("gesture");
      } }, Mt = It;
      function zt(t2, e2, n2, r2, i2, o2, a2) {
        if (!e2)
          return false;
        if (true === e2) {
          var s2 = w.number(o2.width) ? o2.width : o2.right - o2.left, c2 = w.number(o2.height) ? o2.height : o2.bottom - o2.top;
          if (a2 = Math.min(a2, Math.abs(("left" === t2 || "right" === t2 ? s2 : c2) / 2)), s2 < 0 && ("left" === t2 ? t2 = "right" : "right" === t2 && (t2 = "left")), c2 < 0 && ("top" === t2 ? t2 = "bottom" : "bottom" === t2 && (t2 = "top")), "left" === t2) {
            var l2 = s2 >= 0 ? o2.left : o2.right;
            return n2.x < l2 + a2;
          }
          if ("top" === t2) {
            var u2 = c2 >= 0 ? o2.top : o2.bottom;
            return n2.y < u2 + a2;
          }
          if ("right" === t2)
            return n2.x > (s2 >= 0 ? o2.right : o2.left) - a2;
          if ("bottom" === t2)
            return n2.y > (c2 >= 0 ? o2.bottom : o2.top) - a2;
        }
        return !!w.element(r2) && (w.element(e2) ? e2 === r2 : F(r2, e2, i2));
      }
      function At(t2) {
        var e2 = t2.iEvent, n2 = t2.interaction;
        if ("resize" === n2.prepared.name && n2.resizeAxes) {
          var r2 = e2;
          n2.interactable.options.resize.square ? ("y" === n2.resizeAxes ? r2.delta.x = r2.delta.y : r2.delta.y = r2.delta.x, r2.axes = "xy") : (r2.axes = n2.resizeAxes, "x" === n2.resizeAxes ? r2.delta.y = 0 : "y" === n2.resizeAxes && (r2.delta.x = 0));
        }
      }
      var Rt, Ct, jt = { id: "actions/resize", before: ["actions/drag"], install: function(t2) {
        var e2 = t2.actions, n2 = t2.browser, r2 = t2.Interactable, i2 = t2.defaults;
        jt.cursors = function(t3) {
          return t3.isIe9 ? { x: "e-resize", y: "s-resize", xy: "se-resize", top: "n-resize", left: "w-resize", bottom: "s-resize", right: "e-resize", topleft: "se-resize", bottomright: "se-resize", topright: "ne-resize", bottomleft: "ne-resize" } : { x: "ew-resize", y: "ns-resize", xy: "nwse-resize", top: "ns-resize", left: "ew-resize", bottom: "ns-resize", right: "ew-resize", topleft: "nwse-resize", bottomright: "nwse-resize", topright: "nesw-resize", bottomleft: "nesw-resize" };
        }(n2), jt.defaultMargin = n2.supportsTouch || n2.supportsPointerEvent ? 20 : 10, r2.prototype.resizable = function(e3) {
          return function(t3, e4, n3) {
            if (w.object(e4))
              return t3.options.resize.enabled = false !== e4.enabled, t3.setPerAction("resize", e4), t3.setOnEvents("resize", e4), w.string(e4.axis) && /^x$|^y$|^xy$/.test(e4.axis) ? t3.options.resize.axis = e4.axis : null === e4.axis && (t3.options.resize.axis = n3.defaults.actions.resize.axis), w.bool(e4.preserveAspectRatio) ? t3.options.resize.preserveAspectRatio = e4.preserveAspectRatio : w.bool(e4.square) && (t3.options.resize.square = e4.square), t3;
            if (w.bool(e4))
              return t3.options.resize.enabled = e4, t3;
            return t3.options.resize;
          }(this, e3, t2);
        }, e2.map.resize = jt, e2.methodDict.resize = "resizable", i2.actions.resize = jt.defaults;
      }, listeners: { "interactions:new": function(t2) {
        t2.interaction.resizeAxes = "xy";
      }, "interactions:action-start": function(t2) {
        !function(t3) {
          var e2 = t3.iEvent, n2 = t3.interaction;
          if ("resize" === n2.prepared.name && n2.prepared.edges) {
            var r2 = e2, i2 = n2.rect;
            n2._rects = { start: V({}, i2), corrected: V({}, i2), previous: V({}, i2), delta: { left: 0, right: 0, width: 0, top: 0, bottom: 0, height: 0 } }, r2.edges = n2.prepared.edges, r2.rect = n2._rects.corrected, r2.deltaRect = n2._rects.delta;
          }
        }(t2), At(t2);
      }, "interactions:action-move": function(t2) {
        !function(t3) {
          var e2 = t3.iEvent, n2 = t3.interaction;
          if ("resize" === n2.prepared.name && n2.prepared.edges) {
            var r2 = e2, i2 = n2.interactable.options.resize.invert, o2 = "reposition" === i2 || "negate" === i2, a2 = n2.rect, s2 = n2._rects, c2 = s2.start, l2 = s2.corrected, u2 = s2.delta, p2 = s2.previous;
            if (V(p2, l2), o2) {
              if (V(l2, a2), "reposition" === i2) {
                if (l2.top > l2.bottom) {
                  var f2 = l2.top;
                  l2.top = l2.bottom, l2.bottom = f2;
                }
                if (l2.left > l2.right) {
                  var d2 = l2.left;
                  l2.left = l2.right, l2.right = d2;
                }
              }
            } else
              l2.top = Math.min(a2.top, c2.bottom), l2.bottom = Math.max(a2.bottom, c2.top), l2.left = Math.min(a2.left, c2.right), l2.right = Math.max(a2.right, c2.left);
            for (var h2 in l2.width = l2.right - l2.left, l2.height = l2.bottom - l2.top, l2)
              u2[h2] = l2[h2] - p2[h2];
            r2.edges = n2.prepared.edges, r2.rect = l2, r2.deltaRect = u2;
          }
        }(t2), At(t2);
      }, "interactions:action-end": function(t2) {
        var e2 = t2.iEvent, n2 = t2.interaction;
        if ("resize" === n2.prepared.name && n2.prepared.edges) {
          var r2 = e2;
          r2.edges = n2.prepared.edges, r2.rect = n2._rects.corrected, r2.deltaRect = n2._rects.delta;
        }
      }, "auto-start:check": function(t2) {
        var e2 = t2.interaction, n2 = t2.interactable, r2 = t2.element, i2 = t2.rect, o2 = t2.buttons;
        if (i2) {
          var a2 = V({}, e2.coords.cur.page), s2 = n2.options.resize;
          if (s2 && s2.enabled && (!e2.pointerIsDown || !/mouse|pointer/.test(e2.pointerType) || 0 != (o2 & s2.mouseButtons))) {
            if (w.object(s2.edges)) {
              var c2 = { left: false, right: false, top: false, bottom: false };
              for (var l2 in c2)
                c2[l2] = zt(l2, s2.edges[l2], a2, e2._latestPointer.eventTarget, r2, i2, s2.margin || jt.defaultMargin);
              c2.left = c2.left && !c2.right, c2.top = c2.top && !c2.bottom, (c2.left || c2.right || c2.top || c2.bottom) && (t2.action = { name: "resize", edges: c2 });
            } else {
              var u2 = "y" !== s2.axis && a2.x > i2.right - jt.defaultMargin, p2 = "x" !== s2.axis && a2.y > i2.bottom - jt.defaultMargin;
              (u2 || p2) && (t2.action = { name: "resize", axes: (u2 ? "x" : "") + (p2 ? "y" : "") });
            }
            return !t2.action && void 0;
          }
        }
      } }, defaults: { square: false, preserveAspectRatio: false, axis: "xy", margin: NaN, edges: null, invert: "none" }, cursors: null, getCursor: function(t2) {
        var e2 = t2.edges, n2 = t2.axis, r2 = t2.name, i2 = jt.cursors, o2 = null;
        if (n2)
          o2 = i2[r2 + n2];
        else if (e2) {
          for (var a2 = "", s2 = 0, c2 = ["top", "bottom", "left", "right"]; s2 < c2.length; s2++) {
            var l2 = c2[s2];
            e2[l2] && (a2 += l2);
          }
          o2 = i2[a2];
        }
        return o2;
      }, filterEventType: function(t2) {
        return 0 === t2.search("resize");
      }, defaultMargin: null }, Ft = jt, Xt = { id: "actions", install: function(t2) {
        t2.usePlugin(Mt), t2.usePlugin(Ft), t2.usePlugin(_), t2.usePlugin(kt);
      } }, Yt = 0;
      var Lt = { request: function(t2) {
        return Rt(t2);
      }, cancel: function(t2) {
        return Ct(t2);
      }, init: function(t2) {
        if (Rt = t2.requestAnimationFrame, Ct = t2.cancelAnimationFrame, !Rt)
          for (var e2 = ["ms", "moz", "webkit", "o"], n2 = 0; n2 < e2.length; n2++) {
            var r2 = e2[n2];
            Rt = t2["".concat(r2, "RequestAnimationFrame")], Ct = t2["".concat(r2, "CancelAnimationFrame")] || t2["".concat(r2, "CancelRequestAnimationFrame")];
          }
        Rt = Rt && Rt.bind(t2), Ct = Ct && Ct.bind(t2), Rt || (Rt = function(e3) {
          var n3 = Date.now(), r3 = Math.max(0, 16 - (n3 - Yt)), i2 = t2.setTimeout(function() {
            e3(n3 + r3);
          }, r3);
          return Yt = n3 + r3, i2;
        }, Ct = function(t3) {
          return clearTimeout(t3);
        });
      } };
      var qt = { defaults: { enabled: false, margin: 60, container: null, speed: 300 }, now: Date.now, interaction: null, i: 0, x: 0, y: 0, isScrolling: false, prevTime: 0, margin: 0, speed: 0, start: function(t2) {
        qt.isScrolling = true, Lt.cancel(qt.i), t2.autoScroll = qt, qt.interaction = t2, qt.prevTime = qt.now(), qt.i = Lt.request(qt.scroll);
      }, stop: function() {
        qt.isScrolling = false, qt.interaction && (qt.interaction.autoScroll = null), Lt.cancel(qt.i);
      }, scroll: function() {
        var t2 = qt.interaction, e2 = t2.interactable, n2 = t2.element, r2 = t2.prepared.name, i2 = e2.options[r2].autoScroll, o2 = Bt(i2.container, e2, n2), a2 = qt.now(), s2 = (a2 - qt.prevTime) / 1e3, c2 = i2.speed * s2;
        if (c2 >= 1) {
          var l2 = { x: qt.x * c2, y: qt.y * c2 };
          if (l2.x || l2.y) {
            var u2 = Vt(o2);
            w.window(o2) ? o2.scrollBy(l2.x, l2.y) : o2 && (o2.scrollLeft += l2.x, o2.scrollTop += l2.y);
            var p2 = Vt(o2), f2 = { x: p2.x - u2.x, y: p2.y - u2.y };
            (f2.x || f2.y) && e2.fire({ type: "autoscroll", target: n2, interactable: e2, delta: f2, interaction: t2, container: o2 });
          }
          qt.prevTime = a2;
        }
        qt.isScrolling && (Lt.cancel(qt.i), qt.i = Lt.request(qt.scroll));
      }, check: function(t2, e2) {
        var n2;
        return null == (n2 = t2.options[e2].autoScroll) ? void 0 : n2.enabled;
      }, onInteractionMove: function(t2) {
        var e2 = t2.interaction, n2 = t2.pointer;
        if (e2.interacting() && qt.check(e2.interactable, e2.prepared.name))
          if (e2.simulation)
            qt.x = qt.y = 0;
          else {
            var r2, i2, o2, a2, s2 = e2.interactable, c2 = e2.element, l2 = e2.prepared.name, u2 = s2.options[l2].autoScroll, p2 = Bt(u2.container, s2, c2);
            if (w.window(p2))
              a2 = n2.clientX < qt.margin, r2 = n2.clientY < qt.margin, i2 = n2.clientX > p2.innerWidth - qt.margin, o2 = n2.clientY > p2.innerHeight - qt.margin;
            else {
              var f2 = Y(p2);
              a2 = n2.clientX < f2.left + qt.margin, r2 = n2.clientY < f2.top + qt.margin, i2 = n2.clientX > f2.right - qt.margin, o2 = n2.clientY > f2.bottom - qt.margin;
            }
            qt.x = i2 ? 1 : a2 ? -1 : 0, qt.y = o2 ? 1 : r2 ? -1 : 0, qt.isScrolling || (qt.margin = u2.margin, qt.speed = u2.speed, qt.start(e2));
          }
      } };
      function Bt(t2, e2, n2) {
        return (w.string(t2) ? W(t2, e2, n2) : t2) || y(n2);
      }
      function Vt(t2) {
        return w.window(t2) && (t2 = window.document.body), { x: t2.scrollLeft, y: t2.scrollTop };
      }
      var Wt = { id: "auto-scroll", install: function(t2) {
        var e2 = t2.defaults, n2 = t2.actions;
        t2.autoScroll = qt, qt.now = function() {
          return t2.now();
        }, n2.phaselessTypes.autoscroll = true, e2.perAction.autoScroll = qt.defaults;
      }, listeners: { "interactions:new": function(t2) {
        t2.interaction.autoScroll = null;
      }, "interactions:destroy": function(t2) {
        t2.interaction.autoScroll = null, qt.stop(), qt.interaction && (qt.interaction = null);
      }, "interactions:stop": qt.stop, "interactions:action-move": function(t2) {
        return qt.onInteractionMove(t2);
      } } }, Gt = Wt;
      function Nt(t2, e2) {
        var n2 = false;
        return function() {
          return n2 || (g.console.warn(e2), n2 = true), t2.apply(this, arguments);
        };
      }
      function Ut(t2, e2) {
        return t2.name = e2.name, t2.axis = e2.axis, t2.edges = e2.edges, t2;
      }
      function Ht(t2) {
        return w.bool(t2) ? (this.options.styleCursor = t2, this) : null === t2 ? (delete this.options.styleCursor, this) : this.options.styleCursor;
      }
      function Kt(t2) {
        return w.func(t2) ? (this.options.actionChecker = t2, this) : null === t2 ? (delete this.options.actionChecker, this) : this.options.actionChecker;
      }
      var $t = { id: "auto-start/interactableMethods", install: function(t2) {
        var e2 = t2.Interactable;
        e2.prototype.getAction = function(e3, n2, r2, i2) {
          var o2 = function(t3, e4, n3, r3, i3) {
            var o3 = t3.getRect(r3), a2 = e4.buttons || { 0: 1, 1: 4, 3: 8, 4: 16 }[e4.button], s2 = { action: null, interactable: t3, interaction: n3, element: r3, rect: o3, buttons: a2 };
            return i3.fire("auto-start:check", s2), s2.action;
          }(this, n2, r2, i2, t2);
          return this.options.actionChecker ? this.options.actionChecker(e3, n2, o2, this, i2, r2) : o2;
        }, e2.prototype.ignoreFrom = Nt(function(t3) {
          return this._backCompatOption("ignoreFrom", t3);
        }, "Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue})."), e2.prototype.allowFrom = Nt(function(t3) {
          return this._backCompatOption("allowFrom", t3);
        }, "Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue})."), e2.prototype.actionChecker = Kt, e2.prototype.styleCursor = Ht;
      } };
      function Jt(t2, e2, n2, r2, i2) {
        return e2.testIgnoreAllow(e2.options[t2.name], n2, r2) && e2.options[t2.name].enabled && ee(e2, n2, t2, i2) ? t2 : null;
      }
      function Qt(t2, e2, n2, r2, i2, o2, a2) {
        for (var s2 = 0, c2 = r2.length; s2 < c2; s2++) {
          var l2 = r2[s2], u2 = i2[s2], p2 = l2.getAction(e2, n2, t2, u2);
          if (p2) {
            var f2 = Jt(p2, l2, u2, o2, a2);
            if (f2)
              return { action: f2, interactable: l2, element: u2 };
          }
        }
        return { action: null, interactable: null, element: null };
      }
      function Zt(t2, e2, n2, r2, i2) {
        var o2 = [], a2 = [], s2 = r2;
        function c2(t3) {
          o2.push(t3), a2.push(s2);
        }
        for (; w.element(s2); ) {
          o2 = [], a2 = [], i2.interactables.forEachMatch(s2, c2);
          var l2 = Qt(t2, e2, n2, o2, a2, r2, i2);
          if (l2.action && !l2.interactable.options[l2.action.name].manualStart)
            return l2;
          s2 = A(s2);
        }
        return { action: null, interactable: null, element: null };
      }
      function te(t2, e2, n2) {
        var r2 = e2.action, i2 = e2.interactable, o2 = e2.element;
        r2 = r2 || { name: null }, t2.interactable = i2, t2.element = o2, Ut(t2.prepared, r2), t2.rect = i2 && r2.name ? i2.getRect(o2) : null, ie(t2, n2), n2.fire("autoStart:prepared", { interaction: t2 });
      }
      function ee(t2, e2, n2, r2) {
        var i2 = t2.options, o2 = i2[n2.name].max, a2 = i2[n2.name].maxPerElement, s2 = r2.autoStart.maxInteractions, c2 = 0, l2 = 0, u2 = 0;
        if (!(o2 && a2 && s2))
          return false;
        for (var p2 = 0, f2 = r2.interactions.list; p2 < f2.length; p2++) {
          var d2 = f2[p2], h2 = d2.prepared.name;
          if (d2.interacting()) {
            if (++c2 >= s2)
              return false;
            if (d2.interactable === t2) {
              if ((l2 += h2 === n2.name ? 1 : 0) >= o2)
                return false;
              if (d2.element === e2 && (u2++, h2 === n2.name && u2 >= a2))
                return false;
            }
          }
        }
        return s2 > 0;
      }
      function ne(t2, e2) {
        return w.number(t2) ? (e2.autoStart.maxInteractions = t2, this) : e2.autoStart.maxInteractions;
      }
      function re(t2, e2, n2) {
        var r2 = n2.autoStart.cursorElement;
        r2 && r2 !== t2 && (r2.style.cursor = ""), t2.ownerDocument.documentElement.style.cursor = e2, t2.style.cursor = e2, n2.autoStart.cursorElement = e2 ? t2 : null;
      }
      function ie(t2, e2) {
        var n2 = t2.interactable, r2 = t2.element, i2 = t2.prepared;
        if ("mouse" === t2.pointerType && n2 && n2.options.styleCursor) {
          var o2 = "";
          if (i2.name) {
            var a2 = n2.options[i2.name].cursorChecker;
            o2 = w.func(a2) ? a2(i2, n2, r2, t2._interacting) : e2.actions.map[i2.name].getCursor(i2);
          }
          re(t2.element, o2 || "", e2);
        } else
          e2.autoStart.cursorElement && re(e2.autoStart.cursorElement, "", e2);
      }
      var oe = { id: "auto-start/base", before: ["actions"], install: function(t2) {
        var e2 = t2.interactStatic, n2 = t2.defaults;
        t2.usePlugin($t), n2.base.actionChecker = null, n2.base.styleCursor = true, V(n2.perAction, { manualStart: false, max: 1 / 0, maxPerElement: 1, allowFrom: null, ignoreFrom: null, mouseButtons: 1 }), e2.maxInteractions = function(e3) {
          return ne(e3, t2);
        }, t2.autoStart = { maxInteractions: 1 / 0, withinInteractionLimit: ee, cursorElement: null };
      }, listeners: { "interactions:down": function(t2, e2) {
        var n2 = t2.interaction, r2 = t2.pointer, i2 = t2.event, o2 = t2.eventTarget;
        n2.interacting() || te(n2, Zt(n2, r2, i2, o2, e2), e2);
      }, "interactions:move": function(t2, e2) {
        !function(t3, e3) {
          var n2 = t3.interaction, r2 = t3.pointer, i2 = t3.event, o2 = t3.eventTarget;
          "mouse" !== n2.pointerType || n2.pointerIsDown || n2.interacting() || te(n2, Zt(n2, r2, i2, o2, e3), e3);
        }(t2, e2), function(t3, e3) {
          var n2 = t3.interaction;
          if (n2.pointerIsDown && !n2.interacting() && n2.pointerWasMoved && n2.prepared.name) {
            e3.fire("autoStart:before-start", t3);
            var r2 = n2.interactable, i2 = n2.prepared.name;
            i2 && r2 && (r2.options[i2].manualStart || !ee(r2, n2.element, n2.prepared, e3) ? n2.stop() : (n2.start(n2.prepared, r2, n2.element), ie(n2, e3)));
          }
        }(t2, e2);
      }, "interactions:stop": function(t2, e2) {
        var n2 = t2.interaction, r2 = n2.interactable;
        r2 && r2.options.styleCursor && re(n2.element, "", e2);
      } }, maxInteractions: ne, withinInteractionLimit: ee, validateAction: Jt }, ae = oe;
      var se = { id: "auto-start/dragAxis", listeners: { "autoStart:before-start": function(t2, e2) {
        var n2 = t2.interaction, r2 = t2.eventTarget, i2 = t2.dx, o2 = t2.dy;
        if ("drag" === n2.prepared.name) {
          var a2 = Math.abs(i2), s2 = Math.abs(o2), c2 = n2.interactable.options.drag, l2 = c2.startAxis, u2 = a2 > s2 ? "x" : a2 < s2 ? "y" : "xy";
          if (n2.prepared.axis = "start" === c2.lockAxis ? u2[0] : c2.lockAxis, "xy" !== u2 && "xy" !== l2 && l2 !== u2) {
            n2.prepared.name = null;
            for (var p2 = r2, f2 = function(t3) {
              if (t3 !== n2.interactable) {
                var i3 = n2.interactable.options.drag;
                if (!i3.manualStart && t3.testIgnoreAllow(i3, p2, r2)) {
                  var o3 = t3.getAction(n2.downPointer, n2.downEvent, n2, p2);
                  if (o3 && "drag" === o3.name && function(t4, e3) {
                    if (!e3)
                      return false;
                    var n3 = e3.options.drag.startAxis;
                    return "xy" === t4 || "xy" === n3 || n3 === t4;
                  }(u2, t3) && ae.validateAction(o3, t3, p2, r2, e2))
                    return t3;
                }
              }
            }; w.element(p2); ) {
              var d2 = e2.interactables.forEachMatch(p2, f2);
              if (d2) {
                n2.prepared.name = "drag", n2.interactable = d2, n2.element = p2;
                break;
              }
              p2 = A(p2);
            }
          }
        }
      } } };
      function ce(t2) {
        var e2 = t2.prepared && t2.prepared.name;
        if (!e2)
          return null;
        var n2 = t2.interactable.options;
        return n2[e2].hold || n2[e2].delay;
      }
      var le = { id: "auto-start/hold", install: function(t2) {
        var e2 = t2.defaults;
        t2.usePlugin(ae), e2.perAction.hold = 0, e2.perAction.delay = 0;
      }, listeners: { "interactions:new": function(t2) {
        t2.interaction.autoStartHoldTimer = null;
      }, "autoStart:prepared": function(t2) {
        var e2 = t2.interaction, n2 = ce(e2);
        n2 > 0 && (e2.autoStartHoldTimer = setTimeout(function() {
          e2.start(e2.prepared, e2.interactable, e2.element);
        }, n2));
      }, "interactions:move": function(t2) {
        var e2 = t2.interaction, n2 = t2.duplicate;
        e2.autoStartHoldTimer && e2.pointerWasMoved && !n2 && (clearTimeout(e2.autoStartHoldTimer), e2.autoStartHoldTimer = null);
      }, "autoStart:before-start": function(t2) {
        var e2 = t2.interaction;
        ce(e2) > 0 && (e2.prepared.name = null);
      } }, getHoldDuration: ce }, ue = le, pe = { id: "auto-start", install: function(t2) {
        t2.usePlugin(ae), t2.usePlugin(ue), t2.usePlugin(se);
      } }, fe = function(t2) {
        return /^(always|never|auto)$/.test(t2) ? (this.options.preventDefault = t2, this) : w.bool(t2) ? (this.options.preventDefault = t2 ? "always" : "never", this) : this.options.preventDefault;
      };
      function de(t2) {
        var e2 = t2.interaction, n2 = t2.event;
        e2.interactable && e2.interactable.checkAndPreventDefault(n2);
      }
      var he = { id: "core/interactablePreventDefault", install: function(t2) {
        var e2 = t2.Interactable;
        e2.prototype.preventDefault = fe, e2.prototype.checkAndPreventDefault = function(e3) {
          return function(t3, e4, n2) {
            var r2 = t3.options.preventDefault;
            if ("never" !== r2)
              if ("always" !== r2) {
                if (e4.events.supportsPassive && /^touch(start|move)$/.test(n2.type)) {
                  var i2 = y(n2.target).document, o2 = e4.getDocOptions(i2);
                  if (!o2 || !o2.events || false !== o2.events.passive)
                    return;
                }
                /^(mouse|pointer|touch)*(down|start)/i.test(n2.type) || w.element(n2.target) && R(n2.target, "input,select,textarea,[contenteditable=true],[contenteditable=true] *") || n2.preventDefault();
              } else
                n2.preventDefault();
          }(this, t2, e3);
        }, t2.interactions.docEvents.push({ type: "dragstart", listener: function(e3) {
          for (var n2 = 0, r2 = t2.interactions.list; n2 < r2.length; n2++) {
            var i2 = r2[n2];
            if (i2.element && (i2.element === e3.target || M(i2.element, e3.target)))
              return void i2.interactable.checkAndPreventDefault(e3);
          }
        } });
      }, listeners: ["down", "move", "up", "cancel"].reduce(function(t2, e2) {
        return t2["interactions:".concat(e2)] = de, t2;
      }, {}) };
      function ve(t2, e2) {
        if (e2.phaselessTypes[t2])
          return true;
        for (var n2 in e2.map)
          if (0 === t2.indexOf(n2) && t2.substr(n2.length) in e2.phases)
            return true;
        return false;
      }
      function ge(t2) {
        var e2 = {};
        for (var n2 in t2) {
          var r2 = t2[n2];
          w.plainObject(r2) ? e2[n2] = ge(r2) : w.array(r2) ? e2[n2] = mt(r2) : e2[n2] = r2;
        }
        return e2;
      }
      var me = function() {
        function t2(e2) {
          r(this, t2), this.states = [], this.startOffset = { left: 0, right: 0, top: 0, bottom: 0 }, this.startDelta = void 0, this.result = void 0, this.endResult = void 0, this.startEdges = void 0, this.edges = void 0, this.interaction = void 0, this.interaction = e2, this.result = ye(), this.edges = { left: false, right: false, top: false, bottom: false };
        }
        return o(t2, [{ key: "start", value: function(t3, e2) {
          var n2, r2, i2 = t3.phase, o2 = this.interaction, a2 = function(t4) {
            var e3 = t4.interactable.options[t4.prepared.name], n3 = e3.modifiers;
            if (n3 && n3.length)
              return n3;
            return ["snap", "snapSize", "snapEdges", "restrict", "restrictEdges", "restrictSize"].map(function(t5) {
              var n4 = e3[t5];
              return n4 && n4.enabled && { options: n4, methods: n4._methods };
            }).filter(function(t5) {
              return !!t5;
            });
          }(o2);
          this.prepareStates(a2), this.startEdges = V({}, o2.edges), this.edges = V({}, this.startEdges), this.startOffset = (n2 = o2.rect, r2 = e2, n2 ? { left: r2.x - n2.left, top: r2.y - n2.top, right: n2.right - r2.x, bottom: n2.bottom - r2.y } : { left: 0, top: 0, right: 0, bottom: 0 }), this.startDelta = { x: 0, y: 0 };
          var s2 = this.fillArg({ phase: i2, pageCoords: e2, preEnd: false });
          return this.result = ye(), this.startAll(s2), this.result = this.setAll(s2);
        } }, { key: "fillArg", value: function(t3) {
          var e2 = this.interaction;
          return t3.interaction = e2, t3.interactable = e2.interactable, t3.element = e2.element, t3.rect || (t3.rect = e2.rect), t3.edges || (t3.edges = this.startEdges), t3.startOffset = this.startOffset, t3;
        } }, { key: "startAll", value: function(t3) {
          for (var e2 = 0, n2 = this.states; e2 < n2.length; e2++) {
            var r2 = n2[e2];
            r2.methods.start && (t3.state = r2, r2.methods.start(t3));
          }
        } }, { key: "setAll", value: function(t3) {
          var e2 = t3.phase, n2 = t3.preEnd, r2 = t3.skipModifiers, i2 = t3.rect, o2 = t3.edges;
          t3.coords = V({}, t3.pageCoords), t3.rect = V({}, i2), t3.edges = V({}, o2);
          for (var a2 = r2 ? this.states.slice(r2) : this.states, s2 = ye(t3.coords, t3.rect), c2 = 0; c2 < a2.length; c2++) {
            var l2, u2 = a2[c2], p2 = u2.options, f2 = V({}, t3.coords), d2 = null;
            null != (l2 = u2.methods) && l2.set && this.shouldDo(p2, n2, e2) && (t3.state = u2, d2 = u2.methods.set(t3), H(t3.edges, t3.rect, { x: t3.coords.x - f2.x, y: t3.coords.y - f2.y })), s2.eventProps.push(d2);
          }
          V(this.edges, t3.edges), s2.delta.x = t3.coords.x - t3.pageCoords.x, s2.delta.y = t3.coords.y - t3.pageCoords.y, s2.rectDelta.left = t3.rect.left - i2.left, s2.rectDelta.right = t3.rect.right - i2.right, s2.rectDelta.top = t3.rect.top - i2.top, s2.rectDelta.bottom = t3.rect.bottom - i2.bottom;
          var h2 = this.result.coords, v2 = this.result.rect;
          if (h2 && v2) {
            var g2 = s2.rect.left !== v2.left || s2.rect.right !== v2.right || s2.rect.top !== v2.top || s2.rect.bottom !== v2.bottom;
            s2.changed = g2 || h2.x !== s2.coords.x || h2.y !== s2.coords.y;
          }
          return s2;
        } }, { key: "applyToInteraction", value: function(t3) {
          var e2 = this.interaction, n2 = t3.phase, r2 = e2.coords.cur, i2 = e2.coords.start, o2 = this.result, a2 = this.startDelta, s2 = o2.delta;
          "start" === n2 && V(this.startDelta, o2.delta);
          for (var c2 = 0, l2 = [[i2, a2], [r2, s2]]; c2 < l2.length; c2++) {
            var u2 = l2[c2], p2 = u2[0], f2 = u2[1];
            p2.page.x += f2.x, p2.page.y += f2.y, p2.client.x += f2.x, p2.client.y += f2.y;
          }
          var d2 = this.result.rectDelta, h2 = t3.rect || e2.rect;
          h2.left += d2.left, h2.right += d2.right, h2.top += d2.top, h2.bottom += d2.bottom, h2.width = h2.right - h2.left, h2.height = h2.bottom - h2.top;
        } }, { key: "setAndApply", value: function(t3) {
          var e2 = this.interaction, n2 = t3.phase, r2 = t3.preEnd, i2 = t3.skipModifiers, o2 = this.setAll(this.fillArg({ preEnd: r2, phase: n2, pageCoords: t3.modifiedCoords || e2.coords.cur.page }));
          if (this.result = o2, !o2.changed && (!i2 || i2 < this.states.length) && e2.interacting())
            return false;
          if (t3.modifiedCoords) {
            var a2 = e2.coords.cur.page, s2 = { x: t3.modifiedCoords.x - a2.x, y: t3.modifiedCoords.y - a2.y };
            o2.coords.x += s2.x, o2.coords.y += s2.y, o2.delta.x += s2.x, o2.delta.y += s2.y;
          }
          this.applyToInteraction(t3);
        } }, { key: "beforeEnd", value: function(t3) {
          var e2 = t3.interaction, n2 = t3.event, r2 = this.states;
          if (r2 && r2.length) {
            for (var i2 = false, o2 = 0; o2 < r2.length; o2++) {
              var a2 = r2[o2];
              t3.state = a2;
              var s2 = a2.options, c2 = a2.methods, l2 = c2.beforeEnd && c2.beforeEnd(t3);
              if (l2)
                return this.endResult = l2, false;
              i2 = i2 || !i2 && this.shouldDo(s2, true, t3.phase, true);
            }
            i2 && e2.move({ event: n2, preEnd: true });
          }
        } }, { key: "stop", value: function(t3) {
          var e2 = t3.interaction;
          if (this.states && this.states.length) {
            var n2 = V({ states: this.states, interactable: e2.interactable, element: e2.element, rect: null }, t3);
            this.fillArg(n2);
            for (var r2 = 0, i2 = this.states; r2 < i2.length; r2++) {
              var o2 = i2[r2];
              n2.state = o2, o2.methods.stop && o2.methods.stop(n2);
            }
            this.states = null, this.endResult = null;
          }
        } }, { key: "prepareStates", value: function(t3) {
          this.states = [];
          for (var e2 = 0; e2 < t3.length; e2++) {
            var n2 = t3[e2], r2 = n2.options, i2 = n2.methods, o2 = n2.name;
            this.states.push({ options: r2, methods: i2, index: e2, name: o2 });
          }
          return this.states;
        } }, { key: "restoreInteractionCoords", value: function(t3) {
          var e2 = t3.interaction, n2 = e2.coords, r2 = e2.rect, i2 = e2.modification;
          if (i2.result) {
            for (var o2 = i2.startDelta, a2 = i2.result, s2 = a2.delta, c2 = a2.rectDelta, l2 = 0, u2 = [[n2.start, o2], [n2.cur, s2]]; l2 < u2.length; l2++) {
              var p2 = u2[l2], f2 = p2[0], d2 = p2[1];
              f2.page.x -= d2.x, f2.page.y -= d2.y, f2.client.x -= d2.x, f2.client.y -= d2.y;
            }
            r2.left -= c2.left, r2.right -= c2.right, r2.top -= c2.top, r2.bottom -= c2.bottom;
          }
        } }, { key: "shouldDo", value: function(t3, e2, n2, r2) {
          return !(!t3 || false === t3.enabled || r2 && !t3.endOnly || t3.endOnly && !e2 || "start" === n2 && !t3.setStart);
        } }, { key: "copyFrom", value: function(t3) {
          this.startOffset = t3.startOffset, this.startDelta = t3.startDelta, this.startEdges = t3.startEdges, this.edges = t3.edges, this.states = t3.states.map(function(t4) {
            return ge(t4);
          }), this.result = ye(V({}, t3.result.coords), V({}, t3.result.rect));
        } }, { key: "destroy", value: function() {
          for (var t3 in this)
            this[t3] = null;
        } }]), t2;
      }();
      function ye(t2, e2) {
        return { rect: e2, coords: t2, delta: { x: 0, y: 0 }, rectDelta: { left: 0, right: 0, top: 0, bottom: 0 }, eventProps: [], changed: true };
      }
      function be(t2, e2) {
        var n2 = t2.defaults, r2 = { start: t2.start, set: t2.set, beforeEnd: t2.beforeEnd, stop: t2.stop }, i2 = function(t3) {
          var i3 = t3 || {};
          for (var o2 in i3.enabled = false !== i3.enabled, n2)
            o2 in i3 || (i3[o2] = n2[o2]);
          var a2 = { options: i3, methods: r2, name: e2, enable: function() {
            return i3.enabled = true, a2;
          }, disable: function() {
            return i3.enabled = false, a2;
          } };
          return a2;
        };
        return e2 && "string" == typeof e2 && (i2._defaults = n2, i2._methods = r2), i2;
      }
      function xe(t2) {
        var e2 = t2.iEvent, n2 = t2.interaction.modification.result;
        n2 && (e2.modifiers = n2.eventProps);
      }
      var we = { id: "modifiers/base", before: ["actions"], install: function(t2) {
        t2.defaults.perAction.modifiers = [];
      }, listeners: { "interactions:new": function(t2) {
        var e2 = t2.interaction;
        e2.modification = new me(e2);
      }, "interactions:before-action-start": function(t2) {
        var e2 = t2.interaction, n2 = t2.interaction.modification;
        n2.start(t2, e2.coords.start.page), e2.edges = n2.edges, n2.applyToInteraction(t2);
      }, "interactions:before-action-move": function(t2) {
        var e2 = t2.interaction, n2 = e2.modification, r2 = n2.setAndApply(t2);
        return e2.edges = n2.edges, r2;
      }, "interactions:before-action-end": function(t2) {
        var e2 = t2.interaction, n2 = e2.modification, r2 = n2.beforeEnd(t2);
        return e2.edges = n2.startEdges, r2;
      }, "interactions:action-start": xe, "interactions:action-move": xe, "interactions:action-end": xe, "interactions:after-action-start": function(t2) {
        return t2.interaction.modification.restoreInteractionCoords(t2);
      }, "interactions:after-action-move": function(t2) {
        return t2.interaction.modification.restoreInteractionCoords(t2);
      }, "interactions:stop": function(t2) {
        return t2.interaction.modification.stop(t2);
      } } }, Ee = we, Te = { base: { preventDefault: "auto", deltaSource: "page" }, perAction: { enabled: false, origin: { x: 0, y: 0 } }, actions: {} }, Se = function(t2) {
        s(n2, t2);
        var e2 = p(n2);
        function n2(t3, i2, o2, a2, s2, c2, l2) {
          var p2;
          r(this, n2), (p2 = e2.call(this, t3)).relatedTarget = null, p2.screenX = void 0, p2.screenY = void 0, p2.button = void 0, p2.buttons = void 0, p2.ctrlKey = void 0, p2.shiftKey = void 0, p2.altKey = void 0, p2.metaKey = void 0, p2.page = void 0, p2.client = void 0, p2.delta = void 0, p2.rect = void 0, p2.x0 = void 0, p2.y0 = void 0, p2.t0 = void 0, p2.dt = void 0, p2.duration = void 0, p2.clientX0 = void 0, p2.clientY0 = void 0, p2.velocity = void 0, p2.speed = void 0, p2.swipe = void 0, p2.axes = void 0, p2.preEnd = void 0, s2 = s2 || t3.element;
          var f2 = t3.interactable, d2 = (f2 && f2.options || Te).deltaSource, h2 = K(f2, s2, o2), v2 = "start" === a2, g2 = "end" === a2, m2 = v2 ? u(p2) : t3.prevEvent, y2 = v2 ? t3.coords.start : g2 ? { page: m2.page, client: m2.client, timeStamp: t3.coords.cur.timeStamp } : t3.coords.cur;
          return p2.page = V({}, y2.page), p2.client = V({}, y2.client), p2.rect = V({}, t3.rect), p2.timeStamp = y2.timeStamp, g2 || (p2.page.x -= h2.x, p2.page.y -= h2.y, p2.client.x -= h2.x, p2.client.y -= h2.y), p2.ctrlKey = i2.ctrlKey, p2.altKey = i2.altKey, p2.shiftKey = i2.shiftKey, p2.metaKey = i2.metaKey, p2.button = i2.button, p2.buttons = i2.buttons, p2.target = s2, p2.currentTarget = s2, p2.preEnd = c2, p2.type = l2 || o2 + (a2 || ""), p2.interactable = f2, p2.t0 = v2 ? t3.pointers[t3.pointers.length - 1].downTime : m2.t0, p2.x0 = t3.coords.start.page.x - h2.x, p2.y0 = t3.coords.start.page.y - h2.y, p2.clientX0 = t3.coords.start.client.x - h2.x, p2.clientY0 = t3.coords.start.client.y - h2.y, p2.delta = v2 || g2 ? { x: 0, y: 0 } : { x: p2[d2].x - m2[d2].x, y: p2[d2].y - m2[d2].y }, p2.dt = t3.coords.delta.timeStamp, p2.duration = p2.timeStamp - p2.t0, p2.velocity = V({}, t3.coords.velocity[d2]), p2.speed = Q(p2.velocity.x, p2.velocity.y), p2.swipe = g2 || "inertiastart" === a2 ? p2.getSwipe() : null, p2;
        }
        return o(n2, [{ key: "getSwipe", value: function() {
          var t3 = this._interaction;
          if (t3.prevEvent.speed < 600 || this.timeStamp - t3.prevEvent.timeStamp > 150)
            return null;
          var e3 = 180 * Math.atan2(t3.prevEvent.velocityY, t3.prevEvent.velocityX) / Math.PI;
          e3 < 0 && (e3 += 360);
          var n3 = 112.5 <= e3 && e3 < 247.5, r2 = 202.5 <= e3 && e3 < 337.5;
          return { up: r2, down: !r2 && 22.5 <= e3 && e3 < 157.5, left: n3, right: !n3 && (292.5 <= e3 || e3 < 67.5), angle: e3, speed: t3.prevEvent.speed, velocity: { x: t3.prevEvent.velocityX, y: t3.prevEvent.velocityY } };
        } }, { key: "preventDefault", value: function() {
        } }, { key: "stopImmediatePropagation", value: function() {
          this.immediatePropagationStopped = this.propagationStopped = true;
        } }, { key: "stopPropagation", value: function() {
          this.propagationStopped = true;
        } }]), n2;
      }(vt);
      Object.defineProperties(Se.prototype, { pageX: { get: function() {
        return this.page.x;
      }, set: function(t2) {
        this.page.x = t2;
      } }, pageY: { get: function() {
        return this.page.y;
      }, set: function(t2) {
        this.page.y = t2;
      } }, clientX: { get: function() {
        return this.client.x;
      }, set: function(t2) {
        this.client.x = t2;
      } }, clientY: { get: function() {
        return this.client.y;
      }, set: function(t2) {
        this.client.y = t2;
      } }, dx: { get: function() {
        return this.delta.x;
      }, set: function(t2) {
        this.delta.x = t2;
      } }, dy: { get: function() {
        return this.delta.y;
      }, set: function(t2) {
        this.delta.y = t2;
      } }, velocityX: { get: function() {
        return this.velocity.x;
      }, set: function(t2) {
        this.velocity.x = t2;
      } }, velocityY: { get: function() {
        return this.velocity.y;
      }, set: function(t2) {
        this.velocity.y = t2;
      } } });
      var _e = o(function t2(e2, n2, i2, o2, a2) {
        r(this, t2), this.id = void 0, this.pointer = void 0, this.event = void 0, this.downTime = void 0, this.downTarget = void 0, this.id = e2, this.pointer = n2, this.event = i2, this.downTime = o2, this.downTarget = a2;
      }), Pe = function(t2) {
        return t2.interactable = "", t2.element = "", t2.prepared = "", t2.pointerIsDown = "", t2.pointerWasMoved = "", t2._proxy = "", t2;
      }({}), Oe = function(t2) {
        return t2.start = "", t2.move = "", t2.end = "", t2.stop = "", t2.interacting = "", t2;
      }({}), ke = 0, De = function() {
        function t2(e2) {
          var n2 = this, i2 = e2.pointerType, o2 = e2.scopeFire;
          r(this, t2), this.interactable = null, this.element = null, this.rect = null, this._rects = void 0, this.edges = null, this._scopeFire = void 0, this.prepared = { name: null, axis: null, edges: null }, this.pointerType = void 0, this.pointers = [], this.downEvent = null, this.downPointer = {}, this._latestPointer = { pointer: null, event: null, eventTarget: null }, this.prevEvent = null, this.pointerIsDown = false, this.pointerWasMoved = false, this._interacting = false, this._ending = false, this._stopped = true, this._proxy = void 0, this.simulation = null, this.doMove = Nt(function(t3) {
            this.move(t3);
          }, "The interaction.doMove() method has been renamed to interaction.move()"), this.coords = { start: { page: { x: 0, y: 0 }, client: { x: 0, y: 0 }, timeStamp: 0 }, prev: { page: { x: 0, y: 0 }, client: { x: 0, y: 0 }, timeStamp: 0 }, cur: { page: { x: 0, y: 0 }, client: { x: 0, y: 0 }, timeStamp: 0 }, delta: { page: { x: 0, y: 0 }, client: { x: 0, y: 0 }, timeStamp: 0 }, velocity: { page: { x: 0, y: 0 }, client: { x: 0, y: 0 }, timeStamp: 0 } }, this._id = ke++, this._scopeFire = o2, this.pointerType = i2;
          var a2 = this;
          this._proxy = {};
          var s2 = function(t3) {
            Object.defineProperty(n2._proxy, t3, { get: function() {
              return a2[t3];
            } });
          };
          for (var c2 in Pe)
            s2(c2);
          var l2 = function(t3) {
            Object.defineProperty(n2._proxy, t3, { value: function() {
              return a2[t3].apply(a2, arguments);
            } });
          };
          for (var u2 in Oe)
            l2(u2);
          this._scopeFire("interactions:new", { interaction: this });
        }
        return o(t2, [{ key: "pointerMoveTolerance", get: function() {
          return 1;
        } }, { key: "pointerDown", value: function(t3, e2, n2) {
          var r2 = this.updatePointer(t3, e2, n2, true), i2 = this.pointers[r2];
          this._scopeFire("interactions:down", { pointer: t3, event: e2, eventTarget: n2, pointerIndex: r2, pointerInfo: i2, type: "down", interaction: this });
        } }, { key: "start", value: function(t3, e2, n2) {
          return !(this.interacting() || !this.pointerIsDown || this.pointers.length < ("gesture" === t3.name ? 2 : 1) || !e2.options[t3.name].enabled) && (Ut(this.prepared, t3), this.interactable = e2, this.element = n2, this.rect = e2.getRect(n2), this.edges = this.prepared.edges ? V({}, this.prepared.edges) : { left: true, right: true, top: true, bottom: true }, this._stopped = false, this._interacting = this._doPhase({ interaction: this, event: this.downEvent, phase: "start" }) && !this._stopped, this._interacting);
        } }, { key: "pointerMove", value: function(t3, e2, n2) {
          this.simulation || this.modification && this.modification.endResult || this.updatePointer(t3, e2, n2, false);
          var r2, i2, o2 = this.coords.cur.page.x === this.coords.prev.page.x && this.coords.cur.page.y === this.coords.prev.page.y && this.coords.cur.client.x === this.coords.prev.client.x && this.coords.cur.client.y === this.coords.prev.client.y;
          this.pointerIsDown && !this.pointerWasMoved && (r2 = this.coords.cur.client.x - this.coords.start.client.x, i2 = this.coords.cur.client.y - this.coords.start.client.y, this.pointerWasMoved = Q(r2, i2) > this.pointerMoveTolerance);
          var a2, s2, c2, l2 = this.getPointerIndex(t3), u2 = { pointer: t3, pointerIndex: l2, pointerInfo: this.pointers[l2], event: e2, type: "move", eventTarget: n2, dx: r2, dy: i2, duplicate: o2, interaction: this };
          o2 || (a2 = this.coords.velocity, s2 = this.coords.delta, c2 = Math.max(s2.timeStamp / 1e3, 1e-3), a2.page.x = s2.page.x / c2, a2.page.y = s2.page.y / c2, a2.client.x = s2.client.x / c2, a2.client.y = s2.client.y / c2, a2.timeStamp = c2), this._scopeFire("interactions:move", u2), o2 || this.simulation || (this.interacting() && (u2.type = null, this.move(u2)), this.pointerWasMoved && et(this.coords.prev, this.coords.cur));
        } }, { key: "move", value: function(t3) {
          t3 && t3.event || nt(this.coords.delta), (t3 = V({ pointer: this._latestPointer.pointer, event: this._latestPointer.event, eventTarget: this._latestPointer.eventTarget, interaction: this }, t3 || {})).phase = "move", this._doPhase(t3);
        } }, { key: "pointerUp", value: function(t3, e2, n2, r2) {
          var i2 = this.getPointerIndex(t3);
          -1 === i2 && (i2 = this.updatePointer(t3, e2, n2, false));
          var o2 = /cancel$/i.test(e2.type) ? "cancel" : "up";
          this._scopeFire("interactions:".concat(o2), { pointer: t3, pointerIndex: i2, pointerInfo: this.pointers[i2], event: e2, eventTarget: n2, type: o2, curEventTarget: r2, interaction: this }), this.simulation || this.end(e2), this.removePointer(t3, e2);
        } }, { key: "documentBlur", value: function(t3) {
          this.end(t3), this._scopeFire("interactions:blur", { event: t3, type: "blur", interaction: this });
        } }, { key: "end", value: function(t3) {
          var e2;
          this._ending = true, t3 = t3 || this._latestPointer.event, this.interacting() && (e2 = this._doPhase({ event: t3, interaction: this, phase: "end" })), this._ending = false, true === e2 && this.stop();
        } }, { key: "currentAction", value: function() {
          return this._interacting ? this.prepared.name : null;
        } }, { key: "interacting", value: function() {
          return this._interacting;
        } }, { key: "stop", value: function() {
          this._scopeFire("interactions:stop", { interaction: this }), this.interactable = this.element = null, this._interacting = false, this._stopped = true, this.prepared.name = this.prevEvent = null;
        } }, { key: "getPointerIndex", value: function(t3) {
          var e2 = at(t3);
          return "mouse" === this.pointerType || "pen" === this.pointerType ? this.pointers.length - 1 : yt(this.pointers, function(t4) {
            return t4.id === e2;
          });
        } }, { key: "getPointerInfo", value: function(t3) {
          return this.pointers[this.getPointerIndex(t3)];
        } }, { key: "updatePointer", value: function(t3, e2, n2, r2) {
          var i2, o2, a2, s2 = at(t3), c2 = this.getPointerIndex(t3), l2 = this.pointers[c2];
          return r2 = false !== r2 && (r2 || /(down|start)$/i.test(e2.type)), l2 ? l2.pointer = t3 : (l2 = new _e(s2, t3, e2, null, null), c2 = this.pointers.length, this.pointers.push(l2)), st(this.coords.cur, this.pointers.map(function(t4) {
            return t4.pointer;
          }), this._now()), i2 = this.coords.delta, o2 = this.coords.prev, a2 = this.coords.cur, i2.page.x = a2.page.x - o2.page.x, i2.page.y = a2.page.y - o2.page.y, i2.client.x = a2.client.x - o2.client.x, i2.client.y = a2.client.y - o2.client.y, i2.timeStamp = a2.timeStamp - o2.timeStamp, r2 && (this.pointerIsDown = true, l2.downTime = this.coords.cur.timeStamp, l2.downTarget = n2, tt(this.downPointer, t3), this.interacting() || (et(this.coords.start, this.coords.cur), et(this.coords.prev, this.coords.cur), this.downEvent = e2, this.pointerWasMoved = false)), this._updateLatestPointer(t3, e2, n2), this._scopeFire("interactions:update-pointer", { pointer: t3, event: e2, eventTarget: n2, down: r2, pointerInfo: l2, pointerIndex: c2, interaction: this }), c2;
        } }, { key: "removePointer", value: function(t3, e2) {
          var n2 = this.getPointerIndex(t3);
          if (-1 !== n2) {
            var r2 = this.pointers[n2];
            this._scopeFire("interactions:remove-pointer", { pointer: t3, event: e2, eventTarget: null, pointerIndex: n2, pointerInfo: r2, interaction: this }), this.pointers.splice(n2, 1), this.pointerIsDown = false;
          }
        } }, { key: "_updateLatestPointer", value: function(t3, e2, n2) {
          this._latestPointer.pointer = t3, this._latestPointer.event = e2, this._latestPointer.eventTarget = n2;
        } }, { key: "destroy", value: function() {
          this._latestPointer.pointer = null, this._latestPointer.event = null, this._latestPointer.eventTarget = null;
        } }, { key: "_createPreparedEvent", value: function(t3, e2, n2, r2) {
          return new Se(this, t3, this.prepared.name, e2, this.element, n2, r2);
        } }, { key: "_fireEvent", value: function(t3) {
          var e2;
          null == (e2 = this.interactable) || e2.fire(t3), (!this.prevEvent || t3.timeStamp >= this.prevEvent.timeStamp) && (this.prevEvent = t3);
        } }, { key: "_doPhase", value: function(t3) {
          var e2 = t3.event, n2 = t3.phase, r2 = t3.preEnd, i2 = t3.type, o2 = this.rect;
          if (o2 && "move" === n2 && (H(this.edges, o2, this.coords.delta[this.interactable.options.deltaSource]), o2.width = o2.right - o2.left, o2.height = o2.bottom - o2.top), false === this._scopeFire("interactions:before-action-".concat(n2), t3))
            return false;
          var a2 = t3.iEvent = this._createPreparedEvent(e2, n2, r2, i2);
          return this._scopeFire("interactions:action-".concat(n2), t3), "start" === n2 && (this.prevEvent = a2), this._fireEvent(a2), this._scopeFire("interactions:after-action-".concat(n2), t3), true;
        } }, { key: "_now", value: function() {
          return Date.now();
        } }]), t2;
      }();
      function Ie(t2) {
        Me(t2.interaction);
      }
      function Me(t2) {
        if (!function(t3) {
          return !(!t3.offset.pending.x && !t3.offset.pending.y);
        }(t2))
          return false;
        var e2 = t2.offset.pending;
        return Ae(t2.coords.cur, e2), Ae(t2.coords.delta, e2), H(t2.edges, t2.rect, e2), e2.x = 0, e2.y = 0, true;
      }
      function ze(t2) {
        var e2 = t2.x, n2 = t2.y;
        this.offset.pending.x += e2, this.offset.pending.y += n2, this.offset.total.x += e2, this.offset.total.y += n2;
      }
      function Ae(t2, e2) {
        var n2 = t2.page, r2 = t2.client, i2 = e2.x, o2 = e2.y;
        n2.x += i2, n2.y += o2, r2.x += i2, r2.y += o2;
      }
      Oe.offsetBy = "";
      var Re = { id: "offset", before: ["modifiers", "pointer-events", "actions", "inertia"], install: function(t2) {
        t2.Interaction.prototype.offsetBy = ze;
      }, listeners: { "interactions:new": function(t2) {
        t2.interaction.offset = { total: { x: 0, y: 0 }, pending: { x: 0, y: 0 } };
      }, "interactions:update-pointer": function(t2) {
        return function(t3) {
          t3.pointerIsDown && (Ae(t3.coords.cur, t3.offset.total), t3.offset.pending.x = 0, t3.offset.pending.y = 0);
        }(t2.interaction);
      }, "interactions:before-action-start": Ie, "interactions:before-action-move": Ie, "interactions:before-action-end": function(t2) {
        var e2 = t2.interaction;
        if (Me(e2))
          return e2.move({ offset: true }), e2.end(), false;
      }, "interactions:stop": function(t2) {
        var e2 = t2.interaction;
        e2.offset.total.x = 0, e2.offset.total.y = 0, e2.offset.pending.x = 0, e2.offset.pending.y = 0;
      } } }, Ce = Re;
      var je = function() {
        function t2(e2) {
          r(this, t2), this.active = false, this.isModified = false, this.smoothEnd = false, this.allowResume = false, this.modification = void 0, this.modifierCount = 0, this.modifierArg = void 0, this.startCoords = void 0, this.t0 = 0, this.v0 = 0, this.te = 0, this.targetOffset = void 0, this.modifiedOffset = void 0, this.currentOffset = void 0, this.lambda_v0 = 0, this.one_ve_v0 = 0, this.timeout = void 0, this.interaction = void 0, this.interaction = e2;
        }
        return o(t2, [{ key: "start", value: function(t3) {
          var e2 = this.interaction, n2 = Fe(e2);
          if (!n2 || !n2.enabled)
            return false;
          var r2 = e2.coords.velocity.client, i2 = Q(r2.x, r2.y), o2 = this.modification || (this.modification = new me(e2));
          if (o2.copyFrom(e2.modification), this.t0 = e2._now(), this.allowResume = n2.allowResume, this.v0 = i2, this.currentOffset = { x: 0, y: 0 }, this.startCoords = e2.coords.cur.page, this.modifierArg = o2.fillArg({ pageCoords: this.startCoords, preEnd: true, phase: "inertiastart" }), this.t0 - e2.coords.cur.timeStamp < 50 && i2 > n2.minSpeed && i2 > n2.endSpeed)
            this.startInertia();
          else {
            if (o2.result = o2.setAll(this.modifierArg), !o2.result.changed)
              return false;
            this.startSmoothEnd();
          }
          return e2.modification.result.rect = null, e2.offsetBy(this.targetOffset), e2._doPhase({ interaction: e2, event: t3, phase: "inertiastart" }), e2.offsetBy({ x: -this.targetOffset.x, y: -this.targetOffset.y }), e2.modification.result.rect = null, this.active = true, e2.simulation = this, true;
        } }, { key: "startInertia", value: function() {
          var t3 = this, e2 = this.interaction.coords.velocity.client, n2 = Fe(this.interaction), r2 = n2.resistance, i2 = -Math.log(n2.endSpeed / this.v0) / r2;
          this.targetOffset = { x: (e2.x - i2) / r2, y: (e2.y - i2) / r2 }, this.te = i2, this.lambda_v0 = r2 / this.v0, this.one_ve_v0 = 1 - n2.endSpeed / this.v0;
          var o2 = this.modification, a2 = this.modifierArg;
          a2.pageCoords = { x: this.startCoords.x + this.targetOffset.x, y: this.startCoords.y + this.targetOffset.y }, o2.result = o2.setAll(a2), o2.result.changed && (this.isModified = true, this.modifiedOffset = { x: this.targetOffset.x + o2.result.delta.x, y: this.targetOffset.y + o2.result.delta.y }), this.onNextFrame(function() {
            return t3.inertiaTick();
          });
        } }, { key: "startSmoothEnd", value: function() {
          var t3 = this;
          this.smoothEnd = true, this.isModified = true, this.targetOffset = { x: this.modification.result.delta.x, y: this.modification.result.delta.y }, this.onNextFrame(function() {
            return t3.smoothEndTick();
          });
        } }, { key: "onNextFrame", value: function(t3) {
          var e2 = this;
          this.timeout = Lt.request(function() {
            e2.active && t3();
          });
        } }, { key: "inertiaTick", value: function() {
          var t3, e2, n2, r2, i2, o2, a2, s2 = this, c2 = this.interaction, l2 = Fe(c2).resistance, u2 = (c2._now() - this.t0) / 1e3;
          if (u2 < this.te) {
            var p2, f2 = 1 - (Math.exp(-l2 * u2) - this.lambda_v0) / this.one_ve_v0;
            this.isModified ? (t3 = 0, e2 = 0, n2 = this.targetOffset.x, r2 = this.targetOffset.y, i2 = this.modifiedOffset.x, o2 = this.modifiedOffset.y, p2 = { x: Ye(a2 = f2, t3, n2, i2), y: Ye(a2, e2, r2, o2) }) : p2 = { x: this.targetOffset.x * f2, y: this.targetOffset.y * f2 };
            var d2 = { x: p2.x - this.currentOffset.x, y: p2.y - this.currentOffset.y };
            this.currentOffset.x += d2.x, this.currentOffset.y += d2.y, c2.offsetBy(d2), c2.move(), this.onNextFrame(function() {
              return s2.inertiaTick();
            });
          } else
            c2.offsetBy({ x: this.modifiedOffset.x - this.currentOffset.x, y: this.modifiedOffset.y - this.currentOffset.y }), this.end();
        } }, { key: "smoothEndTick", value: function() {
          var t3 = this, e2 = this.interaction, n2 = e2._now() - this.t0, r2 = Fe(e2).smoothEndDuration;
          if (n2 < r2) {
            var i2 = { x: Le(n2, 0, this.targetOffset.x, r2), y: Le(n2, 0, this.targetOffset.y, r2) }, o2 = { x: i2.x - this.currentOffset.x, y: i2.y - this.currentOffset.y };
            this.currentOffset.x += o2.x, this.currentOffset.y += o2.y, e2.offsetBy(o2), e2.move({ skipModifiers: this.modifierCount }), this.onNextFrame(function() {
              return t3.smoothEndTick();
            });
          } else
            e2.offsetBy({ x: this.targetOffset.x - this.currentOffset.x, y: this.targetOffset.y - this.currentOffset.y }), this.end();
        } }, { key: "resume", value: function(t3) {
          var e2 = t3.pointer, n2 = t3.event, r2 = t3.eventTarget, i2 = this.interaction;
          i2.offsetBy({ x: -this.currentOffset.x, y: -this.currentOffset.y }), i2.updatePointer(e2, n2, r2, true), i2._doPhase({ interaction: i2, event: n2, phase: "resume" }), et(i2.coords.prev, i2.coords.cur), this.stop();
        } }, { key: "end", value: function() {
          this.interaction.move(), this.interaction.end(), this.stop();
        } }, { key: "stop", value: function() {
          this.active = this.smoothEnd = false, this.interaction.simulation = null, Lt.cancel(this.timeout);
        } }]), t2;
      }();
      function Fe(t2) {
        var e2 = t2.interactable, n2 = t2.prepared;
        return e2 && e2.options && n2.name && e2.options[n2.name].inertia;
      }
      var Xe = { id: "inertia", before: ["modifiers", "actions"], install: function(t2) {
        var e2 = t2.defaults;
        t2.usePlugin(Ce), t2.usePlugin(Ee), t2.actions.phases.inertiastart = true, t2.actions.phases.resume = true, e2.perAction.inertia = { enabled: false, resistance: 10, minSpeed: 100, endSpeed: 10, allowResume: true, smoothEndDuration: 300 };
      }, listeners: { "interactions:new": function(t2) {
        var e2 = t2.interaction;
        e2.inertia = new je(e2);
      }, "interactions:before-action-end": function(t2) {
        var e2 = t2.interaction, n2 = t2.event;
        return (!e2._interacting || e2.simulation || !e2.inertia.start(n2)) && null;
      }, "interactions:down": function(t2) {
        var e2 = t2.interaction, n2 = t2.eventTarget, r2 = e2.inertia;
        if (r2.active)
          for (var i2 = n2; w.element(i2); ) {
            if (i2 === e2.element) {
              r2.resume(t2);
              break;
            }
            i2 = A(i2);
          }
      }, "interactions:stop": function(t2) {
        var e2 = t2.interaction.inertia;
        e2.active && e2.stop();
      }, "interactions:before-action-resume": function(t2) {
        var e2 = t2.interaction.modification;
        e2.stop(t2), e2.start(t2, t2.interaction.coords.cur.page), e2.applyToInteraction(t2);
      }, "interactions:before-action-inertiastart": function(t2) {
        return t2.interaction.modification.setAndApply(t2);
      }, "interactions:action-resume": xe, "interactions:action-inertiastart": xe, "interactions:after-action-inertiastart": function(t2) {
        return t2.interaction.modification.restoreInteractionCoords(t2);
      }, "interactions:after-action-resume": function(t2) {
        return t2.interaction.modification.restoreInteractionCoords(t2);
      } } };
      function Ye(t2, e2, n2, r2) {
        var i2 = 1 - t2;
        return i2 * i2 * e2 + 2 * i2 * t2 * n2 + t2 * t2 * r2;
      }
      function Le(t2, e2, n2, r2) {
        return -n2 * (t2 /= r2) * (t2 - 2) + e2;
      }
      var qe = Xe;
      function Be(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var r2 = e2[n2];
          if (t2.immediatePropagationStopped)
            break;
          r2(t2);
        }
      }
      var Ve = function() {
        function t2(e2) {
          r(this, t2), this.options = void 0, this.types = {}, this.propagationStopped = false, this.immediatePropagationStopped = false, this.global = void 0, this.options = V({}, e2 || {});
        }
        return o(t2, [{ key: "fire", value: function(t3) {
          var e2, n2 = this.global;
          (e2 = this.types[t3.type]) && Be(t3, e2), !t3.propagationStopped && n2 && (e2 = n2[t3.type]) && Be(t3, e2);
        } }, { key: "on", value: function(t3, e2) {
          var n2 = $(t3, e2);
          for (t3 in n2)
            this.types[t3] = gt(this.types[t3] || [], n2[t3]);
        } }, { key: "off", value: function(t3, e2) {
          var n2 = $(t3, e2);
          for (t3 in n2) {
            var r2 = this.types[t3];
            if (r2 && r2.length)
              for (var i2 = 0, o2 = n2[t3]; i2 < o2.length; i2++) {
                var a2 = o2[i2], s2 = r2.indexOf(a2);
                -1 !== s2 && r2.splice(s2, 1);
              }
          }
        } }, { key: "getRect", value: function(t3) {
          return null;
        } }]), t2;
      }();
      var We = function() {
        function t2(e2) {
          r(this, t2), this.currentTarget = void 0, this.originalEvent = void 0, this.type = void 0, this.originalEvent = e2, tt(this, e2);
        }
        return o(t2, [{ key: "preventOriginalDefault", value: function() {
          this.originalEvent.preventDefault();
        } }, { key: "stopPropagation", value: function() {
          this.originalEvent.stopPropagation();
        } }, { key: "stopImmediatePropagation", value: function() {
          this.originalEvent.stopImmediatePropagation();
        } }]), t2;
      }();
      function Ge(t2) {
        return w.object(t2) ? { capture: !!t2.capture, passive: !!t2.passive } : { capture: !!t2, passive: false };
      }
      function Ne(t2, e2) {
        return t2 === e2 || ("boolean" == typeof t2 ? !!e2.capture === t2 && false == !!e2.passive : !!t2.capture == !!e2.capture && !!t2.passive == !!e2.passive);
      }
      var Ue = { id: "events", install: function(t2) {
        var e2, n2 = [], r2 = {}, i2 = [], o2 = { add: a2, remove: s2, addDelegate: function(t3, e3, n3, o3, s3) {
          var u2 = Ge(s3);
          if (!r2[n3]) {
            r2[n3] = [];
            for (var p2 = 0; p2 < i2.length; p2++) {
              var f2 = i2[p2];
              a2(f2, n3, c2), a2(f2, n3, l2, true);
            }
          }
          var d2 = r2[n3], h2 = bt(d2, function(n4) {
            return n4.selector === t3 && n4.context === e3;
          });
          h2 || (h2 = { selector: t3, context: e3, listeners: [] }, d2.push(h2));
          h2.listeners.push({ func: o3, options: u2 });
        }, removeDelegate: function(t3, e3, n3, i3, o3) {
          var a3, u2 = Ge(o3), p2 = r2[n3], f2 = false;
          if (!p2)
            return;
          for (a3 = p2.length - 1; a3 >= 0; a3--) {
            var d2 = p2[a3];
            if (d2.selector === t3 && d2.context === e3) {
              for (var h2 = d2.listeners, v2 = h2.length - 1; v2 >= 0; v2--) {
                var g2 = h2[v2];
                if (g2.func === i3 && Ne(g2.options, u2)) {
                  h2.splice(v2, 1), h2.length || (p2.splice(a3, 1), s2(e3, n3, c2), s2(e3, n3, l2, true)), f2 = true;
                  break;
                }
              }
              if (f2)
                break;
            }
          }
        }, delegateListener: c2, delegateUseCapture: l2, delegatedEvents: r2, documents: i2, targets: n2, supportsOptions: false, supportsPassive: false };
        function a2(t3, e3, r3, i3) {
          if (t3.addEventListener) {
            var a3 = Ge(i3), s3 = bt(n2, function(e4) {
              return e4.eventTarget === t3;
            });
            s3 || (s3 = { eventTarget: t3, events: {} }, n2.push(s3)), s3.events[e3] || (s3.events[e3] = []), bt(s3.events[e3], function(t4) {
              return t4.func === r3 && Ne(t4.options, a3);
            }) || (t3.addEventListener(e3, r3, o2.supportsOptions ? a3 : a3.capture), s3.events[e3].push({ func: r3, options: a3 }));
          }
        }
        function s2(t3, e3, r3, i3) {
          if (t3.addEventListener && t3.removeEventListener) {
            var a3 = yt(n2, function(e4) {
              return e4.eventTarget === t3;
            }), c3 = n2[a3];
            if (c3 && c3.events)
              if ("all" !== e3) {
                var l3 = false, u2 = c3.events[e3];
                if (u2) {
                  if ("all" === r3) {
                    for (var p2 = u2.length - 1; p2 >= 0; p2--) {
                      var f2 = u2[p2];
                      s2(t3, e3, f2.func, f2.options);
                    }
                    return;
                  }
                  for (var d2 = Ge(i3), h2 = 0; h2 < u2.length; h2++) {
                    var v2 = u2[h2];
                    if (v2.func === r3 && Ne(v2.options, d2)) {
                      t3.removeEventListener(e3, r3, o2.supportsOptions ? d2 : d2.capture), u2.splice(h2, 1), 0 === u2.length && (delete c3.events[e3], l3 = true);
                      break;
                    }
                  }
                }
                l3 && !Object.keys(c3.events).length && n2.splice(a3, 1);
              } else
                for (e3 in c3.events)
                  c3.events.hasOwnProperty(e3) && s2(t3, e3, "all");
          }
        }
        function c2(t3, e3) {
          for (var n3 = Ge(e3), i3 = new We(t3), o3 = r2[t3.type], a3 = ht(t3)[0], s3 = a3; w.element(s3); ) {
            for (var c3 = 0; c3 < o3.length; c3++) {
              var l3 = o3[c3], u2 = l3.selector, p2 = l3.context;
              if (R(s3, u2) && M(p2, a3) && M(p2, s3)) {
                var f2 = l3.listeners;
                i3.currentTarget = s3;
                for (var d2 = 0; d2 < f2.length; d2++) {
                  var h2 = f2[d2];
                  Ne(h2.options, n3) && h2.func(i3);
                }
              }
            }
            s3 = A(s3);
          }
        }
        function l2(t3) {
          return c2(t3, true);
        }
        return null == (e2 = t2.document) || e2.createElement("div").addEventListener("test", null, { get capture() {
          return o2.supportsOptions = true;
        }, get passive() {
          return o2.supportsPassive = true;
        } }), t2.events = o2, o2;
      } }, He = { methodOrder: ["simulationResume", "mouseOrPen", "hasPointer", "idle"], search: function(t2) {
        for (var e2 = 0, n2 = He.methodOrder; e2 < n2.length; e2++) {
          var r2 = n2[e2], i2 = He[r2](t2);
          if (i2)
            return i2;
        }
        return null;
      }, simulationResume: function(t2) {
        var e2 = t2.pointerType, n2 = t2.eventType, r2 = t2.eventTarget, i2 = t2.scope;
        if (!/down|start/i.test(n2))
          return null;
        for (var o2 = 0, a2 = i2.interactions.list; o2 < a2.length; o2++) {
          var s2 = a2[o2], c2 = r2;
          if (s2.simulation && s2.simulation.allowResume && s2.pointerType === e2)
            for (; c2; ) {
              if (c2 === s2.element)
                return s2;
              c2 = A(c2);
            }
        }
        return null;
      }, mouseOrPen: function(t2) {
        var e2, n2 = t2.pointerId, r2 = t2.pointerType, i2 = t2.eventType, o2 = t2.scope;
        if ("mouse" !== r2 && "pen" !== r2)
          return null;
        for (var a2 = 0, s2 = o2.interactions.list; a2 < s2.length; a2++) {
          var c2 = s2[a2];
          if (c2.pointerType === r2) {
            if (c2.simulation && !Ke(c2, n2))
              continue;
            if (c2.interacting())
              return c2;
            e2 || (e2 = c2);
          }
        }
        if (e2)
          return e2;
        for (var l2 = 0, u2 = o2.interactions.list; l2 < u2.length; l2++) {
          var p2 = u2[l2];
          if (!(p2.pointerType !== r2 || /down/i.test(i2) && p2.simulation))
            return p2;
        }
        return null;
      }, hasPointer: function(t2) {
        for (var e2 = t2.pointerId, n2 = 0, r2 = t2.scope.interactions.list; n2 < r2.length; n2++) {
          var i2 = r2[n2];
          if (Ke(i2, e2))
            return i2;
        }
        return null;
      }, idle: function(t2) {
        for (var e2 = t2.pointerType, n2 = 0, r2 = t2.scope.interactions.list; n2 < r2.length; n2++) {
          var i2 = r2[n2];
          if (1 === i2.pointers.length) {
            var o2 = i2.interactable;
            if (o2 && (!o2.options.gesture || !o2.options.gesture.enabled))
              continue;
          } else if (i2.pointers.length >= 2)
            continue;
          if (!i2.interacting() && e2 === i2.pointerType)
            return i2;
        }
        return null;
      } };
      function Ke(t2, e2) {
        return t2.pointers.some(function(t3) {
          return t3.id === e2;
        });
      }
      var $e = He, Je = ["pointerDown", "pointerMove", "pointerUp", "updatePointer", "removePointer", "windowBlur"];
      function Qe(t2, e2) {
        return function(n2) {
          var r2 = e2.interactions.list, i2 = dt(n2), o2 = ht(n2), a2 = o2[0], s2 = o2[1], c2 = [];
          if (/^touch/.test(n2.type)) {
            e2.prevTouchTime = e2.now();
            for (var l2 = 0, u2 = n2.changedTouches; l2 < u2.length; l2++) {
              var p2 = u2[l2], f2 = { pointer: p2, pointerId: at(p2), pointerType: i2, eventType: n2.type, eventTarget: a2, curEventTarget: s2, scope: e2 }, d2 = Ze(f2);
              c2.push([f2.pointer, f2.eventTarget, f2.curEventTarget, d2]);
            }
          } else {
            var h2 = false;
            if (!I.supportsPointerEvent && /mouse/.test(n2.type)) {
              for (var v2 = 0; v2 < r2.length && !h2; v2++)
                h2 = "mouse" !== r2[v2].pointerType && r2[v2].pointerIsDown;
              h2 = h2 || e2.now() - e2.prevTouchTime < 500 || 0 === n2.timeStamp;
            }
            if (!h2) {
              var g2 = { pointer: n2, pointerId: at(n2), pointerType: i2, eventType: n2.type, curEventTarget: s2, eventTarget: a2, scope: e2 }, m2 = Ze(g2);
              c2.push([g2.pointer, g2.eventTarget, g2.curEventTarget, m2]);
            }
          }
          for (var y2 = 0; y2 < c2.length; y2++) {
            var b2 = c2[y2], x2 = b2[0], w2 = b2[1], E2 = b2[2];
            b2[3][t2](x2, n2, w2, E2);
          }
        };
      }
      function Ze(t2) {
        var e2 = t2.pointerType, n2 = t2.scope, r2 = { interaction: $e.search(t2), searchDetails: t2 };
        return n2.fire("interactions:find", r2), r2.interaction || n2.interactions.new({ pointerType: e2 });
      }
      function tn(t2, e2) {
        var n2 = t2.doc, r2 = t2.scope, i2 = t2.options, o2 = r2.interactions.docEvents, a2 = r2.events, s2 = a2[e2];
        for (var c2 in r2.browser.isIOS && !i2.events && (i2.events = { passive: false }), a2.delegatedEvents)
          s2(n2, c2, a2.delegateListener), s2(n2, c2, a2.delegateUseCapture, true);
        for (var l2 = i2 && i2.events, u2 = 0; u2 < o2.length; u2++) {
          var p2 = o2[u2];
          s2(n2, p2.type, p2.listener, l2);
        }
      }
      var en = { id: "core/interactions", install: function(t2) {
        for (var e2 = {}, n2 = 0; n2 < Je.length; n2++) {
          var i2 = Je[n2];
          e2[i2] = Qe(i2, t2);
        }
        var a2, c2 = I.pEventTypes;
        function l2() {
          for (var e3 = 0, n3 = t2.interactions.list; e3 < n3.length; e3++) {
            var r2 = n3[e3];
            if (r2.pointerIsDown && "touch" === r2.pointerType && !r2._interacting)
              for (var i3 = function() {
                var e4 = a3[o2];
                t2.documents.some(function(t3) {
                  return M(t3.doc, e4.downTarget);
                }) || r2.removePointer(e4.pointer, e4.event);
              }, o2 = 0, a3 = r2.pointers; o2 < a3.length; o2++)
                i3();
          }
        }
        (a2 = k.PointerEvent ? [{ type: c2.down, listener: l2 }, { type: c2.down, listener: e2.pointerDown }, { type: c2.move, listener: e2.pointerMove }, { type: c2.up, listener: e2.pointerUp }, { type: c2.cancel, listener: e2.pointerUp }] : [{ type: "mousedown", listener: e2.pointerDown }, { type: "mousemove", listener: e2.pointerMove }, { type: "mouseup", listener: e2.pointerUp }, { type: "touchstart", listener: l2 }, { type: "touchstart", listener: e2.pointerDown }, { type: "touchmove", listener: e2.pointerMove }, { type: "touchend", listener: e2.pointerUp }, { type: "touchcancel", listener: e2.pointerUp }]).push({ type: "blur", listener: function(e3) {
          for (var n3 = 0, r2 = t2.interactions.list; n3 < r2.length; n3++) {
            r2[n3].documentBlur(e3);
          }
        } }), t2.prevTouchTime = 0, t2.Interaction = function(e3) {
          s(i3, e3);
          var n3 = p(i3);
          function i3() {
            return r(this, i3), n3.apply(this, arguments);
          }
          return o(i3, [{ key: "pointerMoveTolerance", get: function() {
            return t2.interactions.pointerMoveTolerance;
          }, set: function(e4) {
            t2.interactions.pointerMoveTolerance = e4;
          } }, { key: "_now", value: function() {
            return t2.now();
          } }]), i3;
        }(De), t2.interactions = { list: [], new: function(e3) {
          e3.scopeFire = function(e4, n4) {
            return t2.fire(e4, n4);
          };
          var n3 = new t2.Interaction(e3);
          return t2.interactions.list.push(n3), n3;
        }, listeners: e2, docEvents: a2, pointerMoveTolerance: 1 }, t2.usePlugin(he);
      }, listeners: { "scope:add-document": function(t2) {
        return tn(t2, "add");
      }, "scope:remove-document": function(t2) {
        return tn(t2, "remove");
      }, "interactable:unset": function(t2, e2) {
        for (var n2 = t2.interactable, r2 = e2.interactions.list.length - 1; r2 >= 0; r2--) {
          var i2 = e2.interactions.list[r2];
          i2.interactable === n2 && (i2.stop(), e2.fire("interactions:destroy", { interaction: i2 }), i2.destroy(), e2.interactions.list.length > 2 && e2.interactions.list.splice(r2, 1));
        }
      } }, onDocSignal: tn, doOnInteractions: Qe, methodNames: Je }, nn = en, rn = function(t2) {
        return t2[t2.On = 0] = "On", t2[t2.Off = 1] = "Off", t2;
      }(rn || {}), on = function() {
        function t2(e2, n2, i2, o2) {
          r(this, t2), this.target = void 0, this.options = void 0, this._actions = void 0, this.events = new Ve(), this._context = void 0, this._win = void 0, this._doc = void 0, this._scopeEvents = void 0, this._actions = n2.actions, this.target = e2, this._context = n2.context || i2, this._win = y(B(e2) ? this._context : e2), this._doc = this._win.document, this._scopeEvents = o2, this.set(n2);
        }
        return o(t2, [{ key: "_defaults", get: function() {
          return { base: {}, perAction: {}, actions: {} };
        } }, { key: "setOnEvents", value: function(t3, e2) {
          return w.func(e2.onstart) && this.on("".concat(t3, "start"), e2.onstart), w.func(e2.onmove) && this.on("".concat(t3, "move"), e2.onmove), w.func(e2.onend) && this.on("".concat(t3, "end"), e2.onend), w.func(e2.oninertiastart) && this.on("".concat(t3, "inertiastart"), e2.oninertiastart), this;
        } }, { key: "updatePerActionListeners", value: function(t3, e2, n2) {
          var r2, i2 = this, o2 = null == (r2 = this._actions.map[t3]) ? void 0 : r2.filterEventType, a2 = function(t4) {
            return (null == o2 || o2(t4)) && ve(t4, i2._actions);
          };
          (w.array(e2) || w.object(e2)) && this._onOff(rn.Off, t3, e2, void 0, a2), (w.array(n2) || w.object(n2)) && this._onOff(rn.On, t3, n2, void 0, a2);
        } }, { key: "setPerAction", value: function(t3, e2) {
          var n2 = this._defaults;
          for (var r2 in e2) {
            var i2 = r2, o2 = this.options[t3], a2 = e2[i2];
            "listeners" === i2 && this.updatePerActionListeners(t3, o2.listeners, a2), w.array(a2) ? o2[i2] = mt(a2) : w.plainObject(a2) ? (o2[i2] = V(o2[i2] || {}, ge(a2)), w.object(n2.perAction[i2]) && "enabled" in n2.perAction[i2] && (o2[i2].enabled = false !== a2.enabled)) : w.bool(a2) && w.object(n2.perAction[i2]) ? o2[i2].enabled = a2 : o2[i2] = a2;
          }
        } }, { key: "getRect", value: function(t3) {
          return t3 = t3 || (w.element(this.target) ? this.target : null), w.string(this.target) && (t3 = t3 || this._context.querySelector(this.target)), L(t3);
        } }, { key: "rectChecker", value: function(t3) {
          var e2 = this;
          return w.func(t3) ? (this.getRect = function(n2) {
            var r2 = V({}, t3.apply(e2, n2));
            return "width" in r2 || (r2.width = r2.right - r2.left, r2.height = r2.bottom - r2.top), r2;
          }, this) : null === t3 ? (delete this.getRect, this) : this.getRect;
        } }, { key: "_backCompatOption", value: function(t3, e2) {
          if (B(e2) || w.object(e2)) {
            for (var n2 in this.options[t3] = e2, this._actions.map)
              this.options[n2][t3] = e2;
            return this;
          }
          return this.options[t3];
        } }, { key: "origin", value: function(t3) {
          return this._backCompatOption("origin", t3);
        } }, { key: "deltaSource", value: function(t3) {
          return "page" === t3 || "client" === t3 ? (this.options.deltaSource = t3, this) : this.options.deltaSource;
        } }, { key: "getAllElements", value: function() {
          var t3 = this.target;
          return w.string(t3) ? Array.from(this._context.querySelectorAll(t3)) : w.func(t3) && t3.getAllElements ? t3.getAllElements() : w.element(t3) ? [t3] : [];
        } }, { key: "context", value: function() {
          return this._context;
        } }, { key: "inContext", value: function(t3) {
          return this._context === t3.ownerDocument || M(this._context, t3);
        } }, { key: "testIgnoreAllow", value: function(t3, e2, n2) {
          return !this.testIgnore(t3.ignoreFrom, e2, n2) && this.testAllow(t3.allowFrom, e2, n2);
        } }, { key: "testAllow", value: function(t3, e2, n2) {
          return !t3 || !!w.element(n2) && (w.string(t3) ? F(n2, t3, e2) : !!w.element(t3) && M(t3, n2));
        } }, { key: "testIgnore", value: function(t3, e2, n2) {
          return !(!t3 || !w.element(n2)) && (w.string(t3) ? F(n2, t3, e2) : !!w.element(t3) && M(t3, n2));
        } }, { key: "fire", value: function(t3) {
          return this.events.fire(t3), this;
        } }, { key: "_onOff", value: function(t3, e2, n2, r2, i2) {
          w.object(e2) && !w.array(e2) && (r2 = n2, n2 = null);
          var o2 = $(e2, n2, i2);
          for (var a2 in o2) {
            "wheel" === a2 && (a2 = I.wheelEvent);
            for (var s2 = 0, c2 = o2[a2]; s2 < c2.length; s2++) {
              var l2 = c2[s2];
              ve(a2, this._actions) ? this.events[t3 === rn.On ? "on" : "off"](a2, l2) : w.string(this.target) ? this._scopeEvents[t3 === rn.On ? "addDelegate" : "removeDelegate"](this.target, this._context, a2, l2, r2) : this._scopeEvents[t3 === rn.On ? "add" : "remove"](this.target, a2, l2, r2);
            }
          }
          return this;
        } }, { key: "on", value: function(t3, e2, n2) {
          return this._onOff(rn.On, t3, e2, n2);
        } }, { key: "off", value: function(t3, e2, n2) {
          return this._onOff(rn.Off, t3, e2, n2);
        } }, { key: "set", value: function(t3) {
          var e2 = this._defaults;
          for (var n2 in w.object(t3) || (t3 = {}), this.options = ge(e2.base), this._actions.methodDict) {
            var r2 = n2, i2 = this._actions.methodDict[r2];
            this.options[r2] = {}, this.setPerAction(r2, V(V({}, e2.perAction), e2.actions[r2])), this[i2](t3[r2]);
          }
          for (var o2 in t3)
            "getRect" !== o2 ? w.func(this[o2]) && this[o2](t3[o2]) : this.rectChecker(t3.getRect);
          return this;
        } }, { key: "unset", value: function() {
          if (w.string(this.target))
            for (var t3 in this._scopeEvents.delegatedEvents)
              for (var e2 = this._scopeEvents.delegatedEvents[t3], n2 = e2.length - 1; n2 >= 0; n2--) {
                var r2 = e2[n2], i2 = r2.selector, o2 = r2.context, a2 = r2.listeners;
                i2 === this.target && o2 === this._context && e2.splice(n2, 1);
                for (var s2 = a2.length - 1; s2 >= 0; s2--)
                  this._scopeEvents.removeDelegate(this.target, this._context, t3, a2[s2][0], a2[s2][1]);
              }
          else
            this._scopeEvents.remove(this.target, "all");
        } }]), t2;
      }(), an = function() {
        function t2(e2) {
          var n2 = this;
          r(this, t2), this.list = [], this.selectorMap = {}, this.scope = void 0, this.scope = e2, e2.addListeners({ "interactable:unset": function(t3) {
            var e3 = t3.interactable, r2 = e3.target, i2 = w.string(r2) ? n2.selectorMap[r2] : r2[n2.scope.id], o2 = yt(i2, function(t4) {
              return t4 === e3;
            });
            i2.splice(o2, 1);
          } });
        }
        return o(t2, [{ key: "new", value: function(t3, e2) {
          e2 = V(e2 || {}, { actions: this.scope.actions });
          var n2 = new this.scope.Interactable(t3, e2, this.scope.document, this.scope.events);
          return this.scope.addDocument(n2._doc), this.list.push(n2), w.string(t3) ? (this.selectorMap[t3] || (this.selectorMap[t3] = []), this.selectorMap[t3].push(n2)) : (n2.target[this.scope.id] || Object.defineProperty(t3, this.scope.id, { value: [], configurable: true }), t3[this.scope.id].push(n2)), this.scope.fire("interactable:new", { target: t3, options: e2, interactable: n2, win: this.scope._win }), n2;
        } }, { key: "getExisting", value: function(t3, e2) {
          var n2 = e2 && e2.context || this.scope.document, r2 = w.string(t3), i2 = r2 ? this.selectorMap[t3] : t3[this.scope.id];
          if (i2)
            return bt(i2, function(e3) {
              return e3._context === n2 && (r2 || e3.inContext(t3));
            });
        } }, { key: "forEachMatch", value: function(t3, e2) {
          for (var n2 = 0, r2 = this.list; n2 < r2.length; n2++) {
            var i2 = r2[n2], o2 = void 0;
            if ((w.string(i2.target) ? w.element(t3) && R(t3, i2.target) : t3 === i2.target) && i2.inContext(t3) && (o2 = e2(i2)), void 0 !== o2)
              return o2;
          }
        } }]), t2;
      }();
      var sn = function() {
        function t2() {
          var e2 = this;
          r(this, t2), this.id = "__interact_scope_".concat(Math.floor(100 * Math.random())), this.isInitialized = false, this.listenerMaps = [], this.browser = I, this.defaults = ge(Te), this.Eventable = Ve, this.actions = { map: {}, phases: { start: true, move: true, end: true }, methodDict: {}, phaselessTypes: {} }, this.interactStatic = function(t3) {
            var e3 = function e4(n3, r2) {
              var i2 = t3.interactables.getExisting(n3, r2);
              return i2 || ((i2 = t3.interactables.new(n3, r2)).events.global = e4.globalEvents), i2;
            };
            return e3.getPointerAverage = lt, e3.getTouchBBox = ut, e3.getTouchDistance = pt, e3.getTouchAngle = ft, e3.getElementRect = L, e3.getElementClientRect = Y, e3.matchesSelector = R, e3.closest = z, e3.globalEvents = {}, e3.version = "1.10.27", e3.scope = t3, e3.use = function(t4, e4) {
              return this.scope.usePlugin(t4, e4), this;
            }, e3.isSet = function(t4, e4) {
              return !!this.scope.interactables.get(t4, e4 && e4.context);
            }, e3.on = Nt(function(t4, e4, n3) {
              if (w.string(t4) && -1 !== t4.search(" ") && (t4 = t4.trim().split(/ +/)), w.array(t4)) {
                for (var r2 = 0, i2 = t4; r2 < i2.length; r2++) {
                  var o2 = i2[r2];
                  this.on(o2, e4, n3);
                }
                return this;
              }
              if (w.object(t4)) {
                for (var a2 in t4)
                  this.on(a2, t4[a2], e4);
                return this;
              }
              return ve(t4, this.scope.actions) ? this.globalEvents[t4] ? this.globalEvents[t4].push(e4) : this.globalEvents[t4] = [e4] : this.scope.events.add(this.scope.document, t4, e4, { options: n3 }), this;
            }, "The interact.on() method is being deprecated"), e3.off = Nt(function(t4, e4, n3) {
              if (w.string(t4) && -1 !== t4.search(" ") && (t4 = t4.trim().split(/ +/)), w.array(t4)) {
                for (var r2 = 0, i2 = t4; r2 < i2.length; r2++) {
                  var o2 = i2[r2];
                  this.off(o2, e4, n3);
                }
                return this;
              }
              if (w.object(t4)) {
                for (var a2 in t4)
                  this.off(a2, t4[a2], e4);
                return this;
              }
              var s2;
              return ve(t4, this.scope.actions) ? t4 in this.globalEvents && -1 !== (s2 = this.globalEvents[t4].indexOf(e4)) && this.globalEvents[t4].splice(s2, 1) : this.scope.events.remove(this.scope.document, t4, e4, n3), this;
            }, "The interact.off() method is being deprecated"), e3.debug = function() {
              return this.scope;
            }, e3.supportsTouch = function() {
              return I.supportsTouch;
            }, e3.supportsPointerEvent = function() {
              return I.supportsPointerEvent;
            }, e3.stop = function() {
              for (var t4 = 0, e4 = this.scope.interactions.list; t4 < e4.length; t4++)
                e4[t4].stop();
              return this;
            }, e3.pointerMoveTolerance = function(t4) {
              return w.number(t4) ? (this.scope.interactions.pointerMoveTolerance = t4, this) : this.scope.interactions.pointerMoveTolerance;
            }, e3.addDocument = function(t4, e4) {
              this.scope.addDocument(t4, e4);
            }, e3.removeDocument = function(t4) {
              this.scope.removeDocument(t4);
            }, e3;
          }(this), this.InteractEvent = Se, this.Interactable = void 0, this.interactables = new an(this), this._win = void 0, this.document = void 0, this.window = void 0, this.documents = [], this._plugins = { list: [], map: {} }, this.onWindowUnload = function(t3) {
            return e2.removeDocument(t3.target);
          };
          var n2 = this;
          this.Interactable = function(t3) {
            s(i2, t3);
            var e3 = p(i2);
            function i2() {
              return r(this, i2), e3.apply(this, arguments);
            }
            return o(i2, [{ key: "_defaults", get: function() {
              return n2.defaults;
            } }, { key: "set", value: function(t4) {
              return f(c(i2.prototype), "set", this).call(this, t4), n2.fire("interactable:set", { options: t4, interactable: this }), this;
            } }, { key: "unset", value: function() {
              f(c(i2.prototype), "unset", this).call(this);
              var t4 = n2.interactables.list.indexOf(this);
              t4 < 0 || (n2.interactables.list.splice(t4, 1), n2.fire("interactable:unset", { interactable: this }));
            } }]), i2;
          }(on);
        }
        return o(t2, [{ key: "addListeners", value: function(t3, e2) {
          this.listenerMaps.push({ id: e2, map: t3 });
        } }, { key: "fire", value: function(t3, e2) {
          for (var n2 = 0, r2 = this.listenerMaps; n2 < r2.length; n2++) {
            var i2 = r2[n2].map[t3];
            if (i2 && false === i2(e2, this, t3))
              return false;
          }
        } }, { key: "init", value: function(t3) {
          return this.isInitialized ? this : function(t4, e2) {
            t4.isInitialized = true, w.window(e2) && m(e2);
            return k.init(e2), I.init(e2), Lt.init(e2), t4.window = e2, t4.document = e2.document, t4.usePlugin(nn), t4.usePlugin(Ue), t4;
          }(this, t3);
        } }, { key: "pluginIsInstalled", value: function(t3) {
          var e2 = t3.id;
          return e2 ? !!this._plugins.map[e2] : -1 !== this._plugins.list.indexOf(t3);
        } }, { key: "usePlugin", value: function(t3, e2) {
          if (!this.isInitialized)
            return this;
          if (this.pluginIsInstalled(t3))
            return this;
          if (t3.id && (this._plugins.map[t3.id] = t3), this._plugins.list.push(t3), t3.install && t3.install(this, e2), t3.listeners && t3.before) {
            for (var n2 = 0, r2 = this.listenerMaps.length, i2 = t3.before.reduce(function(t4, e3) {
              return t4[e3] = true, t4[cn(e3)] = true, t4;
            }, {}); n2 < r2; n2++) {
              var o2 = this.listenerMaps[n2].id;
              if (o2 && (i2[o2] || i2[cn(o2)]))
                break;
            }
            this.listenerMaps.splice(n2, 0, { id: t3.id, map: t3.listeners });
          } else
            t3.listeners && this.listenerMaps.push({ id: t3.id, map: t3.listeners });
          return this;
        } }, { key: "addDocument", value: function(t3, e2) {
          if (-1 !== this.getDocIndex(t3))
            return false;
          var n2 = y(t3);
          e2 = e2 ? V({}, e2) : {}, this.documents.push({ doc: t3, options: e2 }), this.events.documents.push(t3), t3 !== this.document && this.events.add(n2, "unload", this.onWindowUnload), this.fire("scope:add-document", { doc: t3, window: n2, scope: this, options: e2 });
        } }, { key: "removeDocument", value: function(t3) {
          var e2 = this.getDocIndex(t3), n2 = y(t3), r2 = this.documents[e2].options;
          this.events.remove(n2, "unload", this.onWindowUnload), this.documents.splice(e2, 1), this.events.documents.splice(e2, 1), this.fire("scope:remove-document", { doc: t3, window: n2, scope: this, options: r2 });
        } }, { key: "getDocIndex", value: function(t3) {
          for (var e2 = 0; e2 < this.documents.length; e2++)
            if (this.documents[e2].doc === t3)
              return e2;
          return -1;
        } }, { key: "getDocOptions", value: function(t3) {
          var e2 = this.getDocIndex(t3);
          return -1 === e2 ? null : this.documents[e2].options;
        } }, { key: "now", value: function() {
          return (this.window.Date || Date).now();
        } }]), t2;
      }();
      function cn(t2) {
        return t2 && t2.replace(/\/.*$/, "");
      }
      var ln = new sn(), un = ln.interactStatic, pn = "undefined" != typeof globalThis ? globalThis : window;
      ln.init(pn);
      var fn = Object.freeze({ __proto__: null, edgeTarget: function() {
      }, elements: function() {
      }, grid: function(t2) {
        var e2 = [["x", "y"], ["left", "top"], ["right", "bottom"], ["width", "height"]].filter(function(e3) {
          var n3 = e3[0], r2 = e3[1];
          return n3 in t2 || r2 in t2;
        }), n2 = function(n3, r2) {
          for (var i2 = t2.range, o2 = t2.limits, a2 = void 0 === o2 ? { left: -1 / 0, right: 1 / 0, top: -1 / 0, bottom: 1 / 0 } : o2, s2 = t2.offset, c2 = void 0 === s2 ? { x: 0, y: 0 } : s2, l2 = { range: i2, grid: t2, x: null, y: null }, u2 = 0; u2 < e2.length; u2++) {
            var p2 = e2[u2], f2 = p2[0], d2 = p2[1], h2 = Math.round((n3 - c2.x) / t2[f2]), v2 = Math.round((r2 - c2.y) / t2[d2]);
            l2[f2] = Math.max(a2.left, Math.min(a2.right, h2 * t2[f2] + c2.x)), l2[d2] = Math.max(a2.top, Math.min(a2.bottom, v2 * t2[d2] + c2.y));
          }
          return l2;
        };
        return n2.grid = t2, n2.coordFields = e2, n2;
      } }), dn = { id: "snappers", install: function(t2) {
        var e2 = t2.interactStatic;
        e2.snappers = V(e2.snappers || {}, fn), e2.createSnapGrid = e2.snappers.grid;
      } }, hn = dn, vn = { start: function(t2) {
        var n2 = t2.state, r2 = t2.rect, i2 = t2.edges, o2 = t2.pageCoords, a2 = n2.options, s2 = a2.ratio, c2 = a2.enabled, l2 = n2.options, u2 = l2.equalDelta, p2 = l2.modifiers;
        "preserve" === s2 && (s2 = r2.width / r2.height), n2.startCoords = V({}, o2), n2.startRect = V({}, r2), n2.ratio = s2, n2.equalDelta = u2;
        var f2 = n2.linkedEdges = { top: i2.top || i2.left && !i2.bottom, left: i2.left || i2.top && !i2.right, bottom: i2.bottom || i2.right && !i2.top, right: i2.right || i2.bottom && !i2.left };
        if (n2.xIsPrimaryAxis = !(!i2.left && !i2.right), n2.equalDelta) {
          var d2 = (f2.left ? 1 : -1) * (f2.top ? 1 : -1);
          n2.edgeSign = { x: d2, y: d2 };
        } else
          n2.edgeSign = { x: f2.left ? -1 : 1, y: f2.top ? -1 : 1 };
        if (false !== c2 && V(i2, f2), null != p2 && p2.length) {
          var h2 = new me(t2.interaction);
          h2.copyFrom(t2.interaction.modification), h2.prepareStates(p2), n2.subModification = h2, h2.startAll(e({}, t2));
        }
      }, set: function(t2) {
        var n2 = t2.state, r2 = t2.rect, i2 = t2.coords, o2 = n2.linkedEdges, a2 = V({}, i2), s2 = n2.equalDelta ? gn : mn;
        if (V(t2.edges, o2), s2(n2, n2.xIsPrimaryAxis, i2, r2), !n2.subModification)
          return null;
        var c2 = V({}, r2);
        H(o2, c2, { x: i2.x - a2.x, y: i2.y - a2.y });
        var l2 = n2.subModification.setAll(e(e({}, t2), {}, { rect: c2, edges: o2, pageCoords: i2, prevCoords: i2, prevRect: c2 })), u2 = l2.delta;
        l2.changed && (s2(n2, Math.abs(u2.x) > Math.abs(u2.y), l2.coords, l2.rect), V(i2, l2.coords));
        return l2.eventProps;
      }, defaults: { ratio: "preserve", equalDelta: false, modifiers: [], enabled: false } };
      function gn(t2, e2, n2) {
        var r2 = t2.startCoords, i2 = t2.edgeSign;
        e2 ? n2.y = r2.y + (n2.x - r2.x) * i2.y : n2.x = r2.x + (n2.y - r2.y) * i2.x;
      }
      function mn(t2, e2, n2, r2) {
        var i2 = t2.startRect, o2 = t2.startCoords, a2 = t2.ratio, s2 = t2.edgeSign;
        if (e2) {
          var c2 = r2.width / a2;
          n2.y = o2.y + (c2 - i2.height) * s2.y;
        } else {
          var l2 = r2.height * a2;
          n2.x = o2.x + (l2 - i2.width) * s2.x;
        }
      }
      var yn = be(vn, "aspectRatio"), bn = function() {
      };
      bn._defaults = {};
      var xn = bn;
      function wn(t2, e2, n2) {
        return w.func(t2) ? G(t2, e2.interactable, e2.element, [n2.x, n2.y, e2]) : G(t2, e2.interactable, e2.element);
      }
      var En = { start: function(t2) {
        var e2 = t2.rect, n2 = t2.startOffset, r2 = t2.state, i2 = t2.interaction, o2 = t2.pageCoords, a2 = r2.options, s2 = a2.elementRect, c2 = V({ left: 0, top: 0, right: 0, bottom: 0 }, a2.offset || {});
        if (e2 && s2) {
          var l2 = wn(a2.restriction, i2, o2);
          if (l2) {
            var u2 = l2.right - l2.left - e2.width, p2 = l2.bottom - l2.top - e2.height;
            u2 < 0 && (c2.left += u2, c2.right += u2), p2 < 0 && (c2.top += p2, c2.bottom += p2);
          }
          c2.left += n2.left - e2.width * s2.left, c2.top += n2.top - e2.height * s2.top, c2.right += n2.right - e2.width * (1 - s2.right), c2.bottom += n2.bottom - e2.height * (1 - s2.bottom);
        }
        r2.offset = c2;
      }, set: function(t2) {
        var e2 = t2.coords, n2 = t2.interaction, r2 = t2.state, i2 = r2.options, o2 = r2.offset, a2 = wn(i2.restriction, n2, e2);
        if (a2) {
          var s2 = function(t3) {
            return !t3 || "left" in t3 && "top" in t3 || ((t3 = V({}, t3)).left = t3.x || 0, t3.top = t3.y || 0, t3.right = t3.right || t3.left + t3.width, t3.bottom = t3.bottom || t3.top + t3.height), t3;
          }(a2);
          e2.x = Math.max(Math.min(s2.right - o2.right, e2.x), s2.left + o2.left), e2.y = Math.max(Math.min(s2.bottom - o2.bottom, e2.y), s2.top + o2.top);
        }
      }, defaults: { restriction: null, elementRect: null, offset: null, endOnly: false, enabled: false } }, Tn = be(En, "restrict"), Sn = { top: 1 / 0, left: 1 / 0, bottom: -1 / 0, right: -1 / 0 }, _n = { top: -1 / 0, left: -1 / 0, bottom: 1 / 0, right: 1 / 0 };
      function Pn(t2, e2) {
        for (var n2 = 0, r2 = ["top", "left", "bottom", "right"]; n2 < r2.length; n2++) {
          var i2 = r2[n2];
          i2 in t2 || (t2[i2] = e2[i2]);
        }
        return t2;
      }
      var On = { noInner: Sn, noOuter: _n, start: function(t2) {
        var e2, n2 = t2.interaction, r2 = t2.startOffset, i2 = t2.state, o2 = i2.options;
        o2 && (e2 = N(wn(o2.offset, n2, n2.coords.start.page))), e2 = e2 || { x: 0, y: 0 }, i2.offset = { top: e2.y + r2.top, left: e2.x + r2.left, bottom: e2.y - r2.bottom, right: e2.x - r2.right };
      }, set: function(t2) {
        var e2 = t2.coords, n2 = t2.edges, r2 = t2.interaction, i2 = t2.state, o2 = i2.offset, a2 = i2.options;
        if (n2) {
          var s2 = V({}, e2), c2 = wn(a2.inner, r2, s2) || {}, l2 = wn(a2.outer, r2, s2) || {};
          Pn(c2, Sn), Pn(l2, _n), n2.top ? e2.y = Math.min(Math.max(l2.top + o2.top, s2.y), c2.top + o2.top) : n2.bottom && (e2.y = Math.max(Math.min(l2.bottom + o2.bottom, s2.y), c2.bottom + o2.bottom)), n2.left ? e2.x = Math.min(Math.max(l2.left + o2.left, s2.x), c2.left + o2.left) : n2.right && (e2.x = Math.max(Math.min(l2.right + o2.right, s2.x), c2.right + o2.right));
        }
      }, defaults: { inner: null, outer: null, offset: null, endOnly: false, enabled: false } }, kn = be(On, "restrictEdges"), Dn = V({ get elementRect() {
        return { top: 0, left: 0, bottom: 1, right: 1 };
      }, set elementRect(t2) {
      } }, En.defaults), In = be({ start: En.start, set: En.set, defaults: Dn }, "restrictRect"), Mn = { width: -1 / 0, height: -1 / 0 }, zn = { width: 1 / 0, height: 1 / 0 };
      var An = be({ start: function(t2) {
        return On.start(t2);
      }, set: function(t2) {
        var e2 = t2.interaction, n2 = t2.state, r2 = t2.rect, i2 = t2.edges, o2 = n2.options;
        if (i2) {
          var a2 = U(wn(o2.min, e2, t2.coords)) || Mn, s2 = U(wn(o2.max, e2, t2.coords)) || zn;
          n2.options = { endOnly: o2.endOnly, inner: V({}, On.noInner), outer: V({}, On.noOuter) }, i2.top ? (n2.options.inner.top = r2.bottom - a2.height, n2.options.outer.top = r2.bottom - s2.height) : i2.bottom && (n2.options.inner.bottom = r2.top + a2.height, n2.options.outer.bottom = r2.top + s2.height), i2.left ? (n2.options.inner.left = r2.right - a2.width, n2.options.outer.left = r2.right - s2.width) : i2.right && (n2.options.inner.right = r2.left + a2.width, n2.options.outer.right = r2.left + s2.width), On.set(t2), n2.options = o2;
        }
      }, defaults: { min: null, max: null, endOnly: false, enabled: false } }, "restrictSize");
      var Rn = { start: function(t2) {
        var e2, n2 = t2.interaction, r2 = t2.interactable, i2 = t2.element, o2 = t2.rect, a2 = t2.state, s2 = t2.startOffset, c2 = a2.options, l2 = c2.offsetWithOrigin ? function(t3) {
          var e3 = t3.interaction.element, n3 = N(G(t3.state.options.origin, null, null, [e3])), r3 = n3 || K(t3.interactable, e3, t3.interaction.prepared.name);
          return r3;
        }(t2) : { x: 0, y: 0 };
        if ("startCoords" === c2.offset)
          e2 = { x: n2.coords.start.page.x, y: n2.coords.start.page.y };
        else {
          var u2 = G(c2.offset, r2, i2, [n2]);
          (e2 = N(u2) || { x: 0, y: 0 }).x += l2.x, e2.y += l2.y;
        }
        var p2 = c2.relativePoints;
        a2.offsets = o2 && p2 && p2.length ? p2.map(function(t3, n3) {
          return { index: n3, relativePoint: t3, x: s2.left - o2.width * t3.x + e2.x, y: s2.top - o2.height * t3.y + e2.y };
        }) : [{ index: 0, relativePoint: null, x: e2.x, y: e2.y }];
      }, set: function(t2) {
        var e2 = t2.interaction, n2 = t2.coords, r2 = t2.state, i2 = r2.options, o2 = r2.offsets, a2 = K(e2.interactable, e2.element, e2.prepared.name), s2 = V({}, n2), c2 = [];
        i2.offsetWithOrigin || (s2.x -= a2.x, s2.y -= a2.y);
        for (var l2 = 0, u2 = o2; l2 < u2.length; l2++)
          for (var p2 = u2[l2], f2 = s2.x - p2.x, d2 = s2.y - p2.y, h2 = 0, v2 = i2.targets.length; h2 < v2; h2++) {
            var g2 = i2.targets[h2], m2 = void 0;
            (m2 = w.func(g2) ? g2(f2, d2, e2._proxy, p2, h2) : g2) && c2.push({ x: (w.number(m2.x) ? m2.x : f2) + p2.x, y: (w.number(m2.y) ? m2.y : d2) + p2.y, range: w.number(m2.range) ? m2.range : i2.range, source: g2, index: h2, offset: p2 });
          }
        for (var y2 = { target: null, inRange: false, distance: 0, range: 0, delta: { x: 0, y: 0 } }, b2 = 0; b2 < c2.length; b2++) {
          var x2 = c2[b2], E2 = x2.range, T2 = x2.x - s2.x, S2 = x2.y - s2.y, _2 = Q(T2, S2), P2 = _2 <= E2;
          E2 === 1 / 0 && y2.inRange && y2.range !== 1 / 0 && (P2 = false), y2.target && !(P2 ? y2.inRange && E2 !== 1 / 0 ? _2 / E2 < y2.distance / y2.range : E2 === 1 / 0 && y2.range !== 1 / 0 || _2 < y2.distance : !y2.inRange && _2 < y2.distance) || (y2.target = x2, y2.distance = _2, y2.range = E2, y2.inRange = P2, y2.delta.x = T2, y2.delta.y = S2);
        }
        return y2.inRange && (n2.x = y2.target.x, n2.y = y2.target.y), r2.closest = y2, y2;
      }, defaults: { range: 1 / 0, targets: null, offset: null, offsetWithOrigin: true, origin: null, relativePoints: null, endOnly: false, enabled: false } }, Cn = be(Rn, "snap");
      var jn = { start: function(t2) {
        var e2 = t2.state, n2 = t2.edges, r2 = e2.options;
        if (!n2)
          return null;
        t2.state = { options: { targets: null, relativePoints: [{ x: n2.left ? 0 : 1, y: n2.top ? 0 : 1 }], offset: r2.offset || "self", origin: { x: 0, y: 0 }, range: r2.range } }, e2.targetFields = e2.targetFields || [["width", "height"], ["x", "y"]], Rn.start(t2), e2.offsets = t2.state.offsets, t2.state = e2;
      }, set: function(t2) {
        var e2 = t2.interaction, n2 = t2.state, r2 = t2.coords, i2 = n2.options, o2 = n2.offsets, a2 = { x: r2.x - o2[0].x, y: r2.y - o2[0].y };
        n2.options = V({}, i2), n2.options.targets = [];
        for (var s2 = 0, c2 = i2.targets || []; s2 < c2.length; s2++) {
          var l2 = c2[s2], u2 = void 0;
          if (u2 = w.func(l2) ? l2(a2.x, a2.y, e2) : l2) {
            for (var p2 = 0, f2 = n2.targetFields; p2 < f2.length; p2++) {
              var d2 = f2[p2], h2 = d2[0], v2 = d2[1];
              if (h2 in u2 || v2 in u2) {
                u2.x = u2[h2], u2.y = u2[v2];
                break;
              }
            }
            n2.options.targets.push(u2);
          }
        }
        var g2 = Rn.set(t2);
        return n2.options = i2, g2;
      }, defaults: { range: 1 / 0, targets: null, offset: null, endOnly: false, enabled: false } }, Fn = be(jn, "snapSize");
      var Xn = { aspectRatio: yn, restrictEdges: kn, restrict: Tn, restrictRect: In, restrictSize: An, snapEdges: be({ start: function(t2) {
        var e2 = t2.edges;
        return e2 ? (t2.state.targetFields = t2.state.targetFields || [[e2.left ? "left" : "right", e2.top ? "top" : "bottom"]], jn.start(t2)) : null;
      }, set: jn.set, defaults: V(ge(jn.defaults), { targets: void 0, range: void 0, offset: { x: 0, y: 0 } }) }, "snapEdges"), snap: Cn, snapSize: Fn, spring: xn, avoid: xn, transform: xn, rubberband: xn }, Yn = { id: "modifiers", install: function(t2) {
        var e2 = t2.interactStatic;
        for (var n2 in t2.usePlugin(Ee), t2.usePlugin(hn), e2.modifiers = Xn, Xn) {
          var r2 = Xn[n2], i2 = r2._defaults, o2 = r2._methods;
          i2._methods = o2, t2.defaults.perAction[n2] = i2;
        }
      } }, Ln = Yn, qn = function(t2) {
        s(n2, t2);
        var e2 = p(n2);
        function n2(t3, i2, o2, a2, s2, c2) {
          var l2;
          if (r(this, n2), tt(u(l2 = e2.call(this, s2)), o2), o2 !== i2 && tt(u(l2), i2), l2.timeStamp = c2, l2.originalEvent = o2, l2.type = t3, l2.pointerId = at(i2), l2.pointerType = dt(i2), l2.target = a2, l2.currentTarget = null, "tap" === t3) {
            var p2 = s2.getPointerIndex(i2);
            l2.dt = l2.timeStamp - s2.pointers[p2].downTime;
            var f2 = l2.timeStamp - s2.tapTime;
            l2.double = !!s2.prevTap && "doubletap" !== s2.prevTap.type && s2.prevTap.target === l2.target && f2 < 500;
          } else
            "doubletap" === t3 && (l2.dt = i2.timeStamp - s2.tapTime, l2.double = true);
          return l2;
        }
        return o(n2, [{ key: "_subtractOrigin", value: function(t3) {
          var e3 = t3.x, n3 = t3.y;
          return this.pageX -= e3, this.pageY -= n3, this.clientX -= e3, this.clientY -= n3, this;
        } }, { key: "_addOrigin", value: function(t3) {
          var e3 = t3.x, n3 = t3.y;
          return this.pageX += e3, this.pageY += n3, this.clientX += e3, this.clientY += n3, this;
        } }, { key: "preventDefault", value: function() {
          this.originalEvent.preventDefault();
        } }]), n2;
      }(vt), Bn = { id: "pointer-events/base", before: ["inertia", "modifiers", "auto-start", "actions"], install: function(t2) {
        t2.pointerEvents = Bn, t2.defaults.actions.pointerEvents = Bn.defaults, V(t2.actions.phaselessTypes, Bn.types);
      }, listeners: { "interactions:new": function(t2) {
        var e2 = t2.interaction;
        e2.prevTap = null, e2.tapTime = 0;
      }, "interactions:update-pointer": function(t2) {
        var e2 = t2.down, n2 = t2.pointerInfo;
        if (!e2 && n2.hold)
          return;
        n2.hold = { duration: 1 / 0, timeout: null };
      }, "interactions:move": function(t2, e2) {
        var n2 = t2.interaction, r2 = t2.pointer, i2 = t2.event, o2 = t2.eventTarget;
        t2.duplicate || n2.pointerIsDown && !n2.pointerWasMoved || (n2.pointerIsDown && Gn(t2), Vn({ interaction: n2, pointer: r2, event: i2, eventTarget: o2, type: "move" }, e2));
      }, "interactions:down": function(t2, e2) {
        !function(t3, e3) {
          for (var n2 = t3.interaction, r2 = t3.pointer, i2 = t3.event, o2 = t3.eventTarget, a2 = t3.pointerIndex, s2 = n2.pointers[a2].hold, c2 = q(o2), l2 = { interaction: n2, pointer: r2, event: i2, eventTarget: o2, type: "hold", targets: [], path: c2, node: null }, u2 = 0; u2 < c2.length; u2++) {
            var p2 = c2[u2];
            l2.node = p2, e3.fire("pointerEvents:collect-targets", l2);
          }
          if (!l2.targets.length)
            return;
          for (var f2 = 1 / 0, d2 = 0, h2 = l2.targets; d2 < h2.length; d2++) {
            var v2 = h2[d2].eventable.options.holdDuration;
            v2 < f2 && (f2 = v2);
          }
          s2.duration = f2, s2.timeout = setTimeout(function() {
            Vn({ interaction: n2, eventTarget: o2, pointer: r2, event: i2, type: "hold" }, e3);
          }, f2);
        }(t2, e2), Vn(t2, e2);
      }, "interactions:up": function(t2, e2) {
        Gn(t2), Vn(t2, e2), function(t3, e3) {
          var n2 = t3.interaction, r2 = t3.pointer, i2 = t3.event, o2 = t3.eventTarget;
          n2.pointerWasMoved || Vn({ interaction: n2, eventTarget: o2, pointer: r2, event: i2, type: "tap" }, e3);
        }(t2, e2);
      }, "interactions:cancel": function(t2, e2) {
        Gn(t2), Vn(t2, e2);
      } }, PointerEvent: qn, fire: Vn, collectEventTargets: Wn, defaults: { holdDuration: 600, ignoreFrom: null, allowFrom: null, origin: { x: 0, y: 0 } }, types: { down: true, move: true, up: true, cancel: true, tap: true, doubletap: true, hold: true } };
      function Vn(t2, e2) {
        var n2 = t2.interaction, r2 = t2.pointer, i2 = t2.event, o2 = t2.eventTarget, a2 = t2.type, s2 = t2.targets, c2 = void 0 === s2 ? Wn(t2, e2) : s2, l2 = new qn(a2, r2, i2, o2, n2, e2.now());
        e2.fire("pointerEvents:new", { pointerEvent: l2 });
        for (var u2 = { interaction: n2, pointer: r2, event: i2, eventTarget: o2, targets: c2, type: a2, pointerEvent: l2 }, p2 = 0; p2 < c2.length; p2++) {
          var f2 = c2[p2];
          for (var d2 in f2.props || {})
            l2[d2] = f2.props[d2];
          var h2 = K(f2.eventable, f2.node);
          if (l2._subtractOrigin(h2), l2.eventable = f2.eventable, l2.currentTarget = f2.node, f2.eventable.fire(l2), l2._addOrigin(h2), l2.immediatePropagationStopped || l2.propagationStopped && p2 + 1 < c2.length && c2[p2 + 1].node !== l2.currentTarget)
            break;
        }
        if (e2.fire("pointerEvents:fired", u2), "tap" === a2) {
          var v2 = l2.double ? Vn({ interaction: n2, pointer: r2, event: i2, eventTarget: o2, type: "doubletap" }, e2) : l2;
          n2.prevTap = v2, n2.tapTime = v2.timeStamp;
        }
        return l2;
      }
      function Wn(t2, e2) {
        var n2 = t2.interaction, r2 = t2.pointer, i2 = t2.event, o2 = t2.eventTarget, a2 = t2.type, s2 = n2.getPointerIndex(r2), c2 = n2.pointers[s2];
        if ("tap" === a2 && (n2.pointerWasMoved || !c2 || c2.downTarget !== o2))
          return [];
        for (var l2 = q(o2), u2 = { interaction: n2, pointer: r2, event: i2, eventTarget: o2, type: a2, path: l2, targets: [], node: null }, p2 = 0; p2 < l2.length; p2++) {
          var f2 = l2[p2];
          u2.node = f2, e2.fire("pointerEvents:collect-targets", u2);
        }
        return "hold" === a2 && (u2.targets = u2.targets.filter(function(t3) {
          var e3, r3;
          return t3.eventable.options.holdDuration === (null == (e3 = n2.pointers[s2]) || null == (r3 = e3.hold) ? void 0 : r3.duration);
        })), u2.targets;
      }
      function Gn(t2) {
        var e2 = t2.interaction, n2 = t2.pointerIndex, r2 = e2.pointers[n2].hold;
        r2 && r2.timeout && (clearTimeout(r2.timeout), r2.timeout = null);
      }
      var Nn = Object.freeze({ __proto__: null, default: Bn });
      function Un(t2) {
        var e2 = t2.interaction;
        e2.holdIntervalHandle && (clearInterval(e2.holdIntervalHandle), e2.holdIntervalHandle = null);
      }
      var Hn = { id: "pointer-events/holdRepeat", install: function(t2) {
        t2.usePlugin(Bn);
        var e2 = t2.pointerEvents;
        e2.defaults.holdRepeatInterval = 0, e2.types.holdrepeat = t2.actions.phaselessTypes.holdrepeat = true;
      }, listeners: ["move", "up", "cancel", "endall"].reduce(function(t2, e2) {
        return t2["pointerEvents:".concat(e2)] = Un, t2;
      }, { "pointerEvents:new": function(t2) {
        var e2 = t2.pointerEvent;
        "hold" === e2.type && (e2.count = (e2.count || 0) + 1);
      }, "pointerEvents:fired": function(t2, e2) {
        var n2 = t2.interaction, r2 = t2.pointerEvent, i2 = t2.eventTarget, o2 = t2.targets;
        if ("hold" === r2.type && o2.length) {
          var a2 = o2[0].eventable.options.holdRepeatInterval;
          a2 <= 0 || (n2.holdIntervalHandle = setTimeout(function() {
            e2.pointerEvents.fire({ interaction: n2, eventTarget: i2, type: "hold", pointer: r2, event: r2 }, e2);
          }, a2));
        }
      } }) }, Kn = Hn;
      var $n = { id: "pointer-events/interactableTargets", install: function(t2) {
        var e2 = t2.Interactable;
        e2.prototype.pointerEvents = function(t3) {
          return V(this.events.options, t3), this;
        };
        var n2 = e2.prototype._backCompatOption;
        e2.prototype._backCompatOption = function(t3, e3) {
          var r2 = n2.call(this, t3, e3);
          return r2 === this && (this.events.options[t3] = e3), r2;
        };
      }, listeners: { "pointerEvents:collect-targets": function(t2, e2) {
        var n2 = t2.targets, r2 = t2.node, i2 = t2.type, o2 = t2.eventTarget;
        e2.interactables.forEachMatch(r2, function(t3) {
          var e3 = t3.events, a2 = e3.options;
          e3.types[i2] && e3.types[i2].length && t3.testIgnoreAllow(a2, r2, o2) && n2.push({ node: r2, eventable: e3, props: { interactable: t3 } });
        });
      }, "interactable:new": function(t2) {
        var e2 = t2.interactable;
        e2.events.getRect = function(t3) {
          return e2.getRect(t3);
        };
      }, "interactable:set": function(t2, e2) {
        var n2 = t2.interactable, r2 = t2.options;
        V(n2.events.options, e2.pointerEvents.defaults), V(n2.events.options, r2.pointerEvents || {});
      } } }, Jn = $n, Qn = { id: "pointer-events", install: function(t2) {
        t2.usePlugin(Nn), t2.usePlugin(Kn), t2.usePlugin(Jn);
      } }, Zn = Qn;
      var tr = { id: "reflow", install: function(t2) {
        var e2 = t2.Interactable;
        t2.actions.phases.reflow = true, e2.prototype.reflow = function(e3) {
          return function(t3, e4, n2) {
            for (var r2 = t3.getAllElements(), i2 = n2.window.Promise, o2 = i2 ? [] : null, a2 = function() {
              var a3 = r2[s2], c2 = t3.getRect(a3);
              if (!c2)
                return 1;
              var l2, u2 = bt(n2.interactions.list, function(n3) {
                return n3.interacting() && n3.interactable === t3 && n3.element === a3 && n3.prepared.name === e4.name;
              });
              if (u2)
                u2.move(), o2 && (l2 = u2._reflowPromise || new i2(function(t4) {
                  u2._reflowResolve = t4;
                }));
              else {
                var p2 = U(c2), f2 = function(t4) {
                  return { coords: t4, get page() {
                    return this.coords.page;
                  }, get client() {
                    return this.coords.client;
                  }, get timeStamp() {
                    return this.coords.timeStamp;
                  }, get pageX() {
                    return this.coords.page.x;
                  }, get pageY() {
                    return this.coords.page.y;
                  }, get clientX() {
                    return this.coords.client.x;
                  }, get clientY() {
                    return this.coords.client.y;
                  }, get pointerId() {
                    return this.coords.pointerId;
                  }, get target() {
                    return this.coords.target;
                  }, get type() {
                    return this.coords.type;
                  }, get pointerType() {
                    return this.coords.pointerType;
                  }, get buttons() {
                    return this.coords.buttons;
                  }, preventDefault: function() {
                  } };
                }({ page: { x: p2.x, y: p2.y }, client: { x: p2.x, y: p2.y }, timeStamp: n2.now() });
                l2 = function(t4, e5, n3, r3, i3) {
                  var o3 = t4.interactions.new({ pointerType: "reflow" }), a4 = { interaction: o3, event: i3, pointer: i3, eventTarget: n3, phase: "reflow" };
                  o3.interactable = e5, o3.element = n3, o3.prevEvent = i3, o3.updatePointer(i3, i3, n3, true), nt(o3.coords.delta), Ut(o3.prepared, r3), o3._doPhase(a4);
                  var s3 = t4.window, c3 = s3.Promise, l3 = c3 ? new c3(function(t5) {
                    o3._reflowResolve = t5;
                  }) : void 0;
                  o3._reflowPromise = l3, o3.start(r3, e5, n3), o3._interacting ? (o3.move(a4), o3.end(i3)) : (o3.stop(), o3._reflowResolve());
                  return o3.removePointer(i3, i3), l3;
                }(n2, t3, a3, e4, f2);
              }
              o2 && o2.push(l2);
            }, s2 = 0; s2 < r2.length && !a2(); s2++)
              ;
            return o2 && i2.all(o2).then(function() {
              return t3;
            });
          }(this, e3, t2);
        };
      }, listeners: { "interactions:stop": function(t2, e2) {
        var n2 = t2.interaction;
        "reflow" === n2.pointerType && (n2._reflowResolve && n2._reflowResolve(), function(t3, e3) {
          t3.splice(t3.indexOf(e3), 1);
        }(e2.interactions.list, n2));
      } } }, er = tr;
      if (un.use(he), un.use(Ce), un.use(Zn), un.use(qe), un.use(Ln), un.use(pe), un.use(Xt), un.use(Gt), un.use(er), un.default = un, "object" === ("undefined" == typeof module ? "undefined" : n(module)) && module)
        try {
          module.exports = un;
        } catch (t2) {
        }
      return un.default = un, un;
    });
  }
});

// node_modules/lodash.isequal/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.isequal/index.js"(exports, module) {
    var LARGE_ARRAY_SIZE = 200;
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var asyncTag = "[object AsyncFunction]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var nullTag = "[object Null]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var proxyTag = "[object Proxy]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var undefinedTag = "[object Undefined]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    function arrayFilter(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    function arrayPush(array, values) {
      var index = -1, length = values.length, offset = array.length;
      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }
    function arraySome(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    function baseTimes(n, iteratee) {
      var index = -1, result = Array(n);
      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    function setToArray(set) {
      var index = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root["__core-js_shared__"];
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    var nativeObjectToString = objectProto.toString;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    var Buffer = moduleExports ? root.Buffer : void 0;
    var Symbol2 = root.Symbol;
    var Uint8Array = root.Uint8Array;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var splice = arrayProto.splice;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
    var nativeKeys = overArg(Object.keys, Object);
    var DataView = getNative(root, "DataView");
    var Map = getNative(root, "Map");
    var Promise2 = getNative(root, "Promise");
    var Set = getNative(root, "Set");
    var WeakMap = getNative(root, "WeakMap");
    var nativeCreate = getNative(Object, "create");
    var dataViewCtorString = toSource(DataView);
    var mapCtorString = toSource(Map);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set);
    var weakMapCtorString = toSource(WeakMap);
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function Hash(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function SetCache(values) {
      var index = -1, length = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    function stackGet(key) {
      return this.__data__.get(key);
    }
    function stackHas(key) {
      return this.__data__.has(key);
    }
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
        (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
        isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    var getTag = baseGetTag;
    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    var isArguments = baseIsArguments(function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    var isArray = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    var isBuffer = nativeIsBuffer || stubFalse;
    function isEqual2(value, other) {
      return baseIsEqual(value, other);
    }
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    function stubArray() {
      return [];
    }
    function stubFalse() {
      return false;
    }
    module.exports = isEqual2;
  }
});

// node_modules/react-calendar-timeline/lib/lib/utility/generic.js
var require_generic = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/utility/generic.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports._get = _get;
    exports._length = _length;
    exports.arraysEqual = arraysEqual;
    exports.deepObjectCompare = deepObjectCompare;
    exports.keyBy = keyBy;
    exports.noop = noop;
    var _lodash = _interopRequireDefault(require_lodash());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _get(object, key) {
      return typeof object.get === "function" ? object.get(key) : object[key];
    }
    function _length(object) {
      return typeof object.count === "function" ? object.count() : object.length;
    }
    function arraysEqual(array1, array2) {
      return _length(array1) === _length(array2) && array1.every(function(element, index) {
        return element === _get(array2, index);
      });
    }
    function deepObjectCompare(obj1, obj2) {
      return (0, _lodash["default"])(obj1, obj2);
    }
    function keyBy(value, key) {
      var obj = {};
      value.forEach(function(element) {
        obj[element[key]] = element;
      });
      return obj;
    }
    function noop() {
    }
  }
});

// node_modules/react-calendar-timeline/lib/lib/utility/events.js
var require_events = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/utility/events.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.composeEvents = composeEvents;
    function composeEvents() {
      for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
        fns[_key] = arguments[_key];
      }
      return function(event) {
        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }
        event.preventDefault();
        fns.forEach(function(fn) {
          return fn && fn.apply(void 0, [event].concat(args));
        });
      };
    }
  }
});

// node_modules/react-calendar-timeline/lib/lib/items/defaultItemRenderer.js
var require_defaultItemRenderer = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/items/defaultItemRenderer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.defaultItemRenderer = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var defaultItemRenderer = function defaultItemRenderer2(_ref) {
      var item = _ref.item, itemContext = _ref.itemContext, getItemProps = _ref.getItemProps, getResizeProps = _ref.getResizeProps;
      var _getResizeProps = getResizeProps(), leftResizeProps = _getResizeProps.left, rightResizeProps = _getResizeProps.right;
      return _react["default"].createElement("div", getItemProps(item.itemProps), itemContext.useResizeHandle ? _react["default"].createElement("div", leftResizeProps) : "", _react["default"].createElement("div", {
        className: "rct-item-content",
        style: {
          maxHeight: "".concat(itemContext.dimensions.height)
        }
      }, itemContext.title), itemContext.useResizeHandle ? _react["default"].createElement("div", rightResizeProps) : "");
    };
    exports.defaultItemRenderer = defaultItemRenderer;
    defaultItemRenderer.propTypes = {
      item: _propTypes["default"].any,
      itemContext: _propTypes["default"].any,
      getItemProps: _propTypes["default"].any,
      getResizeProps: _propTypes["default"].any
    };
  }
});

// node_modules/react-calendar-timeline/lib/lib/utility/calendar.js
var require_calendar = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/utility/calendar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.coordinateToTimeRatio = coordinateToTimeRatio;
    exports.calculateXPositionForTime = calculateXPositionForTime;
    exports.calculateTimeForXPosition = calculateTimeForXPosition;
    exports.iterateTimes = iterateTimes;
    exports.getMinUnit = getMinUnit;
    exports.getNextUnit = getNextUnit;
    exports.calculateInteractionNewTimes = calculateInteractionNewTimes;
    exports.calculateDimensions = calculateDimensions;
    exports.getGroupOrders = getGroupOrders;
    exports.getGroupedItems = getGroupedItems;
    exports.getVisibleItems = getVisibleItems;
    exports.collision = collision;
    exports.groupStack = groupStack;
    exports.groupNoStack = groupNoStack;
    exports.stackAll = stackAll;
    exports.stackGroup = stackGroup;
    exports.stackTimelineItems = stackTimelineItems;
    exports.getCanvasWidth = getCanvasWidth;
    exports.getItemDimensions = getItemDimensions;
    exports.getItemWithInteractions = getItemWithInteractions;
    exports.getCanvasBoundariesFromVisibleTime = getCanvasBoundariesFromVisibleTime;
    exports.calculateScrollCanvas = calculateScrollCanvas;
    exports.minCellWidth = void 0;
    var _moment = _interopRequireDefault((init_moment(), __toCommonJS(moment_exports)));
    var _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
    function _iterableToArrayLimit(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = void 0;
      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function coordinateToTimeRatio(canvasTimeStart, canvasTimeEnd, canvasWidth) {
      return (canvasTimeEnd - canvasTimeStart) / canvasWidth;
    }
    function calculateXPositionForTime(canvasTimeStart, canvasTimeEnd, canvasWidth, time) {
      var widthToZoomRatio = canvasWidth / (canvasTimeEnd - canvasTimeStart);
      var timeOffset = time - canvasTimeStart;
      return timeOffset * widthToZoomRatio;
    }
    function calculateTimeForXPosition(canvasTimeStart, canvasTimeEnd, canvasWidth, leftOffset) {
      var timeToPxRatio = (canvasTimeEnd - canvasTimeStart) / canvasWidth;
      var timeFromCanvasTimeStart = timeToPxRatio * leftOffset;
      return timeFromCanvasTimeStart + canvasTimeStart;
    }
    function iterateTimes(start, end, unit, timeSteps, callback) {
      var time = (0, _moment["default"])(start).startOf(unit);
      if (timeSteps[unit] && timeSteps[unit] > 1) {
        var value = time.get(unit);
        time.set(unit, value - value % timeSteps[unit]);
      }
      while (time.valueOf() < end) {
        var nextTime = (0, _moment["default"])(time).add(timeSteps[unit] || 1, "".concat(unit, "s"));
        callback(time, nextTime);
        time = nextTime;
      }
    }
    var minCellWidth = 17;
    exports.minCellWidth = minCellWidth;
    function getMinUnit(zoom, width, timeSteps) {
      var timeDividers = {
        second: 1e3,
        minute: 60,
        hour: 60,
        day: 24,
        month: 30,
        year: 12
      };
      var minUnit = "year";
      var nextTimeSpanInUnitContext = zoom;
      Object.keys(timeDividers).some(function(unit) {
        nextTimeSpanInUnitContext = nextTimeSpanInUnitContext / timeDividers[unit];
        var cellsToBeRenderedForCurrentUnit = nextTimeSpanInUnitContext / timeSteps[unit];
        var cellWidthToUse = timeSteps[unit] && timeSteps[unit] > 1 ? 3 * minCellWidth : minCellWidth;
        var minimumCellsToRenderUnit = width / cellWidthToUse;
        if (cellsToBeRenderedForCurrentUnit < minimumCellsToRenderUnit) {
          minUnit = unit;
          return true;
        }
      });
      return minUnit;
    }
    function getNextUnit(unit) {
      var nextUnits = {
        second: "minute",
        minute: "hour",
        hour: "day",
        day: "month",
        month: "year",
        year: "year"
      };
      if (!nextUnits[unit]) {
        throw new Error("unit ".concat(unit, " in not acceptable"));
      }
      return nextUnits[unit];
    }
    function calculateInteractionNewTimes(_ref) {
      var itemTimeStart = _ref.itemTimeStart, itemTimeEnd = _ref.itemTimeEnd, dragTime = _ref.dragTime, isDragging = _ref.isDragging, isResizing = _ref.isResizing, resizingEdge = _ref.resizingEdge, resizeTime = _ref.resizeTime;
      var originalItemRange = itemTimeEnd - itemTimeStart;
      var itemStart = isResizing && resizingEdge === "left" ? resizeTime : itemTimeStart;
      var itemEnd = isResizing && resizingEdge === "right" ? resizeTime : itemTimeEnd;
      return [isDragging ? dragTime : itemStart, isDragging ? dragTime + originalItemRange : itemEnd];
    }
    function calculateDimensions(_ref2) {
      var itemTimeStart = _ref2.itemTimeStart, itemTimeEnd = _ref2.itemTimeEnd, canvasTimeStart = _ref2.canvasTimeStart, canvasTimeEnd = _ref2.canvasTimeEnd, canvasWidth = _ref2.canvasWidth;
      var itemTimeRange = itemTimeEnd - itemTimeStart;
      var effectiveStartTime = Math.max(itemTimeStart, canvasTimeStart);
      var effectiveEndTime = Math.min(itemTimeEnd, canvasTimeEnd);
      var left = calculateXPositionForTime(canvasTimeStart, canvasTimeEnd, canvasWidth, effectiveStartTime);
      var right = calculateXPositionForTime(canvasTimeStart, canvasTimeEnd, canvasWidth, effectiveEndTime);
      var itemWidth = right - left;
      var dimensions = {
        left,
        width: Math.max(itemWidth, 3),
        collisionLeft: itemTimeStart,
        collisionWidth: itemTimeRange
      };
      return dimensions;
    }
    function getGroupOrders(groups, keys) {
      var groupIdKey = keys.groupIdKey;
      var groupOrders = {};
      for (var i = 0; i < groups.length; i++) {
        groupOrders[(0, _generic._get)(groups[i], groupIdKey)] = {
          index: i,
          group: groups[i]
        };
      }
      return groupOrders;
    }
    function getGroupedItems(items, groupOrders) {
      var groupedItems = {};
      var keys = Object.keys(groupOrders);
      for (var i = 0; i < keys.length; i++) {
        var groupOrder = groupOrders[keys[i]];
        groupedItems[i] = {
          index: groupOrder.index,
          group: groupOrder.group,
          items: []
        };
      }
      for (var _i = 0; _i < items.length; _i++) {
        if (items[_i].dimensions.order !== void 0) {
          var groupItem = groupedItems[items[_i].dimensions.order.index];
          if (groupItem) {
            groupItem.items.push(items[_i]);
          }
        }
      }
      return groupedItems;
    }
    function getVisibleItems(items, canvasTimeStart, canvasTimeEnd, keys) {
      var itemTimeStartKey = keys.itemTimeStartKey, itemTimeEndKey = keys.itemTimeEndKey;
      return items.filter(function(item) {
        return (0, _generic._get)(item, itemTimeStartKey) <= canvasTimeEnd && (0, _generic._get)(item, itemTimeEndKey) >= canvasTimeStart;
      });
    }
    var EPSILON = 1e-3;
    function collision(a, b, lineHeight) {
      var collisionPadding = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : EPSILON;
      var verticalMargin = 0;
      return a.collisionLeft + collisionPadding < b.collisionLeft + b.collisionWidth && a.collisionLeft + a.collisionWidth - collisionPadding > b.collisionLeft && a.top - verticalMargin + collisionPadding < b.top + b.height && a.top + a.height + verticalMargin - collisionPadding > b.top;
    }
    function groupStack(lineHeight, item, group, groupHeight, groupTop, itemIndex) {
      var curHeight = groupHeight;
      var verticalMargin = (lineHeight - item.dimensions.height) / 2;
      if (item.dimensions.stack && item.dimensions.top === null) {
        item.dimensions.top = groupTop + verticalMargin;
        curHeight = Math.max(curHeight, lineHeight);
        do {
          var collidingItem = null;
          for (var j = itemIndex - 1, jj = 0; j >= jj; j--) {
            var other = group[j];
            if (other.dimensions.top !== null && other.dimensions.stack && collision(item.dimensions, other.dimensions, lineHeight)) {
              collidingItem = other;
              break;
            } else {
            }
          }
          if (collidingItem != null) {
            item.dimensions.top = collidingItem.dimensions.top + lineHeight;
            curHeight = Math.max(curHeight, item.dimensions.top + item.dimensions.height + verticalMargin - groupTop);
          }
        } while (collidingItem);
      }
      return {
        groupHeight: curHeight,
        verticalMargin,
        itemTop: item.dimensions.top
      };
    }
    function groupNoStack(lineHeight, item, groupHeight, groupTop) {
      var verticalMargin = (lineHeight - item.dimensions.height) / 2;
      if (item.dimensions.top === null) {
        item.dimensions.top = groupTop + verticalMargin;
        groupHeight = Math.max(groupHeight, lineHeight);
      }
      return {
        groupHeight,
        verticalMargin: 0,
        itemTop: item.dimensions.top
      };
    }
    function sum() {
      var arr = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      return arr.reduce(function(acc, i) {
        return acc + i;
      }, 0);
    }
    function stackAll(itemsDimensions, groupOrders, lineHeight, stackItems) {
      var groupHeights = [];
      var groupTops = [];
      var groupedItems = getGroupedItems(itemsDimensions, groupOrders);
      for (var index in groupedItems) {
        var groupItems = groupedItems[index];
        var _itemsDimensions = groupItems.items, group = groupItems.group;
        var groupTop = sum(groupHeights);
        var isGroupStacked = group.stackItems !== void 0 ? group.stackItems : stackItems;
        var _stackGroup = stackGroup(_itemsDimensions, isGroupStacked, lineHeight, groupTop), groupHeight = _stackGroup.groupHeight, verticalMargin = _stackGroup.verticalMargin;
        groupTops.push(groupTop);
        if (group.height) {
          groupHeights.push(group.height);
        } else {
          groupHeights.push(Math.max(groupHeight, lineHeight));
        }
      }
      return {
        height: sum(groupHeights),
        groupHeights,
        groupTops
      };
    }
    function stackGroup(itemsDimensions, isGroupStacked, lineHeight, groupTop) {
      var groupHeight = 0;
      var verticalMargin = 0;
      for (var itemIndex = 0; itemIndex < itemsDimensions.length; itemIndex++) {
        var r = {};
        if (isGroupStacked) {
          r = groupStack(lineHeight, itemsDimensions[itemIndex], itemsDimensions, groupHeight, groupTop, itemIndex);
        } else {
          r = groupNoStack(lineHeight, itemsDimensions[itemIndex], groupHeight, groupTop);
        }
        groupHeight = r.groupHeight;
        verticalMargin = r.verticalMargin;
      }
      return {
        groupHeight,
        verticalMargin
      };
    }
    function stackTimelineItems(items, groups, canvasWidth, canvasTimeStart, canvasTimeEnd, keys, lineHeight, itemHeightRatio, stackItems, draggingItem, resizingItem, dragTime, resizingEdge, resizeTime, newGroupOrder) {
      var visibleItems = getVisibleItems(items, canvasTimeStart, canvasTimeEnd, keys);
      var visibleItemsWithInteraction = visibleItems.map(function(item) {
        return getItemWithInteractions({
          item,
          keys,
          draggingItem,
          resizingItem,
          dragTime,
          resizingEdge,
          resizeTime,
          groups,
          newGroupOrder
        });
      });
      if (groups.length === 0) {
        return {
          dimensionItems: [],
          height: 0,
          groupHeights: [],
          groupTops: []
        };
      }
      var groupOrders = getGroupOrders(groups, keys);
      var dimensionItems = visibleItemsWithInteraction.map(function(item) {
        return getItemDimensions({
          item,
          keys,
          canvasTimeStart,
          canvasTimeEnd,
          canvasWidth,
          groupOrders,
          lineHeight,
          itemHeightRatio
        });
      }).filter(function(item) {
        return !!item;
      });
      var _stackAll = stackAll(dimensionItems, groupOrders, lineHeight, stackItems), height = _stackAll.height, groupHeights = _stackAll.groupHeights, groupTops = _stackAll.groupTops;
      return {
        dimensionItems,
        height,
        groupHeights,
        groupTops
      };
    }
    function getCanvasWidth(width) {
      var buffer = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 3;
      return width * buffer;
    }
    function getItemDimensions(_ref3) {
      var item = _ref3.item, keys = _ref3.keys, canvasTimeStart = _ref3.canvasTimeStart, canvasTimeEnd = _ref3.canvasTimeEnd, canvasWidth = _ref3.canvasWidth, groupOrders = _ref3.groupOrders, lineHeight = _ref3.lineHeight, itemHeightRatio = _ref3.itemHeightRatio;
      var itemId = (0, _generic._get)(item, keys.itemIdKey);
      var dimension = calculateDimensions({
        itemTimeStart: (0, _generic._get)(item, keys.itemTimeStartKey),
        itemTimeEnd: (0, _generic._get)(item, keys.itemTimeEndKey),
        canvasTimeStart,
        canvasTimeEnd,
        canvasWidth
      });
      if (dimension) {
        dimension.top = null;
        dimension.order = groupOrders[(0, _generic._get)(item, keys.itemGroupKey)];
        dimension.stack = !item.isOverlay;
        dimension.height = lineHeight * itemHeightRatio;
        return {
          id: itemId,
          dimensions: dimension
        };
      }
    }
    function getItemWithInteractions(_ref4) {
      var _objectSpread2;
      var item = _ref4.item, keys = _ref4.keys, draggingItem = _ref4.draggingItem, resizingItem = _ref4.resizingItem, dragTime = _ref4.dragTime, resizingEdge = _ref4.resizingEdge, resizeTime = _ref4.resizeTime, groups = _ref4.groups, newGroupOrder = _ref4.newGroupOrder;
      if (!resizingItem && !draggingItem)
        return item;
      var itemId = (0, _generic._get)(item, keys.itemIdKey);
      var isDragging = itemId === draggingItem;
      var isResizing = itemId === resizingItem;
      var _calculateInteraction = calculateInteractionNewTimes({
        itemTimeStart: (0, _generic._get)(item, keys.itemTimeStartKey),
        itemTimeEnd: (0, _generic._get)(item, keys.itemTimeEndKey),
        isDragging,
        isResizing,
        dragTime,
        resizingEdge,
        resizeTime
      }), _calculateInteraction2 = _slicedToArray(_calculateInteraction, 2), itemTimeStart = _calculateInteraction2[0], itemTimeEnd = _calculateInteraction2[1];
      var newItem = _objectSpread({}, item, (_objectSpread2 = {}, _defineProperty(_objectSpread2, keys.itemTimeStartKey, itemTimeStart), _defineProperty(_objectSpread2, keys.itemTimeEndKey, itemTimeEnd), _defineProperty(_objectSpread2, keys.itemGroupKey, isDragging ? (0, _generic._get)(groups[newGroupOrder], keys.groupIdKey) : (0, _generic._get)(item, keys.itemGroupKey)), _objectSpread2));
      return newItem;
    }
    function getCanvasBoundariesFromVisibleTime(visibleTimeStart, visibleTimeEnd) {
      var zoom = visibleTimeEnd - visibleTimeStart;
      var canvasTimeStart = visibleTimeStart - (visibleTimeEnd - visibleTimeStart);
      var canvasTimeEnd = canvasTimeStart + zoom * 3;
      return [canvasTimeStart, canvasTimeEnd];
    }
    function calculateScrollCanvas(visibleTimeStart, visibleTimeEnd, forceUpdateDimensions, items, groups, props, state) {
      var oldCanvasTimeStart = state.canvasTimeStart;
      var oldZoom = state.visibleTimeEnd - state.visibleTimeStart;
      var newZoom = visibleTimeEnd - visibleTimeStart;
      var newState = {
        visibleTimeStart,
        visibleTimeEnd
        // Check if the current canvas covers the new times
      };
      var canKeepCanvas = newZoom === oldZoom && visibleTimeStart >= oldCanvasTimeStart + oldZoom * 0.5 && visibleTimeStart <= oldCanvasTimeStart + oldZoom * 1.5 && visibleTimeEnd >= oldCanvasTimeStart + oldZoom * 1.5 && visibleTimeEnd <= oldCanvasTimeStart + oldZoom * 2.5;
      if (!canKeepCanvas || forceUpdateDimensions) {
        var _getCanvasBoundariesF = getCanvasBoundariesFromVisibleTime(visibleTimeStart, visibleTimeEnd), _getCanvasBoundariesF2 = _slicedToArray(_getCanvasBoundariesF, 2), canvasTimeStart = _getCanvasBoundariesF2[0], canvasTimeEnd = _getCanvasBoundariesF2[1];
        newState.canvasTimeStart = canvasTimeStart;
        newState.canvasTimeEnd = canvasTimeEnd;
        var mergedState = _objectSpread({}, state, {}, newState);
        var canvasWidth = getCanvasWidth(mergedState.width);
        Object.assign(newState, stackTimelineItems(items, groups, canvasWidth, mergedState.canvasTimeStart, mergedState.canvasTimeEnd, props.keys, props.lineHeight, props.itemHeightRatio, props.stackItems, mergedState.draggingItem, mergedState.resizingItem, mergedState.dragTime, mergedState.resizingEdge, mergedState.resizeTime, mergedState.newGroupOrder));
      }
      return newState;
    }
  }
});

// node_modules/react-calendar-timeline/lib/lib/utility/dom-helpers.js
var require_dom_helpers = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/utility/dom-helpers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getParentPosition = getParentPosition;
    exports.getSumScroll = getSumScroll;
    exports.getSumOffset = getSumOffset;
    function getParentPosition(element) {
      var xPosition = 0;
      var yPosition = 0;
      var first = true;
      while (element) {
        if (!element.offsetParent && element.tagName === "BODY" && element.scrollLeft === 0 && element.scrollTop === 0) {
          element = document.scrollingElement || element;
        }
        xPosition += element.offsetLeft - (first ? 0 : element.scrollLeft) + element.clientLeft;
        yPosition += element.offsetTop - (first ? 0 : element.scrollTop) + element.clientTop;
        element = element.offsetParent;
        first = false;
      }
      return {
        x: xPosition,
        y: yPosition
      };
    }
    function getSumScroll(node) {
      if (node === document.body) {
        return {
          scrollLeft: 0,
          scrollTop: 0
        };
      } else {
        var parent = getSumScroll(node.parentNode);
        return {
          scrollLeft: node.scrollLeft + parent.scrollLeft,
          scrollTop: node.scrollTop + parent.scrollTop
        };
      }
    }
    function getSumOffset(node) {
      if (node === document.body || !node.offsetParent) {
        return {
          offsetLeft: 0,
          offsetTop: 0
        };
      } else {
        var parent = getSumOffset(node.offsetParent);
        return {
          offsetLeft: node.offsetLeft + parent.offsetLeft,
          offsetTop: node.offsetTop + parent.offsetTop
        };
      }
    }
  }
});

// node_modules/react-calendar-timeline/lib/lib/items/styles.js
var require_styles = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/items/styles.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.rightResizeStyle = exports.leftResizeStyle = exports.selectedAndCanResizeRightAndDragRight = exports.selectedAndCanResizeRight = exports.selectedAndCanResizeLeftAndDragLeft = exports.selectedAndCanResizeLeft = exports.selectedAndCanMove = exports.selectedStyle = exports.overridableStyles = void 0;
    var overridableStyles = {
      fontSize: 12,
      color: "white",
      cursor: "pointer",
      background: "#2196f3",
      border: "1px solid #1a6fb3",
      zIndex: 80
    };
    exports.overridableStyles = overridableStyles;
    var selectedStyle = {
      background: "#ffc107",
      border: "1px solid #ff9800",
      zIndex: 82
    };
    exports.selectedStyle = selectedStyle;
    var selectedAndCanMove = {
      cursor: "move"
    };
    exports.selectedAndCanMove = selectedAndCanMove;
    var selectedAndCanResizeLeft = {
      borderLeftWidth: 3
    };
    exports.selectedAndCanResizeLeft = selectedAndCanResizeLeft;
    var selectedAndCanResizeLeftAndDragLeft = {
      cursor: "w-resize"
    };
    exports.selectedAndCanResizeLeftAndDragLeft = selectedAndCanResizeLeftAndDragLeft;
    var selectedAndCanResizeRight = {
      borderRightWidth: 3
    };
    exports.selectedAndCanResizeRight = selectedAndCanResizeRight;
    var selectedAndCanResizeRightAndDragRight = {
      cursor: "e-resize"
    };
    exports.selectedAndCanResizeRightAndDragRight = selectedAndCanResizeRightAndDragRight;
    var leftResizeStyle = {
      position: "absolute",
      width: 24,
      maxWidth: "20%",
      minWidth: 2,
      height: "100%",
      top: 0,
      left: 0,
      cursor: "pointer",
      zIndex: 88
    };
    exports.leftResizeStyle = leftResizeStyle;
    var rightResizeStyle = {
      position: "absolute",
      width: 24,
      maxWidth: "20%",
      minWidth: 2,
      height: "100%",
      top: 0,
      right: 0,
      cursor: "pointer",
      zIndex: 88
    };
    exports.rightResizeStyle = rightResizeStyle;
  }
});

// node_modules/react-calendar-timeline/lib/lib/items/Item.js
var require_Item = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/items/Item.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = require_react();
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _interactjs = _interopRequireDefault(require_interact_min());
    var _moment = _interopRequireDefault((init_moment(), __toCommonJS(moment_exports)));
    var _generic = require_generic();
    var _events = require_events();
    var _defaultItemRenderer = require_defaultItemRenderer();
    var _calendar = require_calendar();
    var _domHelpers = require_dom_helpers();
    var _styles = require_styles();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var Item = function(_Component) {
      _inherits(Item2, _Component);
      function Item2(_props) {
        var _this;
        _classCallCheck(this, Item2);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(Item2).call(this, _props));
        _defineProperty(_assertThisInitialized(_this), "onMouseDown", function(e) {
          if (!_this.state.interactMounted) {
            e.preventDefault();
            _this.startedClicking = true;
          }
        });
        _defineProperty(_assertThisInitialized(_this), "onMouseUp", function(e) {
          if (!_this.state.interactMounted && _this.startedClicking) {
            _this.startedClicking = false;
            _this.actualClick(e, "click");
          }
        });
        _defineProperty(_assertThisInitialized(_this), "onTouchStart", function(e) {
          if (!_this.state.interactMounted) {
            e.preventDefault();
            _this.startedTouching = true;
          }
        });
        _defineProperty(_assertThisInitialized(_this), "onTouchEnd", function(e) {
          if (!_this.state.interactMounted && _this.startedTouching) {
            _this.startedTouching = false;
            _this.actualClick(e, "touch");
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleDoubleClick", function(e) {
          e.stopPropagation();
          if (_this.props.onItemDoubleClick) {
            _this.props.onItemDoubleClick(_this.itemId, e);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleContextMenu", function(e) {
          if (_this.props.onContextMenu) {
            e.preventDefault();
            e.stopPropagation();
            _this.props.onContextMenu(_this.itemId, e);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "getItemRef", function(el) {
          return _this.item = el;
        });
        _defineProperty(_assertThisInitialized(_this), "getDragLeftRef", function(el) {
          return _this.dragLeft = el;
        });
        _defineProperty(_assertThisInitialized(_this), "getDragRightRef", function(el) {
          return _this.dragRight = el;
        });
        _defineProperty(_assertThisInitialized(_this), "getItemProps", function() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          var classNames = "rct-item" + (_this.props.item.className ? " ".concat(_this.props.item.className) : "");
          return {
            key: _this.itemId,
            ref: _this.getItemRef,
            title: _this.itemDivTitle,
            className: classNames + " ".concat(props.className ? props.className : ""),
            onMouseDown: (0, _events.composeEvents)(_this.onMouseDown, props.onMouseDown),
            onMouseUp: (0, _events.composeEvents)(_this.onMouseUp, props.onMouseUp),
            onTouchStart: (0, _events.composeEvents)(_this.onTouchStart, props.onTouchStart),
            onTouchEnd: (0, _events.composeEvents)(_this.onTouchEnd, props.onTouchEnd),
            onDoubleClick: (0, _events.composeEvents)(_this.handleDoubleClick, props.onDoubleClick),
            onContextMenu: (0, _events.composeEvents)(_this.handleContextMenu, props.onContextMenu),
            style: Object.assign({}, _this.getItemStyle(props))
          };
        });
        _defineProperty(_assertThisInitialized(_this), "getResizeProps", function() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          var leftName = "rct-item-handler rct-item-handler-left rct-item-handler-resize-left";
          if (props.leftClassName) {
            leftName += " ".concat(props.leftClassName);
          }
          var rightName = "rct-item-handler rct-item-handler-right rct-item-handler-resize-right";
          if (props.rightClassName) {
            rightName += " ".concat(props.rightClassName);
          }
          return {
            left: {
              ref: _this.getDragLeftRef,
              className: leftName,
              style: Object.assign({}, _styles.leftResizeStyle, props.leftStyle)
            },
            right: {
              ref: _this.getDragRightRef,
              className: rightName,
              style: Object.assign({}, _styles.rightResizeStyle, props.rightStyle)
            }
          };
        });
        _this.cacheDataFromProps(_props);
        _this.state = {
          interactMounted: false,
          dragging: null,
          dragStart: null,
          preDragPosition: null,
          dragTime: null,
          dragGroupDelta: null,
          resizing: null,
          resizeEdge: null,
          resizeStart: null,
          resizeTime: null
        };
        return _this;
      }
      _createClass(Item2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps, nextState) {
          var shouldUpdate = nextState.dragging !== this.state.dragging || nextState.dragTime !== this.state.dragTime || nextState.dragGroupDelta !== this.state.dragGroupDelta || nextState.resizing !== this.state.resizing || nextState.resizeTime !== this.state.resizeTime || nextProps.keys !== this.props.keys || !(0, _generic.deepObjectCompare)(nextProps.itemProps, this.props.itemProps) || nextProps.selected !== this.props.selected || nextProps.item !== this.props.item || nextProps.canvasTimeStart !== this.props.canvasTimeStart || nextProps.canvasTimeEnd !== this.props.canvasTimeEnd || nextProps.canvasWidth !== this.props.canvasWidth || (nextProps.order ? nextProps.order.index : void 0) !== (this.props.order ? this.props.order.index : void 0) || nextProps.dragSnap !== this.props.dragSnap || nextProps.minResizeWidth !== this.props.minResizeWidth || nextProps.canChangeGroup !== this.props.canChangeGroup || nextProps.canSelect !== this.props.canSelect || nextProps.canMove !== this.props.canMove || nextProps.canResizeLeft !== this.props.canResizeLeft || nextProps.canResizeRight !== this.props.canResizeRight || nextProps.dimensions !== this.props.dimensions;
          return shouldUpdate;
        }
      }, {
        key: "cacheDataFromProps",
        value: function cacheDataFromProps(props) {
          this.itemId = (0, _generic._get)(props.item, props.keys.itemIdKey);
          this.itemTitle = (0, _generic._get)(props.item, props.keys.itemTitleKey);
          this.itemDivTitle = props.keys.itemDivTitleKey ? (0, _generic._get)(props.item, props.keys.itemDivTitleKey) : this.itemTitle;
          this.itemTimeStart = (0, _generic._get)(props.item, props.keys.itemTimeStartKey);
          this.itemTimeEnd = (0, _generic._get)(props.item, props.keys.itemTimeEndKey);
        }
      }, {
        key: "getTimeRatio",
        value: function getTimeRatio() {
          var _this$props = this.props, canvasTimeStart = _this$props.canvasTimeStart, canvasTimeEnd = _this$props.canvasTimeEnd, canvasWidth = _this$props.canvasWidth;
          return (0, _calendar.coordinateToTimeRatio)(canvasTimeStart, canvasTimeEnd, canvasWidth);
        }
      }, {
        key: "dragTimeSnap",
        value: function dragTimeSnap(dragTime, considerOffset) {
          var dragSnap = this.props.dragSnap;
          if (dragSnap) {
            var offset = considerOffset ? (0, _moment["default"])().utcOffset() * 60 * 1e3 : 0;
            return Math.round(dragTime / dragSnap) * dragSnap - offset % dragSnap;
          } else {
            return dragTime;
          }
        }
      }, {
        key: "resizeTimeSnap",
        value: function resizeTimeSnap(dragTime) {
          var dragSnap = this.props.dragSnap;
          if (dragSnap) {
            var endTime = this.itemTimeEnd % dragSnap;
            return Math.round((dragTime - endTime) / dragSnap) * dragSnap + endTime;
          } else {
            return dragTime;
          }
        }
      }, {
        key: "dragTime",
        value: function dragTime(e) {
          var startTime = (0, _moment["default"])(this.itemTimeStart);
          if (this.state.dragging) {
            return this.dragTimeSnap(this.timeFor(e) + this.state.dragStart.offset, true);
          } else {
            return startTime;
          }
        }
      }, {
        key: "timeFor",
        value: function timeFor(e) {
          var ratio = (0, _calendar.coordinateToTimeRatio)(this.props.canvasTimeStart, this.props.canvasTimeEnd, this.props.canvasWidth);
          var offset = (0, _domHelpers.getSumOffset)(this.props.scrollRef).offsetLeft;
          var scrolls = (0, _domHelpers.getSumScroll)(this.props.scrollRef);
          return (e.pageX - offset + scrolls.scrollLeft) * ratio + this.props.canvasTimeStart;
        }
      }, {
        key: "dragGroupDelta",
        value: function dragGroupDelta(e) {
          var _this$props2 = this.props, groupTops = _this$props2.groupTops, order = _this$props2.order;
          if (this.state.dragging) {
            if (!this.props.canChangeGroup) {
              return 0;
            }
            var groupDelta = 0;
            var offset = (0, _domHelpers.getSumOffset)(this.props.scrollRef).offsetTop;
            var scrolls = (0, _domHelpers.getSumScroll)(this.props.scrollRef);
            for (var _i = 0, _Object$keys = Object.keys(groupTops); _i < _Object$keys.length; _i++) {
              var key = _Object$keys[_i];
              var groupTop = groupTops[key];
              if (e.pageY - offset + scrolls.scrollTop > groupTop) {
                groupDelta = parseInt(key, 10) - order.index;
              } else {
                break;
              }
            }
            if (this.props.order.index + groupDelta < 0) {
              return 0 - this.props.order.index;
            } else {
              return groupDelta;
            }
          } else {
            return 0;
          }
        }
      }, {
        key: "resizeTimeDelta",
        value: function resizeTimeDelta(e, resizeEdge) {
          var length = this.itemTimeEnd - this.itemTimeStart;
          var timeDelta = this.dragTimeSnap((e.pageX - this.state.resizeStart) * this.getTimeRatio());
          if (length + (resizeEdge === "left" ? -timeDelta : timeDelta) < (this.props.dragSnap || 1e3)) {
            if (resizeEdge === "left") {
              return length - (this.props.dragSnap || 1e3);
            } else {
              return (this.props.dragSnap || 1e3) - length;
            }
          } else {
            return timeDelta;
          }
        }
      }, {
        key: "mountInteract",
        value: function mountInteract() {
          var _this2 = this;
          var leftResize = this.props.useResizeHandle ? ".rct-item-handler-resize-left" : true;
          var rightResize = this.props.useResizeHandle ? ".rct-item-handler-resize-right" : true;
          (0, _interactjs["default"])(this.item).resizable({
            edges: {
              left: this.canResizeLeft() && leftResize,
              right: this.canResizeRight() && rightResize,
              top: false,
              bottom: false
            },
            enabled: this.props.selected && (this.canResizeLeft() || this.canResizeRight())
          }).draggable({
            enabled: this.props.selected && this.canMove()
          }).styleCursor(false).on("dragstart", function(e) {
            if (_this2.props.selected) {
              var clickTime = _this2.timeFor(e);
              _this2.setState({
                dragging: true,
                dragStart: {
                  x: e.pageX,
                  y: e.pageY,
                  offset: _this2.itemTimeStart - clickTime
                },
                preDragPosition: {
                  x: e.target.offsetLeft,
                  y: e.target.offsetTop
                },
                dragTime: _this2.itemTimeStart,
                dragGroupDelta: 0
              });
            } else {
              return false;
            }
          }).on("dragmove", function(e) {
            if (_this2.state.dragging) {
              var dragTime = _this2.dragTime(e);
              var dragGroupDelta = _this2.dragGroupDelta(e);
              if (_this2.props.moveResizeValidator) {
                dragTime = _this2.props.moveResizeValidator("move", _this2.props.item, dragTime);
              }
              if (_this2.props.onDrag) {
                _this2.props.onDrag(_this2.itemId, dragTime, _this2.props.order.index + dragGroupDelta);
              }
              _this2.setState({
                dragTime,
                dragGroupDelta
              });
            }
          }).on("dragend", function(e) {
            if (_this2.state.dragging) {
              if (_this2.props.onDrop) {
                var dragTime = _this2.dragTime(e);
                if (_this2.props.moveResizeValidator) {
                  dragTime = _this2.props.moveResizeValidator("move", _this2.props.item, dragTime);
                }
                _this2.props.onDrop(_this2.itemId, dragTime, _this2.props.order.index + _this2.dragGroupDelta(e));
              }
              _this2.setState({
                dragging: false,
                dragStart: null,
                preDragPosition: null,
                dragTime: null,
                dragGroupDelta: null
              });
            }
          }).on("resizestart", function(e) {
            if (_this2.props.selected) {
              _this2.setState({
                resizing: true,
                resizeEdge: null,
                // we don't know yet
                resizeStart: e.pageX,
                resizeTime: 0
              });
            } else {
              return false;
            }
          }).on("resizemove", function(e) {
            if (_this2.state.resizing) {
              var resizeEdge = _this2.state.resizeEdge;
              if (!resizeEdge) {
                resizeEdge = e.deltaRect.left !== 0 ? "left" : "right";
                _this2.setState({
                  resizeEdge
                });
              }
              var resizeTime = _this2.resizeTimeSnap(_this2.timeFor(e));
              if (_this2.props.moveResizeValidator) {
                resizeTime = _this2.props.moveResizeValidator("resize", _this2.props.item, resizeTime, resizeEdge);
              }
              if (_this2.props.onResizing) {
                _this2.props.onResizing(_this2.itemId, resizeTime, resizeEdge);
              }
              _this2.setState({
                resizeTime
              });
            }
          }).on("resizeend", function(e) {
            if (_this2.state.resizing) {
              var resizeEdge = _this2.state.resizeEdge;
              var resizeTime = _this2.resizeTimeSnap(_this2.timeFor(e));
              if (_this2.props.moveResizeValidator) {
                resizeTime = _this2.props.moveResizeValidator("resize", _this2.props.item, resizeTime, resizeEdge);
              }
              if (_this2.props.onResized) {
                _this2.props.onResized(_this2.itemId, resizeTime, resizeEdge, _this2.resizeTimeDelta(e, resizeEdge));
              }
              _this2.setState({
                resizing: null,
                resizeStart: null,
                resizeEdge: null,
                resizeTime: null
              });
            }
          }).on("tap", function(e) {
            _this2.actualClick(e, e.pointerType === "mouse" ? "click" : "touch");
          });
          this.setState({
            interactMounted: true
          });
        }
      }, {
        key: "canResizeLeft",
        value: function canResizeLeft() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
          if (!props.canResizeLeft) {
            return false;
          }
          var width = parseInt(props.dimensions.width, 10);
          return width >= props.minResizeWidth;
        }
      }, {
        key: "canResizeRight",
        value: function canResizeRight() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
          if (!props.canResizeRight) {
            return false;
          }
          var width = parseInt(props.dimensions.width, 10);
          return width >= props.minResizeWidth;
        }
      }, {
        key: "canMove",
        value: function canMove() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
          return !!props.canMove;
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          this.cacheDataFromProps(this.props);
          var interactMounted = this.state.interactMounted;
          var couldDrag = prevProps.selected && this.canMove(prevProps);
          var couldResizeLeft = prevProps.selected && this.canResizeLeft(prevProps);
          var couldResizeRight = prevProps.selected && this.canResizeRight(prevProps);
          var willBeAbleToDrag = this.props.selected && this.canMove(this.props);
          var willBeAbleToResizeLeft = this.props.selected && this.canResizeLeft(this.props);
          var willBeAbleToResizeRight = this.props.selected && this.canResizeRight(this.props);
          if (!!this.item) {
            if (this.props.selected && !interactMounted) {
              this.mountInteract();
              interactMounted = true;
            }
            if (interactMounted && (couldResizeLeft !== willBeAbleToResizeLeft || couldResizeRight !== willBeAbleToResizeRight)) {
              var leftResize = this.props.useResizeHandle ? this.dragLeft : true;
              var rightResize = this.props.useResizeHandle ? this.dragRight : true;
              (0, _interactjs["default"])(this.item).resizable({
                enabled: willBeAbleToResizeLeft || willBeAbleToResizeRight,
                edges: {
                  top: false,
                  bottom: false,
                  left: willBeAbleToResizeLeft && leftResize,
                  right: willBeAbleToResizeRight && rightResize
                }
              });
            }
            if (interactMounted && couldDrag !== willBeAbleToDrag) {
              (0, _interactjs["default"])(this.item).draggable({
                enabled: willBeAbleToDrag
              });
            }
          } else {
            interactMounted = false;
          }
          this.setState({
            interactMounted
          });
        }
      }, {
        key: "actualClick",
        value: function actualClick(e, clickType) {
          if (this.props.canSelect && this.props.onSelect) {
            this.props.onSelect(this.itemId, clickType, e);
          }
        }
      }, {
        key: "getItemStyle",
        value: function getItemStyle(props) {
          var dimensions = this.props.dimensions;
          var baseStyles = {
            position: "absolute",
            boxSizing: "border-box",
            left: "".concat(dimensions.left, "px"),
            top: "".concat(dimensions.top, "px"),
            width: "".concat(dimensions.width, "px"),
            height: "".concat(dimensions.height, "px"),
            lineHeight: "".concat(dimensions.height, "px")
          };
          var finalStyle = Object.assign({}, _styles.overridableStyles, this.props.selected ? _styles.selectedStyle : {}, this.props.selected & this.canMove(this.props) ? _styles.selectedAndCanMove : {}, this.props.selected & this.canResizeLeft(this.props) ? _styles.selectedAndCanResizeLeft : {}, this.props.selected & this.canResizeLeft(this.props) & this.state.dragging ? _styles.selectedAndCanResizeLeftAndDragLeft : {}, this.props.selected & this.canResizeRight(this.props) ? _styles.selectedAndCanResizeRight : {}, this.props.selected & this.canResizeRight(this.props) & this.state.dragging ? _styles.selectedAndCanResizeRightAndDragRight : {}, props.style, baseStyles);
          return finalStyle;
        }
      }, {
        key: "render",
        value: function render() {
          if (typeof this.props.order === "undefined" || this.props.order === null) {
            return null;
          }
          var timelineContext = this.context.getTimelineContext();
          var itemContext = {
            dimensions: this.props.dimensions,
            useResizeHandle: this.props.useResizeHandle,
            title: this.itemTitle,
            canMove: this.canMove(this.props),
            canResizeLeft: this.canResizeLeft(this.props),
            canResizeRight: this.canResizeRight(this.props),
            selected: this.props.selected,
            dragging: this.state.dragging,
            dragStart: this.state.dragStart,
            dragTime: this.state.dragTime,
            dragGroupDelta: this.state.dragGroupDelta,
            resizing: this.state.resizing,
            resizeEdge: this.state.resizeEdge,
            resizeStart: this.state.resizeStart,
            resizeTime: this.state.resizeTime,
            width: this.props.dimensions.width
          };
          return this.props.itemRenderer({
            item: this.props.item,
            timelineContext,
            itemContext,
            getItemProps: this.getItemProps,
            getResizeProps: this.getResizeProps
          });
        }
      }]);
      return Item2;
    }(_react.Component);
    exports["default"] = Item;
    _defineProperty(Item, "propTypes", {
      canvasTimeStart: _propTypes["default"].number.isRequired,
      canvasTimeEnd: _propTypes["default"].number.isRequired,
      canvasWidth: _propTypes["default"].number.isRequired,
      order: _propTypes["default"].object,
      dragSnap: _propTypes["default"].number,
      minResizeWidth: _propTypes["default"].number,
      selected: _propTypes["default"].bool,
      canChangeGroup: _propTypes["default"].bool.isRequired,
      canMove: _propTypes["default"].bool.isRequired,
      canResizeLeft: _propTypes["default"].bool.isRequired,
      canResizeRight: _propTypes["default"].bool.isRequired,
      keys: _propTypes["default"].object.isRequired,
      item: _propTypes["default"].object.isRequired,
      onSelect: _propTypes["default"].func,
      onDrag: _propTypes["default"].func,
      onDrop: _propTypes["default"].func,
      onResizing: _propTypes["default"].func,
      onResized: _propTypes["default"].func,
      onContextMenu: _propTypes["default"].func,
      itemRenderer: _propTypes["default"].func,
      itemProps: _propTypes["default"].object,
      canSelect: _propTypes["default"].bool,
      dimensions: _propTypes["default"].object,
      groupTops: _propTypes["default"].array,
      useResizeHandle: _propTypes["default"].bool,
      moveResizeValidator: _propTypes["default"].func,
      onItemDoubleClick: _propTypes["default"].func,
      scrollRef: _propTypes["default"].object
    });
    _defineProperty(Item, "defaultProps", {
      selected: false,
      itemRenderer: _defaultItemRenderer.defaultItemRenderer
    });
    _defineProperty(Item, "contextTypes", {
      getTimelineContext: _propTypes["default"].func
    });
  }
});

// node_modules/react-calendar-timeline/lib/lib/items/Items.js
var require_Items = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/items/Items.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireWildcard(require_react());
    var _Item = _interopRequireDefault(require_Item());
    var _generic = require_generic();
    var _calendar = require_calendar();
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var canResizeLeft = function canResizeLeft2(item, canResize) {
      var value = (0, _generic._get)(item, "canResize") !== void 0 ? (0, _generic._get)(item, "canResize") : canResize;
      return value === "left" || value === "both";
    };
    var canResizeRight = function canResizeRight2(item, canResize) {
      var value = (0, _generic._get)(item, "canResize") !== void 0 ? (0, _generic._get)(item, "canResize") : canResize;
      return value === "right" || value === "both" || value === true;
    };
    var Items = function(_Component) {
      _inherits(Items2, _Component);
      function Items2() {
        _classCallCheck(this, Items2);
        return _possibleConstructorReturn(this, _getPrototypeOf(Items2).apply(this, arguments));
      }
      _createClass(Items2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps) {
          return !((0, _generic.arraysEqual)(nextProps.groups, this.props.groups) && (0, _generic.arraysEqual)(nextProps.items, this.props.items) && (0, _generic.arraysEqual)(nextProps.dimensionItems, this.props.dimensionItems) && nextProps.keys === this.props.keys && nextProps.canvasTimeStart === this.props.canvasTimeStart && nextProps.canvasTimeEnd === this.props.canvasTimeEnd && nextProps.canvasWidth === this.props.canvasWidth && nextProps.selectedItem === this.props.selectedItem && nextProps.selected === this.props.selected && nextProps.dragSnap === this.props.dragSnap && nextProps.minResizeWidth === this.props.minResizeWidth && nextProps.canChangeGroup === this.props.canChangeGroup && nextProps.canMove === this.props.canMove && nextProps.canResize === this.props.canResize && nextProps.canSelect === this.props.canSelect);
        }
      }, {
        key: "isSelected",
        value: function isSelected(item, itemIdKey) {
          if (!this.props.selected) {
            return this.props.selectedItem === (0, _generic._get)(item, itemIdKey);
          } else {
            var target = (0, _generic._get)(item, itemIdKey);
            return this.props.selected.includes(target);
          }
        }
      }, {
        key: "getVisibleItems",
        value: function getVisibleItems(canvasTimeStart, canvasTimeEnd) {
          var _this$props = this.props, keys = _this$props.keys, items = _this$props.items;
          return (0, _calendar.getVisibleItems)(items, canvasTimeStart, canvasTimeEnd, keys);
        }
      }, {
        key: "render",
        value: function render() {
          var _this = this;
          var _this$props2 = this.props, canvasTimeStart = _this$props2.canvasTimeStart, canvasTimeEnd = _this$props2.canvasTimeEnd, dimensionItems = _this$props2.dimensionItems, keys = _this$props2.keys, groups = _this$props2.groups;
          var itemIdKey = keys.itemIdKey, itemGroupKey = keys.itemGroupKey;
          var groupOrders = (0, _calendar.getGroupOrders)(groups, keys);
          var visibleItems = this.getVisibleItems(canvasTimeStart, canvasTimeEnd, groupOrders);
          var sortedDimensionItems = (0, _generic.keyBy)(dimensionItems, "id");
          return _react["default"].createElement("div", {
            className: "rct-items"
          }, visibleItems.filter(function(item) {
            return sortedDimensionItems[(0, _generic._get)(item, itemIdKey)];
          }).map(function(item) {
            return _react["default"].createElement(_Item["default"], {
              key: (0, _generic._get)(item, itemIdKey),
              item,
              keys: _this.props.keys,
              order: groupOrders[(0, _generic._get)(item, itemGroupKey)],
              dimensions: sortedDimensionItems[(0, _generic._get)(item, itemIdKey)].dimensions,
              selected: _this.isSelected(item, itemIdKey),
              canChangeGroup: (0, _generic._get)(item, "canChangeGroup") !== void 0 ? (0, _generic._get)(item, "canChangeGroup") : _this.props.canChangeGroup,
              canMove: (0, _generic._get)(item, "canMove") !== void 0 ? (0, _generic._get)(item, "canMove") : _this.props.canMove,
              canResizeLeft: canResizeLeft(item, _this.props.canResize),
              canResizeRight: canResizeRight(item, _this.props.canResize),
              canSelect: (0, _generic._get)(item, "canSelect") !== void 0 ? (0, _generic._get)(item, "canSelect") : _this.props.canSelect,
              useResizeHandle: _this.props.useResizeHandle,
              groupTops: _this.props.groupTops,
              canvasTimeStart: _this.props.canvasTimeStart,
              canvasTimeEnd: _this.props.canvasTimeEnd,
              canvasWidth: _this.props.canvasWidth,
              dragSnap: _this.props.dragSnap,
              minResizeWidth: _this.props.minResizeWidth,
              onResizing: _this.props.itemResizing,
              onResized: _this.props.itemResized,
              moveResizeValidator: _this.props.moveResizeValidator,
              onDrag: _this.props.itemDrag,
              onDrop: _this.props.itemDrop,
              onItemDoubleClick: _this.props.onItemDoubleClick,
              onContextMenu: _this.props.onItemContextMenu,
              onSelect: _this.props.itemSelect,
              itemRenderer: _this.props.itemRenderer,
              scrollRef: _this.props.scrollRef
            });
          }));
        }
      }]);
      return Items2;
    }(_react.Component);
    exports["default"] = Items;
    _defineProperty(Items, "propTypes", {
      groups: _propTypes["default"].oneOfType([_propTypes["default"].array, _propTypes["default"].object]).isRequired,
      items: _propTypes["default"].oneOfType([_propTypes["default"].array, _propTypes["default"].object]).isRequired,
      canvasTimeStart: _propTypes["default"].number.isRequired,
      canvasTimeEnd: _propTypes["default"].number.isRequired,
      canvasWidth: _propTypes["default"].number.isRequired,
      dragSnap: _propTypes["default"].number,
      minResizeWidth: _propTypes["default"].number,
      selectedItem: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),
      canChangeGroup: _propTypes["default"].bool.isRequired,
      canMove: _propTypes["default"].bool.isRequired,
      canResize: _propTypes["default"].oneOf([true, false, "left", "right", "both"]),
      canSelect: _propTypes["default"].bool,
      keys: _propTypes["default"].object.isRequired,
      moveResizeValidator: _propTypes["default"].func,
      itemSelect: _propTypes["default"].func,
      itemDrag: _propTypes["default"].func,
      itemDrop: _propTypes["default"].func,
      itemResizing: _propTypes["default"].func,
      itemResized: _propTypes["default"].func,
      onItemDoubleClick: _propTypes["default"].func,
      onItemContextMenu: _propTypes["default"].func,
      itemRenderer: _propTypes["default"].func,
      selected: _propTypes["default"].array,
      dimensionItems: _propTypes["default"].array,
      groupTops: _propTypes["default"].array,
      useResizeHandle: _propTypes["default"].bool,
      scrollRef: _propTypes["default"].object
    });
    _defineProperty(Items, "defaultProps", {
      selected: []
    });
  }
});

// node_modules/react-calendar-timeline/lib/lib/layout/Sidebar.js
var require_Sidebar = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/layout/Sidebar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireWildcard(require_react());
    var _generic = require_generic();
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var Sidebar = function(_Component) {
      _inherits(Sidebar2, _Component);
      function Sidebar2() {
        _classCallCheck(this, Sidebar2);
        return _possibleConstructorReturn(this, _getPrototypeOf(Sidebar2).apply(this, arguments));
      }
      _createClass(Sidebar2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps) {
          return !(nextProps.keys === this.props.keys && nextProps.width === this.props.width && nextProps.height === this.props.height && (0, _generic.arraysEqual)(nextProps.groups, this.props.groups) && (0, _generic.arraysEqual)(nextProps.groupHeights, this.props.groupHeights));
        }
      }, {
        key: "renderGroupContent",
        value: function renderGroupContent(group, isRightSidebar, groupTitleKey, groupRightTitleKey) {
          if (this.props.groupRenderer) {
            return _react["default"].createElement(this.props.groupRenderer, {
              group,
              isRightSidebar
            });
          } else {
            return (0, _generic._get)(group, isRightSidebar ? groupRightTitleKey : groupTitleKey);
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this = this;
          var _this$props = this.props, width = _this$props.width, groupHeights = _this$props.groupHeights, height = _this$props.height, isRightSidebar = _this$props.isRightSidebar;
          var _this$props$keys = this.props.keys, groupIdKey = _this$props$keys.groupIdKey, groupTitleKey = _this$props$keys.groupTitleKey, groupRightTitleKey = _this$props$keys.groupRightTitleKey;
          var sidebarStyle = {
            width: "".concat(width, "px"),
            height: "".concat(height, "px")
          };
          var groupsStyle = {
            width: "".concat(width, "px")
          };
          var groupLines = this.props.groups.map(function(group, index) {
            var elementStyle = {
              height: "".concat(groupHeights[index], "px"),
              lineHeight: "".concat(groupHeights[index], "px")
            };
            return _react["default"].createElement("div", {
              key: (0, _generic._get)(group, groupIdKey),
              className: "rct-sidebar-row rct-sidebar-row-" + (index % 2 === 0 ? "even" : "odd"),
              style: elementStyle
            }, _this.renderGroupContent(group, isRightSidebar, groupTitleKey, groupRightTitleKey));
          });
          return _react["default"].createElement("div", {
            className: "rct-sidebar" + (isRightSidebar ? " rct-sidebar-right" : ""),
            style: sidebarStyle
          }, _react["default"].createElement("div", {
            style: groupsStyle
          }, groupLines));
        }
      }]);
      return Sidebar2;
    }(_react.Component);
    exports["default"] = Sidebar;
    _defineProperty(Sidebar, "propTypes", {
      groups: _propTypes["default"].oneOfType([_propTypes["default"].array, _propTypes["default"].object]).isRequired,
      width: _propTypes["default"].number.isRequired,
      height: _propTypes["default"].number.isRequired,
      groupHeights: _propTypes["default"].array.isRequired,
      keys: _propTypes["default"].object.isRequired,
      groupRenderer: _propTypes["default"].func,
      isRightSidebar: _propTypes["default"].bool
    });
  }
});

// node_modules/gud/index.js
var require_gud = __commonJS({
  "node_modules/gud/index.js"(exports, module) {
    "use strict";
    var key = "__global_unique_id__";
    module.exports = function() {
      return global[key] = (global[key] || 0) + 1;
    };
  }
});

// node_modules/warning/warning.js
var require_warning = __commonJS({
  "node_modules/warning/warning.js"(exports, module) {
    "use strict";
    var __DEV__ = true;
    var warning = function() {
    };
    if (__DEV__) {
      printWarning = function printWarning2(format, args) {
        var len = arguments.length;
        args = new Array(len > 1 ? len - 1 : 0);
        for (var key = 1; key < len; key++) {
          args[key - 1] = arguments[key];
        }
        var argIndex = 0;
        var message = "Warning: " + format.replace(/%s/g, function() {
          return args[argIndex++];
        });
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
      warning = function(condition, format, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        if (format === void 0) {
          throw new Error(
            "`warning(condition, format, ...args)` requires a warning message argument"
          );
        }
        if (!condition) {
          printWarning.apply(null, [format].concat(args));
        }
      };
    }
    var printWarning;
    module.exports = warning;
  }
});

// node_modules/react-calendar-timeline/node_modules/create-react-context/lib/implementation.js
var require_implementation = __commonJS({
  "node_modules/react-calendar-timeline/node_modules/create-react-context/lib/implementation.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _gud = require_gud();
    var _gud2 = _interopRequireDefault(_gud);
    var _warning = require_warning();
    var _warning2 = _interopRequireDefault(_warning);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var MAX_SIGNED_31_BIT_INT = 1073741823;
    function objectIs(x, y) {
      if (x === y) {
        return x !== 0 || 1 / x === 1 / y;
      } else {
        return x !== x && y !== y;
      }
    }
    function createEventEmitter(value) {
      var handlers = [];
      return {
        on: function on(handler) {
          handlers.push(handler);
        },
        off: function off(handler) {
          handlers = handlers.filter(function(h) {
            return h !== handler;
          });
        },
        get: function get() {
          return value;
        },
        set: function set(newValue, changedBits) {
          value = newValue;
          handlers.forEach(function(handler) {
            return handler(value, changedBits);
          });
        }
      };
    }
    function onlyChild(children) {
      return Array.isArray(children) ? children[0] : children;
    }
    function createReactContext(defaultValue, calculateChangedBits) {
      var _Provider$childContex, _Consumer$contextType;
      var contextProp = "__create-react-context-" + (0, _gud2.default)() + "__";
      var Provider = function(_Component) {
        _inherits(Provider2, _Component);
        function Provider2() {
          var _temp, _this, _ret;
          _classCallCheck(this, Provider2);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);
        }
        Provider2.prototype.getChildContext = function getChildContext() {
          var _ref;
          return _ref = {}, _ref[contextProp] = this.emitter, _ref;
        };
        Provider2.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
          if (this.props.value !== nextProps.value) {
            var oldValue = this.props.value;
            var newValue = nextProps.value;
            var changedBits = void 0;
            if (objectIs(oldValue, newValue)) {
              changedBits = 0;
            } else {
              changedBits = typeof calculateChangedBits === "function" ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
              if (true) {
                (0, _warning2.default)((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, "calculateChangedBits: Expected the return value to be a 31-bit integer. Instead received: %s", changedBits);
              }
              changedBits |= 0;
              if (changedBits !== 0) {
                this.emitter.set(nextProps.value, changedBits);
              }
            }
          }
        };
        Provider2.prototype.render = function render() {
          return this.props.children;
        };
        return Provider2;
      }(_react.Component);
      Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);
      var Consumer = function(_Component2) {
        _inherits(Consumer2, _Component2);
        function Consumer2() {
          var _temp2, _this2, _ret2;
          _classCallCheck(this, Consumer2);
          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {
            value: _this2.getValue()
          }, _this2.onUpdate = function(newValue, changedBits) {
            var observedBits = _this2.observedBits | 0;
            if ((observedBits & changedBits) !== 0) {
              _this2.setState({ value: _this2.getValue() });
            }
          }, _temp2), _possibleConstructorReturn(_this2, _ret2);
        }
        Consumer2.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
          var observedBits = nextProps.observedBits;
          this.observedBits = observedBits === void 0 || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
        };
        Consumer2.prototype.componentDidMount = function componentDidMount() {
          if (this.context[contextProp]) {
            this.context[contextProp].on(this.onUpdate);
          }
          var observedBits = this.props.observedBits;
          this.observedBits = observedBits === void 0 || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
        };
        Consumer2.prototype.componentWillUnmount = function componentWillUnmount() {
          if (this.context[contextProp]) {
            this.context[contextProp].off(this.onUpdate);
          }
        };
        Consumer2.prototype.getValue = function getValue() {
          if (this.context[contextProp]) {
            return this.context[contextProp].get();
          } else {
            return defaultValue;
          }
        };
        Consumer2.prototype.render = function render() {
          return onlyChild(this.props.children)(this.state.value);
        };
        return Consumer2;
      }(_react.Component);
      Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);
      return {
        Provider,
        Consumer
      };
    }
    exports.default = createReactContext;
    module.exports = exports["default"];
  }
});

// node_modules/react-calendar-timeline/node_modules/create-react-context/lib/index.js
var require_lib = __commonJS({
  "node_modules/react-calendar-timeline/node_modules/create-react-context/lib/index.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _implementation = require_implementation();
    var _implementation2 = _interopRequireDefault(_implementation);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.default = _react2.default.createContext || _implementation2.default;
    module.exports = exports["default"];
  }
});

// node_modules/react-calendar-timeline/lib/lib/timeline/TimelineStateContext.js
var require_TimelineStateContext = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/timeline/TimelineStateContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TimelineStateConsumer = exports.TimelineStateProvider = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _createReactContext2 = _interopRequireDefault(require_lib());
    var _calendar = require_calendar();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var defaultContextState = {
      getTimelineState: function getTimelineState() {
        console.warn('"getTimelineState" default func is being used');
      },
      getLeftOffsetFromDate: function getLeftOffsetFromDate() {
        console.warn('"getLeftOffsetFromDate" default func is being used');
      },
      getDateFromLeftOffsetPosition: function getDateFromLeftOffsetPosition() {
        console.warn('"getDateFromLeftOffsetPosition" default func is being used');
      },
      showPeriod: function showPeriod() {
        console.warn('"showPeriod" default func is being used');
      }
      /* eslint-enable */
    };
    var _createReactContext = (0, _createReactContext2["default"])(defaultContextState);
    var Consumer = _createReactContext.Consumer;
    var Provider = _createReactContext.Provider;
    var TimelineStateProvider = function(_React$Component) {
      _inherits(TimelineStateProvider2, _React$Component);
      function TimelineStateProvider2(props) {
        var _this;
        _classCallCheck(this, TimelineStateProvider2);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(TimelineStateProvider2).call(this, props));
        _defineProperty(_assertThisInitialized(_this), "getTimelineState", function() {
          var _this$props = _this.props, visibleTimeStart = _this$props.visibleTimeStart, visibleTimeEnd = _this$props.visibleTimeEnd, canvasTimeStart = _this$props.canvasTimeStart, canvasTimeEnd = _this$props.canvasTimeEnd, canvasWidth = _this$props.canvasWidth, timelineUnit = _this$props.timelineUnit, timelineWidth = _this$props.timelineWidth;
          return {
            visibleTimeStart,
            visibleTimeEnd,
            canvasTimeStart,
            canvasTimeEnd,
            canvasWidth,
            timelineUnit,
            timelineWidth
            // REVIEW,
          };
        });
        _defineProperty(_assertThisInitialized(_this), "getLeftOffsetFromDate", function(date) {
          var _this$props2 = _this.props, canvasTimeStart = _this$props2.canvasTimeStart, canvasTimeEnd = _this$props2.canvasTimeEnd, canvasWidth = _this$props2.canvasWidth;
          return (0, _calendar.calculateXPositionForTime)(canvasTimeStart, canvasTimeEnd, canvasWidth, date);
        });
        _defineProperty(_assertThisInitialized(_this), "getDateFromLeftOffsetPosition", function(leftOffset) {
          var _this$props3 = _this.props, canvasTimeStart = _this$props3.canvasTimeStart, canvasTimeEnd = _this$props3.canvasTimeEnd, canvasWidth = _this$props3.canvasWidth;
          return (0, _calendar.calculateTimeForXPosition)(canvasTimeStart, canvasTimeEnd, canvasWidth, leftOffset);
        });
        _this.state = {
          timelineContext: {
            getTimelineState: _this.getTimelineState,
            getLeftOffsetFromDate: _this.getLeftOffsetFromDate,
            getDateFromLeftOffsetPosition: _this.getDateFromLeftOffsetPosition,
            showPeriod: _this.props.showPeriod
          }
        };
        return _this;
      }
      _createClass(TimelineStateProvider2, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement(Provider, {
            value: this.state.timelineContext
          }, this.props.children);
        }
      }]);
      return TimelineStateProvider2;
    }(_react["default"].Component);
    exports.TimelineStateProvider = TimelineStateProvider;
    _defineProperty(TimelineStateProvider, "propTypes", {
      children: _propTypes["default"].element.isRequired,
      visibleTimeStart: _propTypes["default"].number.isRequired,
      visibleTimeEnd: _propTypes["default"].number.isRequired,
      canvasTimeStart: _propTypes["default"].number.isRequired,
      canvasTimeEnd: _propTypes["default"].number.isRequired,
      canvasWidth: _propTypes["default"].number.isRequired,
      showPeriod: _propTypes["default"].func.isRequired,
      timelineUnit: _propTypes["default"].string.isRequired,
      timelineWidth: _propTypes["default"].number.isRequired
    });
    var TimelineStateConsumer = Consumer;
    exports.TimelineStateConsumer = TimelineStateConsumer;
  }
});

// node_modules/react-calendar-timeline/lib/lib/columns/Columns.js
var require_Columns = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/columns/Columns.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireWildcard(require_react());
    var _calendar = require_calendar();
    var _TimelineStateContext = require_TimelineStateContext();
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var passThroughPropTypes = {
      canvasTimeStart: _propTypes["default"].number.isRequired,
      canvasTimeEnd: _propTypes["default"].number.isRequired,
      canvasWidth: _propTypes["default"].number.isRequired,
      lineCount: _propTypes["default"].number.isRequired,
      minUnit: _propTypes["default"].string.isRequired,
      timeSteps: _propTypes["default"].object.isRequired,
      height: _propTypes["default"].number.isRequired,
      verticalLineClassNamesForTime: _propTypes["default"].func
    };
    var Columns = function(_Component) {
      _inherits(Columns2, _Component);
      function Columns2() {
        _classCallCheck(this, Columns2);
        return _possibleConstructorReturn(this, _getPrototypeOf(Columns2).apply(this, arguments));
      }
      _createClass(Columns2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps) {
          return !(nextProps.canvasTimeStart === this.props.canvasTimeStart && nextProps.canvasTimeEnd === this.props.canvasTimeEnd && nextProps.canvasWidth === this.props.canvasWidth && nextProps.lineCount === this.props.lineCount && nextProps.minUnit === this.props.minUnit && nextProps.timeSteps === this.props.timeSteps && nextProps.height === this.props.height && nextProps.verticalLineClassNamesForTime === this.props.verticalLineClassNamesForTime);
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props = this.props, canvasTimeStart = _this$props.canvasTimeStart, canvasTimeEnd = _this$props.canvasTimeEnd, canvasWidth = _this$props.canvasWidth, minUnit = _this$props.minUnit, timeSteps = _this$props.timeSteps, height = _this$props.height, verticalLineClassNamesForTime = _this$props.verticalLineClassNamesForTime, getLeftOffsetFromDate = _this$props.getLeftOffsetFromDate;
          var ratio = canvasWidth / (canvasTimeEnd - canvasTimeStart);
          var lines = [];
          (0, _calendar.iterateTimes)(canvasTimeStart, canvasTimeEnd, minUnit, timeSteps, function(time, nextTime) {
            var minUnitValue = time.get(minUnit === "day" ? "date" : minUnit);
            var firstOfType = minUnitValue === (minUnit === "day" ? 1 : 0);
            var classNamesForTime = [];
            if (verticalLineClassNamesForTime) {
              classNamesForTime = verticalLineClassNamesForTime(
                time.unix() * 1e3,
                // turn into ms, which is what verticalLineClassNamesForTime expects
                nextTime.unix() * 1e3 - 1
              );
            }
            var classNames = "rct-vl" + (firstOfType ? " rct-vl-first" : "") + (minUnit === "day" || minUnit === "hour" || minUnit === "minute" ? " rct-day-".concat(time.day(), " ") : "") + classNamesForTime.join(" ");
            var left = getLeftOffsetFromDate(time.valueOf());
            var right = getLeftOffsetFromDate(nextTime.valueOf());
            lines.push(_react["default"].createElement("div", {
              key: "line-".concat(time.valueOf()),
              className: classNames,
              style: {
                pointerEvents: "none",
                top: "0px",
                left: "".concat(left, "px"),
                width: "".concat(right - left, "px"),
                height: "".concat(height, "px")
              }
            }));
          });
          return _react["default"].createElement("div", {
            className: "rct-vertical-lines"
          }, lines);
        }
      }]);
      return Columns2;
    }(_react.Component);
    _defineProperty(Columns, "propTypes", _objectSpread({}, passThroughPropTypes, {
      getLeftOffsetFromDate: _propTypes["default"].func.isRequired
    }));
    var ColumnsWrapper = function ColumnsWrapper2(_ref) {
      var props = _extends({}, _ref);
      return _react["default"].createElement(_TimelineStateContext.TimelineStateConsumer, null, function(_ref2) {
        var getLeftOffsetFromDate = _ref2.getLeftOffsetFromDate;
        return _react["default"].createElement(Columns, _extends({
          getLeftOffsetFromDate
        }, props));
      });
    };
    ColumnsWrapper.defaultProps = _objectSpread({}, passThroughPropTypes);
    var _default = ColumnsWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/interaction/PreventClickOnDrag.js
var require_PreventClickOnDrag = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/interaction/PreventClickOnDrag.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var PreventClickOnDrag = function(_Component) {
      _inherits(PreventClickOnDrag2, _Component);
      function PreventClickOnDrag2() {
        var _getPrototypeOf2;
        var _this;
        _classCallCheck(this, PreventClickOnDrag2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PreventClickOnDrag2)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _defineProperty(_assertThisInitialized(_this), "handleMouseDown", function(evt) {
          _this.originClickX = evt.clientX;
        });
        _defineProperty(_assertThisInitialized(_this), "handleMouseUp", function(evt) {
          if (Math.abs(_this.originClickX - evt.clientX) > _this.props.clickTolerance) {
            _this.cancelClick = true;
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleClick", function(evt) {
          if (!_this.cancelClick) {
            _this.props.onClick(evt);
          }
          _this.cancelClick = false;
          _this.originClickX = null;
        });
        return _this;
      }
      _createClass(PreventClickOnDrag2, [{
        key: "render",
        value: function render() {
          var childElement = _react["default"].Children.only(this.props.children);
          return _react["default"].cloneElement(childElement, {
            onMouseDown: this.handleMouseDown,
            onMouseUp: this.handleMouseUp,
            onClick: this.handleClick
          });
        }
      }]);
      return PreventClickOnDrag2;
    }(_react.Component);
    _defineProperty(PreventClickOnDrag, "propTypes", {
      children: _propTypes["default"].element.isRequired,
      onClick: _propTypes["default"].func.isRequired,
      clickTolerance: _propTypes["default"].number.isRequired
    });
    var _default = PreventClickOnDrag;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/row/GroupRow.js
var require_GroupRow = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/row/GroupRow.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _PreventClickOnDrag = _interopRequireDefault(require_PreventClickOnDrag());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var GroupRow = function(_Component) {
      _inherits(GroupRow2, _Component);
      function GroupRow2() {
        _classCallCheck(this, GroupRow2);
        return _possibleConstructorReturn(this, _getPrototypeOf(GroupRow2).apply(this, arguments));
      }
      _createClass(GroupRow2, [{
        key: "render",
        value: function render() {
          var _this$props = this.props, onContextMenu = _this$props.onContextMenu, onDoubleClick = _this$props.onDoubleClick, isEvenRow = _this$props.isEvenRow, style = _this$props.style, onClick = _this$props.onClick, clickTolerance = _this$props.clickTolerance, horizontalLineClassNamesForGroup = _this$props.horizontalLineClassNamesForGroup, group = _this$props.group;
          var classNamesForGroup = [];
          if (horizontalLineClassNamesForGroup) {
            classNamesForGroup = horizontalLineClassNamesForGroup(group);
          }
          return _react["default"].createElement(_PreventClickOnDrag["default"], {
            clickTolerance,
            onClick
          }, _react["default"].createElement("div", {
            onContextMenu,
            onDoubleClick,
            className: (isEvenRow ? "rct-hl-even " : "rct-hl-odd ") + (classNamesForGroup ? classNamesForGroup.join(" ") : ""),
            style
          }));
        }
      }]);
      return GroupRow2;
    }(_react.Component);
    _defineProperty(GroupRow, "propTypes", {
      onClick: _propTypes["default"].func.isRequired,
      onDoubleClick: _propTypes["default"].func.isRequired,
      onContextMenu: _propTypes["default"].func.isRequired,
      isEvenRow: _propTypes["default"].bool.isRequired,
      style: _propTypes["default"].object.isRequired,
      clickTolerance: _propTypes["default"].number.isRequired,
      group: _propTypes["default"].object.isRequired,
      horizontalLineClassNamesForGroup: _propTypes["default"].func
    });
    var _default = GroupRow;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/row/GroupRows.js
var require_GroupRows = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/row/GroupRows.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireWildcard(require_react());
    var _GroupRow = _interopRequireDefault(require_GroupRow());
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var GroupRows = function(_Component) {
      _inherits(GroupRows2, _Component);
      function GroupRows2() {
        _classCallCheck(this, GroupRows2);
        return _possibleConstructorReturn(this, _getPrototypeOf(GroupRows2).apply(this, arguments));
      }
      _createClass(GroupRows2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps) {
          return !(nextProps.canvasWidth === this.props.canvasWidth && nextProps.lineCount === this.props.lineCount && nextProps.groupHeights === this.props.groupHeights && nextProps.groups === this.props.groups);
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props = this.props, canvasWidth = _this$props.canvasWidth, lineCount = _this$props.lineCount, groupHeights = _this$props.groupHeights, onRowClick = _this$props.onRowClick, onRowDoubleClick = _this$props.onRowDoubleClick, clickTolerance = _this$props.clickTolerance, groups = _this$props.groups, horizontalLineClassNamesForGroup = _this$props.horizontalLineClassNamesForGroup, onRowContextClick = _this$props.onRowContextClick;
          var lines = [];
          var _loop = function _loop2(i2) {
            lines.push(_react["default"].createElement(_GroupRow["default"], {
              clickTolerance,
              onContextMenu: function onContextMenu(evt) {
                return onRowContextClick(evt, i2);
              },
              onClick: function onClick(evt) {
                return onRowClick(evt, i2);
              },
              onDoubleClick: function onDoubleClick(evt) {
                return onRowDoubleClick(evt, i2);
              },
              key: "horizontal-line-".concat(i2),
              isEvenRow: i2 % 2 === 0,
              group: groups[i2],
              horizontalLineClassNamesForGroup,
              style: {
                width: "".concat(canvasWidth, "px"),
                height: "".concat(groupHeights[i2], "px")
              }
            }));
          };
          for (var i = 0; i < lineCount; i++) {
            _loop(i);
          }
          return _react["default"].createElement("div", {
            className: "rct-horizontal-lines"
          }, lines);
        }
      }]);
      return GroupRows2;
    }(_react.Component);
    exports["default"] = GroupRows;
    _defineProperty(GroupRows, "propTypes", {
      canvasWidth: _propTypes["default"].number.isRequired,
      lineCount: _propTypes["default"].number.isRequired,
      groupHeights: _propTypes["default"].array.isRequired,
      onRowClick: _propTypes["default"].func.isRequired,
      onRowDoubleClick: _propTypes["default"].func.isRequired,
      clickTolerance: _propTypes["default"].number.isRequired,
      groups: _propTypes["default"].array.isRequired,
      horizontalLineClassNamesForGroup: _propTypes["default"].func,
      onRowContextClick: _propTypes["default"].func.isRequired
    });
  }
});

// node_modules/react-calendar-timeline/lib/lib/scroll/ScrollElement.js
var require_ScrollElement = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/scroll/ScrollElement.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _domHelpers = require_dom_helpers();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var ScrollElement = function(_Component) {
      _inherits(ScrollElement2, _Component);
      function ScrollElement2() {
        var _this;
        _classCallCheck(this, ScrollElement2);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollElement2).call(this));
        _defineProperty(_assertThisInitialized(_this), "handleScroll", function() {
          var scrollX = _this.scrollComponent.scrollLeft;
          _this.props.onScroll(scrollX);
        });
        _defineProperty(_assertThisInitialized(_this), "refHandler", function(el) {
          _this.scrollComponent = el;
          _this.props.scrollRef(el);
          if (el) {
            el.addEventListener("wheel", _this.handleWheel, {
              passive: false
            });
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleWheel", function(e) {
          var traditionalZoom = _this.props.traditionalZoom;
          if (e.ctrlKey || e.metaKey || e.altKey) {
            e.preventDefault();
            var parentPosition = (0, _domHelpers.getParentPosition)(e.currentTarget);
            var xPosition = e.clientX - parentPosition.x;
            var speed = e.ctrlKey ? 10 : e.metaKey ? 3 : 1;
            _this.props.onWheelZoom(speed, xPosition, e.deltaY);
          } else if (e.shiftKey) {
            e.preventDefault();
            _this.props.onScroll(_this.scrollComponent.scrollLeft + (e.deltaY || e.deltaX));
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleMouseDown", function(e) {
          if (e.button === 0) {
            _this.dragStartPosition = e.pageX;
            _this.dragLastPosition = e.pageX;
            _this.setState({
              isDragging: true
            });
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleMouseMove", function(e) {
          if (_this.state.isDragging && !_this.props.isInteractingWithItem) {
            _this.props.onScroll(_this.scrollComponent.scrollLeft + _this.dragLastPosition - e.pageX);
            _this.dragLastPosition = e.pageX;
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleMouseUp", function() {
          _this.dragStartPosition = null;
          _this.dragLastPosition = null;
          _this.setState({
            isDragging: false
          });
        });
        _defineProperty(_assertThisInitialized(_this), "handleMouseLeave", function() {
          _this.dragStartPosition = null;
          _this.dragLastPosition = null;
          _this.setState({
            isDragging: false
          });
        });
        _defineProperty(_assertThisInitialized(_this), "handleTouchStart", function(e) {
          if (e.touches.length === 2) {
            e.preventDefault();
            _this.lastTouchDistance = Math.abs(e.touches[0].screenX - e.touches[1].screenX);
            _this.singleTouchStart = null;
            _this.lastSingleTouch = null;
          } else if (e.touches.length === 1) {
            e.preventDefault();
            var x = e.touches[0].clientX;
            var y = e.touches[0].clientY;
            _this.lastTouchDistance = null;
            _this.singleTouchStart = {
              x,
              y,
              screenY: window.pageYOffset
            };
            _this.lastSingleTouch = {
              x,
              y,
              screenY: window.pageYOffset
            };
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleTouchMove", function(e) {
          var _this$props = _this.props, isInteractingWithItem = _this$props.isInteractingWithItem, width = _this$props.width, onZoom = _this$props.onZoom;
          if (isInteractingWithItem) {
            e.preventDefault();
            return;
          }
          if (_this.lastTouchDistance && e.touches.length === 2) {
            e.preventDefault();
            var touchDistance = Math.abs(e.touches[0].screenX - e.touches[1].screenX);
            var parentPosition = (0, _domHelpers.getParentPosition)(e.currentTarget);
            var xPosition = (e.touches[0].screenX + e.touches[1].screenX) / 2 - parentPosition.x;
            if (touchDistance !== 0 && _this.lastTouchDistance !== 0) {
              onZoom(_this.lastTouchDistance / touchDistance, xPosition / width);
              _this.lastTouchDistance = touchDistance;
            }
          } else if (_this.lastSingleTouch && e.touches.length === 1) {
            e.preventDefault();
            var x = e.touches[0].clientX;
            var y = e.touches[0].clientY;
            var deltaX = x - _this.lastSingleTouch.x;
            var deltaX0 = x - _this.singleTouchStart.x;
            var deltaY0 = y - _this.singleTouchStart.y;
            _this.lastSingleTouch = {
              x,
              y
            };
            var moveX = Math.abs(deltaX0) * 3 > Math.abs(deltaY0);
            var moveY = Math.abs(deltaY0) * 3 > Math.abs(deltaX0);
            if (deltaX !== 0 && moveX) {
              _this.props.onScroll(_this.scrollComponent.scrollLeft - deltaX);
            }
            if (moveY) {
              window.scrollTo(window.pageXOffset, _this.singleTouchStart.screenY - deltaY0);
            }
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleTouchEnd", function() {
          if (_this.lastTouchDistance) {
            _this.lastTouchDistance = null;
          }
          if (_this.lastSingleTouch) {
            _this.lastSingleTouch = null;
            _this.singleTouchStart = null;
          }
        });
        _this.state = {
          isDragging: false
        };
        return _this;
      }
      _createClass(ScrollElement2, [{
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.scrollComponent) {
            this.scrollComponent.removeEventListener("wheel", this.handleWheel);
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props2 = this.props, width = _this$props2.width, height = _this$props2.height, children = _this$props2.children;
          var isDragging = this.state.isDragging;
          var scrollComponentStyle = {
            width: "".concat(width, "px"),
            height: "".concat(height + 20, "px"),
            //20px to push the scroll element down off screen...?
            cursor: isDragging ? "move" : "default",
            position: "relative"
          };
          return _react["default"].createElement("div", {
            ref: this.refHandler,
            className: "rct-scroll",
            style: scrollComponentStyle,
            onMouseDown: this.handleMouseDown,
            onMouseMove: this.handleMouseMove,
            onMouseUp: this.handleMouseUp,
            onMouseLeave: this.handleMouseLeave,
            onTouchStart: this.handleTouchStart,
            onTouchMove: this.handleTouchMove,
            onTouchEnd: this.handleTouchEnd,
            onScroll: this.handleScroll
          }, children);
        }
      }]);
      return ScrollElement2;
    }(_react.Component);
    _defineProperty(ScrollElement, "propTypes", {
      children: _propTypes["default"].element.isRequired,
      width: _propTypes["default"].number.isRequired,
      height: _propTypes["default"].number.isRequired,
      traditionalZoom: _propTypes["default"].bool.isRequired,
      scrollRef: _propTypes["default"].func.isRequired,
      isInteractingWithItem: _propTypes["default"].bool.isRequired,
      onZoom: _propTypes["default"].func.isRequired,
      onWheelZoom: _propTypes["default"].func.isRequired,
      onScroll: _propTypes["default"].func.isRequired
    });
    var _default = ScrollElement;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/MarkerCanvasContext.js
var require_MarkerCanvasContext = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/MarkerCanvasContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.MarkerCanvasConsumer = exports.MarkerCanvasProvider = void 0;
    var _createReactContext2 = _interopRequireDefault(require_lib());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var defaultContextState = {
      subscribeToMouseOver: function subscribeToMouseOver() {
        console.warn('"subscribeToMouseOver" default func is being used');
      }
      /* eslint-enable */
    };
    var _createReactContext = (0, _createReactContext2["default"])(defaultContextState);
    var Consumer = _createReactContext.Consumer;
    var Provider = _createReactContext.Provider;
    var MarkerCanvasProvider = Provider;
    exports.MarkerCanvasProvider = MarkerCanvasProvider;
    var MarkerCanvasConsumer = Consumer;
    exports.MarkerCanvasConsumer = MarkerCanvasConsumer;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/TimelineMarkersContext.js
var require_TimelineMarkersContext = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/TimelineMarkersContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TimelineMarkersConsumer = exports.TimelineMarkersProvider = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _createReactContext2 = _interopRequireDefault(require_lib());
    var _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    }
    function _iterableToArray(iter) {
      if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
        return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) {
        for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
          arr2[i] = arr[i];
        }
        return arr2;
      }
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var defaultContextState = {
      markers: [],
      subscribeMarker: function subscribeMarker() {
        console.warn("default subscribe marker used");
        return _generic.noop;
      }
    };
    var _createReactContext = (0, _createReactContext2["default"])(defaultContextState);
    var Consumer = _createReactContext.Consumer;
    var Provider = _createReactContext.Provider;
    var _id = 0;
    var createId = function createId2() {
      _id += 1;
      return _id + 1;
    };
    var TimelineMarkersProvider = function(_React$Component) {
      _inherits(TimelineMarkersProvider2, _React$Component);
      function TimelineMarkersProvider2() {
        var _getPrototypeOf2;
        var _this;
        _classCallCheck(this, TimelineMarkersProvider2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TimelineMarkersProvider2)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _defineProperty(_assertThisInitialized(_this), "handleSubscribeToMarker", function(newMarker) {
          newMarker = _objectSpread({}, newMarker, {
            // REVIEW: in the event that we accept id to be passed to the Marker components, this line would override those
            id: createId()
          });
          _this.setState(function(state) {
            return {
              markers: [].concat(_toConsumableArray(state.markers), [newMarker])
            };
          });
          return {
            unsubscribe: function unsubscribe() {
              _this.setState(function(state) {
                return {
                  markers: state.markers.filter(function(marker) {
                    return marker.id !== newMarker.id;
                  })
                };
              });
            },
            getMarker: function getMarker() {
              return newMarker;
            }
          };
        });
        _defineProperty(_assertThisInitialized(_this), "handleUpdateMarker", function(updateMarker) {
          var markerIndex = _this.state.markers.findIndex(function(marker) {
            return marker.id === updateMarker.id;
          });
          if (markerIndex < 0)
            return;
          _this.setState(function(state) {
            return {
              markers: [].concat(_toConsumableArray(state.markers.slice(0, markerIndex)), [updateMarker], _toConsumableArray(state.markers.slice(markerIndex + 1)))
            };
          });
        });
        _defineProperty(_assertThisInitialized(_this), "state", {
          markers: [],
          subscribeMarker: _this.handleSubscribeToMarker,
          updateMarker: _this.handleUpdateMarker
        });
        return _this;
      }
      _createClass(TimelineMarkersProvider2, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement(Provider, {
            value: this.state
          }, this.props.children);
        }
      }]);
      return TimelineMarkersProvider2;
    }(_react["default"].Component);
    exports.TimelineMarkersProvider = TimelineMarkersProvider;
    _defineProperty(TimelineMarkersProvider, "propTypes", {
      children: _propTypes["default"].element.isRequired
    });
    var TimelineMarkersConsumer = Consumer;
    exports.TimelineMarkersConsumer = TimelineMarkersConsumer;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/markerType.js
var require_markerType = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/markerType.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TimelineMarkerType = void 0;
    var TimelineMarkerType = {
      Today: "Today",
      Custom: "Custom",
      Cursor: "Cursor"
    };
    exports.TimelineMarkerType = TimelineMarkerType;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/implementations/shared.js
var require_shared = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/implementations/shared.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.createDefaultRenderer = exports.createMarkerStylesWithLeftOffset = void 0;
    var _react = _interopRequireDefault(require_react());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var criticalStyles = {
      position: "absolute",
      top: 0,
      bottom: 0,
      width: "2px",
      backgroundColor: "black",
      // by default, pointer events (specifically click) will
      // "pass through".  This is added so that CursorMarker
      // will not get in the way of canvas click
      pointerEvents: "none"
      // FIXME: this creates a new object each time in render
      // might want to memoize this?
    };
    var createMarkerStylesWithLeftOffset = function createMarkerStylesWithLeftOffset2(leftOffset) {
      return _objectSpread({}, criticalStyles, {
        left: leftOffset
      });
    };
    exports.createMarkerStylesWithLeftOffset = createMarkerStylesWithLeftOffset;
    var createDefaultRenderer = function createDefaultRenderer2(dataTestidValue) {
      return function DefaultMarkerRenderer(_ref) {
        var styles = _ref.styles;
        return _react["default"].createElement("div", {
          style: styles
        });
      };
    };
    exports.createDefaultRenderer = createDefaultRenderer;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/implementations/TodayMarker.js
var require_TodayMarker = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/implementations/TodayMarker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _shared = require_shared();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var defaultRenderer = (0, _shared.createDefaultRenderer)("default-today-line");
    var TodayMarker = function(_React$Component) {
      _inherits(TodayMarker2, _React$Component);
      function TodayMarker2() {
        var _getPrototypeOf2;
        var _this;
        _classCallCheck(this, TodayMarker2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodayMarker2)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _defineProperty(_assertThisInitialized(_this), "state", {
          date: Date.now()
        });
        return _this;
      }
      _createClass(TodayMarker2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.intervalToken = this.createIntervalUpdater(this.props.interval);
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          if (prevProps.interval !== this.props.interval) {
            clearInterval(this.intervalToken);
            this.intervalToken = this.createIntervalUpdater(this.props.interval);
          }
        }
      }, {
        key: "createIntervalUpdater",
        value: function createIntervalUpdater(interval) {
          var _this2 = this;
          return setInterval(function() {
            _this2.setState({
              date: Date.now()
              // FIXME: use date utils pass in as props
            });
          }, interval);
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          clearInterval(this.intervalToken);
        }
      }, {
        key: "render",
        value: function render() {
          var date = this.state.date;
          var leftOffset = this.props.getLeftOffsetFromDate(date);
          var styles = (0, _shared.createMarkerStylesWithLeftOffset)(leftOffset);
          return this.props.renderer({
            styles,
            date
          });
        }
      }]);
      return TodayMarker2;
    }(_react["default"].Component);
    _defineProperty(TodayMarker, "propTypes", {
      getLeftOffsetFromDate: _propTypes["default"].func.isRequired,
      renderer: _propTypes["default"].func,
      interval: _propTypes["default"].number.isRequired
    });
    _defineProperty(TodayMarker, "defaultProps", {
      renderer: defaultRenderer
    });
    var _default = TodayMarker;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/implementations/CustomMarker.js
var require_CustomMarker = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/implementations/CustomMarker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _shared = require_shared();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var defaultCustomMarkerRenderer = (0, _shared.createDefaultRenderer)("default-customer-marker-id");
    var CustomMarker = function(_React$Component) {
      _inherits(CustomMarker2, _React$Component);
      function CustomMarker2() {
        _classCallCheck(this, CustomMarker2);
        return _possibleConstructorReturn(this, _getPrototypeOf(CustomMarker2).apply(this, arguments));
      }
      _createClass(CustomMarker2, [{
        key: "render",
        value: function render() {
          var date = this.props.date;
          var leftOffset = this.props.getLeftOffsetFromDate(date);
          var styles = (0, _shared.createMarkerStylesWithLeftOffset)(leftOffset);
          return this.props.renderer({
            styles,
            date
          });
        }
      }]);
      return CustomMarker2;
    }(_react["default"].Component);
    _defineProperty(CustomMarker, "propTypes", {
      getLeftOffsetFromDate: _propTypes["default"].func.isRequired,
      renderer: _propTypes["default"].func,
      date: _propTypes["default"].number.isRequired
    });
    _defineProperty(CustomMarker, "defaultProps", {
      renderer: defaultCustomMarkerRenderer
    });
    var _default = CustomMarker;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/implementations/CursorMarker.js
var require_CursorMarker = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/implementations/CursorMarker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _shared = require_shared();
    var _MarkerCanvasContext = require_MarkerCanvasContext();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var defaultRenderer = (0, _shared.createDefaultRenderer)("default-cursor-marker");
    var CursorMarker = function(_React$Component) {
      _inherits(CursorMarker2, _React$Component);
      function CursorMarker2() {
        var _this;
        _classCallCheck(this, CursorMarker2);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(CursorMarker2).call(this));
        _defineProperty(_assertThisInitialized(_this), "handleCanvasMouseOver", function(_ref) {
          var leftOffset = _ref.leftOffset, date = _ref.date, isCursorOverCanvas = _ref.isCursorOverCanvas;
          _this.setState({
            leftOffset,
            date,
            isShowingCursor: isCursorOverCanvas
          });
        });
        _this.state = {
          leftOffset: 0,
          date: 0,
          isShowingCursor: false
        };
        return _this;
      }
      _createClass(CursorMarker2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.unsubscribe = this.props.subscribeToCanvasMouseOver(this.handleCanvasMouseOver);
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.unsubscribe != null) {
            this.unsubscribe();
            this.unsubscribe = null;
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this$state = this.state, isShowingCursor = _this$state.isShowingCursor, leftOffset = _this$state.leftOffset, date = _this$state.date;
          if (!isShowingCursor)
            return null;
          var styles = (0, _shared.createMarkerStylesWithLeftOffset)(leftOffset);
          return this.props.renderer({
            styles,
            date
          });
        }
      }]);
      return CursorMarker2;
    }(_react["default"].Component);
    _defineProperty(CursorMarker, "propTypes", {
      subscribeToCanvasMouseOver: _propTypes["default"].func.isRequired,
      renderer: _propTypes["default"].func
    });
    _defineProperty(CursorMarker, "defaultProps", {
      renderer: defaultRenderer
    });
    var CursorMarkerWrapper = function CursorMarkerWrapper2(props) {
      return _react["default"].createElement(_MarkerCanvasContext.MarkerCanvasConsumer, null, function(_ref2) {
        var subscribeToMouseOver = _ref2.subscribeToMouseOver;
        return _react["default"].createElement(CursorMarker, _extends({
          subscribeToCanvasMouseOver: subscribeToMouseOver
        }, props));
      });
    };
    CursorMarkerWrapper.displayName = "CursorMarkerWrapper";
    var _default = CursorMarkerWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/TimelineMarkersRenderer.js
var require_TimelineMarkersRenderer = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/TimelineMarkersRenderer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _TimelineMarkersContext = require_TimelineMarkersContext();
    var _markerType = require_markerType();
    var _TodayMarker = _interopRequireDefault(require_TodayMarker());
    var _CustomMarker = _interopRequireDefault(require_CustomMarker());
    var _TimelineStateContext = require_TimelineStateContext();
    var _CursorMarker = _interopRequireDefault(require_CursorMarker());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var TimelineMarkersRenderer = function TimelineMarkersRenderer2() {
      return _react["default"].createElement(_TimelineStateContext.TimelineStateConsumer, null, function(_ref) {
        var getLeftOffsetFromDate = _ref.getLeftOffsetFromDate;
        return _react["default"].createElement(_TimelineMarkersContext.TimelineMarkersConsumer, null, function(_ref2) {
          var markers = _ref2.markers;
          return markers.map(function(marker) {
            switch (marker.type) {
              case _markerType.TimelineMarkerType.Today:
                return _react["default"].createElement(_TodayMarker["default"], {
                  key: marker.id,
                  getLeftOffsetFromDate,
                  renderer: marker.renderer,
                  interval: marker.interval
                });
              case _markerType.TimelineMarkerType.Custom:
                return _react["default"].createElement(_CustomMarker["default"], {
                  key: marker.id,
                  renderer: marker.renderer,
                  date: marker.date,
                  getLeftOffsetFromDate
                });
              case _markerType.TimelineMarkerType.Cursor:
                return _react["default"].createElement(_CursorMarker["default"], {
                  key: marker.id,
                  renderer: marker.renderer,
                  getLeftOffsetFromDate
                });
              default:
                return null;
            }
          });
        });
      });
    };
    var _default = TimelineMarkersRenderer;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/MarkerCanvas.js
var require_MarkerCanvas = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/MarkerCanvas.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _MarkerCanvasContext = require_MarkerCanvasContext();
    var _TimelineMarkersRenderer = _interopRequireDefault(require_TimelineMarkersRenderer());
    var _TimelineStateContext = require_TimelineStateContext();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var staticStyles = {
      position: "absolute",
      left: 0,
      right: 0,
      top: 0,
      bottom: 0
      /**
       * Renders registered markers and exposes a mouse over listener for
       * CursorMarkers to subscribe to
       */
    };
    var MarkerCanvas = function(_React$Component) {
      _inherits(MarkerCanvas2, _React$Component);
      function MarkerCanvas2() {
        var _getPrototypeOf2;
        var _this;
        _classCallCheck(this, MarkerCanvas2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MarkerCanvas2)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _defineProperty(_assertThisInitialized(_this), "handleMouseMove", function(evt) {
          if (_this.subscription != null) {
            var pageX = evt.pageX;
            var _this$containerEl$get = _this.containerEl.getBoundingClientRect(), containerLeft = _this$containerEl$get.left;
            var canvasX = pageX - containerLeft;
            var date = _this.props.getDateFromLeftOffsetPosition(canvasX);
            _this.subscription({
              leftOffset: canvasX,
              date,
              isCursorOverCanvas: true
            });
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleMouseLeave", function() {
          if (_this.subscription != null) {
            _this.subscription({
              leftOffset: 0,
              date: 0,
              isCursorOverCanvas: false
            });
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleMouseMoveSubscribe", function(sub) {
          _this.subscription = sub;
          return function() {
            _this.subscription = null;
          };
        });
        _defineProperty(_assertThisInitialized(_this), "state", {
          subscribeToMouseOver: _this.handleMouseMoveSubscribe
        });
        return _this;
      }
      _createClass(MarkerCanvas2, [{
        key: "render",
        value: function render() {
          var _this2 = this;
          return _react["default"].createElement(_MarkerCanvasContext.MarkerCanvasProvider, {
            value: this.state
          }, _react["default"].createElement("div", {
            style: staticStyles,
            onMouseMove: this.handleMouseMove,
            onMouseLeave: this.handleMouseLeave,
            ref: function ref(el) {
              return _this2.containerEl = el;
            }
          }, _react["default"].createElement(_TimelineMarkersRenderer["default"], null), this.props.children));
        }
      }]);
      return MarkerCanvas2;
    }(_react["default"].Component);
    _defineProperty(MarkerCanvas, "propTypes", {
      getDateFromLeftOffsetPosition: _propTypes["default"].func.isRequired,
      children: _propTypes["default"].node
    });
    var MarkerCanvasWrapper = function MarkerCanvasWrapper2(props) {
      return _react["default"].createElement(_TimelineStateContext.TimelineStateConsumer, null, function(_ref) {
        var getDateFromLeftOffsetPosition = _ref.getDateFromLeftOffsetPosition;
        return _react["default"].createElement(MarkerCanvas, _extends({
          getDateFromLeftOffsetPosition
        }, props));
      });
    };
    var _default = MarkerCanvasWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/resize-detector/window.js
var require_window = __commonJS({
  "node_modules/react-calendar-timeline/lib/resize-detector/window.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    function addListener(component) {
      component._resizeEventListener = {
        handleEvent: function handleEvent() {
          component.resize();
        }
      };
      window.addEventListener("resize", component._resizeEventListener);
    }
    function removeListener(component) {
      window.removeEventListener("resize", component._resizeEventListener);
    }
    var _default = {
      addListener,
      removeListener
    };
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/default-config.js
var require_default_config = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/default-config.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.defaultSubHeaderLabelFormats = exports.defaultHeaderLabelFormats = exports.defaultHeaderFormats = exports.defaultTimeSteps = exports.defaultKeys = void 0;
    var defaultKeys = {
      groupIdKey: "id",
      groupTitleKey: "title",
      groupRightTitleKey: "rightTitle",
      groupLabelKey: "title",
      itemIdKey: "id",
      itemTitleKey: "title",
      itemDivTitleKey: "title",
      itemGroupKey: "group",
      itemTimeStartKey: "start_time",
      itemTimeEndKey: "end_time"
    };
    exports.defaultKeys = defaultKeys;
    var defaultTimeSteps = {
      second: 1,
      minute: 1,
      hour: 1,
      day: 1,
      month: 1,
      year: 1
    };
    exports.defaultTimeSteps = defaultTimeSteps;
    var defaultHeaderFormats = {
      year: {
        "long": "YYYY",
        mediumLong: "YYYY",
        medium: "YYYY",
        "short": "YY"
      },
      month: {
        "long": "MMMM YYYY",
        mediumLong: "MMMM",
        medium: "MMMM",
        "short": "MM/YY"
      },
      week: {
        "long": "w",
        mediumLong: "w",
        medium: "w",
        "short": "w"
      },
      day: {
        "long": "dddd, LL",
        mediumLong: "dddd, LL",
        medium: "dd D",
        "short": "D"
      },
      hour: {
        "long": "dddd, LL, HH:00",
        mediumLong: "L, HH:00",
        medium: "HH:00",
        "short": "HH"
      },
      minute: {
        "long": "HH:mm",
        mediumLong: "HH:mm",
        medium: "HH:mm",
        "short": "mm"
      }
      //TODO: delete this
    };
    exports.defaultHeaderFormats = defaultHeaderFormats;
    var defaultHeaderLabelFormats = {
      yearShort: "YY",
      yearLong: "YYYY",
      monthShort: "MM/YY",
      monthMedium: "MM/YYYY",
      monthMediumLong: "MMM YYYY",
      monthLong: "MMMM YYYY",
      dayShort: "L",
      dayLong: "dddd, LL",
      hourShort: "HH",
      hourMedium: "HH:00",
      hourMediumLong: "L, HH:00",
      hourLong: "dddd, LL, HH:00",
      time: "LLL"
      //TODO: delete this
    };
    exports.defaultHeaderLabelFormats = defaultHeaderLabelFormats;
    var defaultSubHeaderLabelFormats = {
      yearShort: "YY",
      yearLong: "YYYY",
      monthShort: "MM",
      monthMedium: "MMM",
      monthLong: "MMMM",
      dayShort: "D",
      dayMedium: "dd D",
      dayMediumLong: "ddd, Do",
      dayLong: "dddd, Do",
      hourShort: "HH",
      hourLong: "HH:00",
      minuteShort: "mm",
      minuteLong: "HH:mm"
    };
    exports.defaultSubHeaderLabelFormats = defaultSubHeaderLabelFormats;
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/HeadersContext.js
var require_HeadersContext = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/HeadersContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TimelineHeadersConsumer = exports.TimelineHeadersProvider = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _createReactContext2 = _interopRequireDefault(require_lib());
    var _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var defaultContextState = {
      registerScroll: function registerScroll() {
        console.warn("default registerScroll header used");
        return _generic.noop;
      },
      rightSidebarWidth: 0,
      leftSidebarWidth: 150,
      timeSteps: {}
    };
    var _createReactContext = (0, _createReactContext2["default"])(defaultContextState);
    var Consumer = _createReactContext.Consumer;
    var Provider = _createReactContext.Provider;
    var TimelineHeadersProvider = function(_React$Component) {
      _inherits(TimelineHeadersProvider2, _React$Component);
      function TimelineHeadersProvider2() {
        _classCallCheck(this, TimelineHeadersProvider2);
        return _possibleConstructorReturn(this, _getPrototypeOf(TimelineHeadersProvider2).apply(this, arguments));
      }
      _createClass(TimelineHeadersProvider2, [{
        key: "render",
        value: function render() {
          var contextValue = {
            rightSidebarWidth: this.props.rightSidebarWidth,
            leftSidebarWidth: this.props.leftSidebarWidth,
            timeSteps: this.props.timeSteps,
            registerScroll: this.props.registerScroll
          };
          return _react["default"].createElement(Provider, {
            value: contextValue
          }, this.props.children);
        }
      }]);
      return TimelineHeadersProvider2;
    }(_react["default"].Component);
    exports.TimelineHeadersProvider = TimelineHeadersProvider;
    _defineProperty(TimelineHeadersProvider, "propTypes", {
      children: _propTypes["default"].element.isRequired,
      rightSidebarWidth: _propTypes["default"].number,
      leftSidebarWidth: _propTypes["default"].number.isRequired,
      //TODO: maybe this should be skipped?
      timeSteps: _propTypes["default"].object.isRequired,
      registerScroll: _propTypes["default"].func.isRequired
    });
    var TimelineHeadersConsumer = Consumer;
    exports.TimelineHeadersConsumer = TimelineHeadersConsumer;
  }
});

// node_modules/classnames/index.js
var require_classnames = __commonJS({
  "node_modules/classnames/index.js"(exports, module) {
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty;
      function classNames() {
        var classes = "";
        for (var i = 0; i < arguments.length; i++) {
          var arg = arguments[i];
          if (arg) {
            classes = appendClass(classes, parseValue(arg));
          }
        }
        return classes;
      }
      function parseValue(arg) {
        if (typeof arg === "string" || typeof arg === "number") {
          return arg;
        }
        if (typeof arg !== "object") {
          return "";
        }
        if (Array.isArray(arg)) {
          return classNames.apply(null, arg);
        }
        if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
          return arg.toString();
        }
        var classes = "";
        for (var key in arg) {
          if (hasOwn.call(arg, key) && arg[key]) {
            classes = appendClass(classes, key);
          }
        }
        return classes;
      }
      function appendClass(value, newClass) {
        if (!newClass) {
          return value;
        }
        if (value) {
          return value + " " + newClass;
        }
        return value + newClass;
      }
      if (typeof module !== "undefined" && module.exports) {
        classNames.default = classNames;
        module.exports = classNames;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames;
        });
      } else {
        window.classNames = classNames;
      }
    })();
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/constants.js
var require_constants = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.RIGHT_VARIANT = exports.LEFT_VARIANT = void 0;
    var LEFT_VARIANT = "left";
    exports.LEFT_VARIANT = LEFT_VARIANT;
    var RIGHT_VARIANT = "right";
    exports.RIGHT_VARIANT = RIGHT_VARIANT;
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/SidebarHeader.js
var require_SidebarHeader = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/SidebarHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _HeadersContext = require_HeadersContext();
    var _constants = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var SidebarHeader = function(_React$PureComponent) {
      _inherits(SidebarHeader2, _React$PureComponent);
      function SidebarHeader2() {
        var _getPrototypeOf2;
        var _this;
        _classCallCheck(this, SidebarHeader2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SidebarHeader2)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _defineProperty(_assertThisInitialized(_this), "getRootProps", function() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          var style = props.style;
          var width = _this.props.variant === _constants.RIGHT_VARIANT ? _this.props.rightSidebarWidth : _this.props.leftSidebarWidth;
          return {
            style: _objectSpread({}, style, {
              width
            })
          };
        });
        _defineProperty(_assertThisInitialized(_this), "getStateAndHelpers", function() {
          return {
            getRootProps: _this.getRootProps,
            data: _this.props.headerData
          };
        });
        return _this;
      }
      _createClass(SidebarHeader2, [{
        key: "render",
        value: function render() {
          var props = this.getStateAndHelpers();
          var Renderer = this.props.children;
          return _react["default"].createElement(Renderer, props);
        }
      }]);
      return SidebarHeader2;
    }(_react["default"].PureComponent);
    _defineProperty(SidebarHeader, "propTypes", {
      children: _propTypes["default"].func.isRequired,
      rightSidebarWidth: _propTypes["default"].number,
      leftSidebarWidth: _propTypes["default"].number.isRequired,
      variant: _propTypes["default"].string,
      headerData: _propTypes["default"].object
    });
    var SidebarWrapper = function SidebarWrapper2(_ref) {
      var children = _ref.children, variant = _ref.variant, headerData = _ref.headerData;
      return _react["default"].createElement(_HeadersContext.TimelineHeadersConsumer, null, function(_ref2) {
        var leftSidebarWidth = _ref2.leftSidebarWidth, rightSidebarWidth = _ref2.rightSidebarWidth;
        return _react["default"].createElement(SidebarHeader, {
          leftSidebarWidth,
          rightSidebarWidth,
          children,
          variant,
          headerData
        });
      });
    };
    SidebarWrapper.propTypes = {
      children: _propTypes["default"].func.isRequired,
      variant: _propTypes["default"].string,
      headerData: _propTypes["default"].object
    };
    SidebarWrapper.defaultProps = {
      variant: _constants.LEFT_VARIANT,
      children: function children(_ref3) {
        var getRootProps = _ref3.getRootProps;
        return _react["default"].createElement("div", getRootProps());
      }
    };
    SidebarWrapper.secretKey = "SidebarHeader";
    var _default = SidebarWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/TimelineHeaders.js
var require_TimelineHeaders = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/TimelineHeaders.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _classnames = _interopRequireDefault(require_classnames());
    var _HeadersContext = require_HeadersContext();
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _SidebarHeader = _interopRequireDefault(require_SidebarHeader());
    var _constants = require_constants();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var TimelineHeaders = function(_React$Component) {
      _inherits(TimelineHeaders2, _React$Component);
      function TimelineHeaders2(props) {
        var _this;
        _classCallCheck(this, TimelineHeaders2);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(TimelineHeaders2).call(this, props));
        _defineProperty(_assertThisInitialized(_this), "getRootStyle", function() {
          return _objectSpread({}, _this.props.style, {
            display: "flex",
            width: "100%"
          });
        });
        _defineProperty(_assertThisInitialized(_this), "getCalendarHeaderStyle", function() {
          var _this$props = _this.props, leftSidebarWidth = _this$props.leftSidebarWidth, rightSidebarWidth = _this$props.rightSidebarWidth, calendarHeaderStyle = _this$props.calendarHeaderStyle;
          return _objectSpread({}, calendarHeaderStyle, {
            overflow: "hidden",
            width: "calc(100% - ".concat(leftSidebarWidth + rightSidebarWidth, "px)")
          });
        });
        _defineProperty(_assertThisInitialized(_this), "handleRootRef", function(element) {
          if (_this.props.headerRef) {
            _this.props.headerRef(element);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "isSidebarHeader", function(child) {
          if (child.type === void 0)
            return false;
          return child.type.secretKey === _SidebarHeader["default"].secretKey;
        });
        return _this;
      }
      _createClass(TimelineHeaders2, [{
        key: "render",
        value: function render() {
          var _this2 = this;
          var rightSidebarHeader;
          var leftSidebarHeader;
          var calendarHeaders = [];
          var children = Array.isArray(this.props.children) ? this.props.children.filter(function(c) {
            return c;
          }) : [this.props.children];
          _react["default"].Children.map(children, function(child) {
            if (_this2.isSidebarHeader(child)) {
              if (child.props.variant === _constants.RIGHT_VARIANT) {
                rightSidebarHeader = child;
              } else {
                leftSidebarHeader = child;
              }
            } else {
              calendarHeaders.push(child);
            }
          });
          if (!leftSidebarHeader) {
            leftSidebarHeader = _react["default"].createElement(_SidebarHeader["default"], null);
          }
          if (!rightSidebarHeader && this.props.rightSidebarWidth) {
            rightSidebarHeader = _react["default"].createElement(_SidebarHeader["default"], {
              variant: "right"
            });
          }
          return _react["default"].createElement("div", {
            ref: this.handleRootRef,
            style: this.getRootStyle(),
            className: (0, _classnames["default"])("rct-header-root", this.props.className)
          }, leftSidebarHeader, _react["default"].createElement("div", {
            ref: this.props.registerScroll,
            style: this.getCalendarHeaderStyle(),
            className: (0, _classnames["default"])("rct-calendar-header", this.props.calendarHeaderClassName)
          }, calendarHeaders), rightSidebarHeader);
        }
      }]);
      return TimelineHeaders2;
    }(_react["default"].Component);
    _defineProperty(TimelineHeaders, "propTypes", {
      registerScroll: _propTypes["default"].func.isRequired,
      leftSidebarWidth: _propTypes["default"].number.isRequired,
      rightSidebarWidth: _propTypes["default"].number.isRequired,
      style: _propTypes["default"].object,
      children: _propTypes["default"].node,
      className: _propTypes["default"].string,
      calendarHeaderStyle: _propTypes["default"].object,
      calendarHeaderClassName: _propTypes["default"].string,
      headerRef: _propTypes["default"].func
    });
    var TimelineHeadersWrapper = function TimelineHeadersWrapper2(_ref) {
      var children = _ref.children, style = _ref.style, className = _ref.className, calendarHeaderStyle = _ref.calendarHeaderStyle, calendarHeaderClassName = _ref.calendarHeaderClassName;
      return _react["default"].createElement(_HeadersContext.TimelineHeadersConsumer, null, function(_ref2) {
        var leftSidebarWidth = _ref2.leftSidebarWidth, rightSidebarWidth = _ref2.rightSidebarWidth, registerScroll = _ref2.registerScroll;
        return _react["default"].createElement(TimelineHeaders, {
          leftSidebarWidth,
          rightSidebarWidth,
          registerScroll,
          style,
          className,
          calendarHeaderStyle,
          calendarHeaderClassName
        }, children);
      });
    };
    TimelineHeadersWrapper.propTypes = {
      style: _propTypes["default"].object,
      children: _propTypes["default"].node,
      className: _propTypes["default"].string,
      calendarHeaderStyle: _propTypes["default"].object,
      calendarHeaderClassName: _propTypes["default"].string
    };
    TimelineHeadersWrapper.secretKey = "TimelineHeaders";
    var _default = TimelineHeadersWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/CustomHeader.js
var require_CustomHeader = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/CustomHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = exports.CustomHeader = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _HeadersContext = require_HeadersContext();
    var _TimelineStateContext = require_TimelineStateContext();
    var _calendar = require_calendar();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var CustomHeader = function(_React$Component) {
      _inherits(CustomHeader2, _React$Component);
      function CustomHeader2(_props) {
        var _this;
        _classCallCheck(this, CustomHeader2);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomHeader2).call(this, _props));
        _defineProperty(_assertThisInitialized(_this), "getHeaderIntervals", function(_ref) {
          var canvasTimeStart = _ref.canvasTimeStart, canvasTimeEnd = _ref.canvasTimeEnd, unit = _ref.unit, timeSteps = _ref.timeSteps, getLeftOffsetFromDate = _ref.getLeftOffsetFromDate;
          var intervals = [];
          (0, _calendar.iterateTimes)(canvasTimeStart, canvasTimeEnd, unit, timeSteps, function(startTime, endTime) {
            var left = getLeftOffsetFromDate(startTime.valueOf());
            var right = getLeftOffsetFromDate(endTime.valueOf());
            var width = right - left;
            intervals.push({
              startTime,
              endTime,
              labelWidth: width,
              left
            });
          });
          return intervals;
        });
        _defineProperty(_assertThisInitialized(_this), "getRootProps", function() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          var style = props.style;
          return {
            style: Object.assign({}, style ? style : {}, {
              position: "relative",
              width: _this.props.canvasWidth,
              height: _this.props.height
            })
          };
        });
        _defineProperty(_assertThisInitialized(_this), "getIntervalProps", function() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          var interval = props.interval, style = props.style;
          if (!interval)
            throw new Error("you should provide interval to the prop getter");
          var startTime = interval.startTime, labelWidth = interval.labelWidth, left = interval.left;
          return {
            style: _this.getIntervalStyle({
              style,
              startTime,
              labelWidth,
              canvasTimeStart: _this.props.canvasTimeStart,
              unit: _this.props.unit,
              left
            }),
            key: "label-".concat(startTime.valueOf())
          };
        });
        _defineProperty(_assertThisInitialized(_this), "getIntervalStyle", function(_ref2) {
          var left = _ref2.left, labelWidth = _ref2.labelWidth, style = _ref2.style;
          return _objectSpread({}, style, {
            left,
            width: labelWidth,
            position: "absolute"
          });
        });
        _defineProperty(_assertThisInitialized(_this), "getStateAndHelpers", function() {
          var _this$props = _this.props, canvasTimeStart = _this$props.canvasTimeStart, canvasTimeEnd = _this$props.canvasTimeEnd, unit = _this$props.unit, showPeriod = _this$props.showPeriod, timelineWidth = _this$props.timelineWidth, visibleTimeStart = _this$props.visibleTimeStart, visibleTimeEnd = _this$props.visibleTimeEnd, headerData = _this$props.headerData;
          return {
            timelineContext: {
              timelineWidth,
              visibleTimeStart,
              visibleTimeEnd,
              canvasTimeStart,
              canvasTimeEnd
            },
            headerContext: {
              unit,
              intervals: _this.state.intervals
            },
            getRootProps: _this.getRootProps,
            getIntervalProps: _this.getIntervalProps,
            showPeriod,
            data: headerData
          };
        });
        var _canvasTimeStart = _props.canvasTimeStart, _canvasTimeEnd = _props.canvasTimeEnd, canvasWidth = _props.canvasWidth, _unit = _props.unit, _timeSteps = _props.timeSteps, _showPeriod = _props.showPeriod, _getLeftOffsetFromDate = _props.getLeftOffsetFromDate;
        var _intervals = _this.getHeaderIntervals({
          canvasTimeStart: _canvasTimeStart,
          canvasTimeEnd: _canvasTimeEnd,
          canvasWidth,
          unit: _unit,
          timeSteps: _timeSteps,
          showPeriod: _showPeriod,
          getLeftOffsetFromDate: _getLeftOffsetFromDate
        });
        _this.state = {
          intervals: _intervals
        };
        return _this;
      }
      _createClass(CustomHeader2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps) {
          if (nextProps.canvasTimeStart !== this.props.canvasTimeStart || nextProps.canvasTimeEnd !== this.props.canvasTimeEnd || nextProps.canvasWidth !== this.props.canvasWidth || nextProps.unit !== this.props.unit || nextProps.timeSteps !== this.props.timeSteps || nextProps.showPeriod !== this.props.showPeriod || nextProps.children !== this.props.children || nextProps.headerData !== this.props.headerData) {
            return true;
          }
          return false;
        }
      }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
          if (nextProps.canvasTimeStart !== this.props.canvasTimeStart || nextProps.canvasTimeEnd !== this.props.canvasTimeEnd || nextProps.canvasWidth !== this.props.canvasWidth || nextProps.unit !== this.props.unit || nextProps.timeSteps !== this.props.timeSteps || nextProps.showPeriod !== this.props.showPeriod) {
            var canvasTimeStart = nextProps.canvasTimeStart, canvasTimeEnd = nextProps.canvasTimeEnd, canvasWidth = nextProps.canvasWidth, unit = nextProps.unit, timeSteps = nextProps.timeSteps, showPeriod = nextProps.showPeriod, getLeftOffsetFromDate = nextProps.getLeftOffsetFromDate;
            var intervals = this.getHeaderIntervals({
              canvasTimeStart,
              canvasTimeEnd,
              canvasWidth,
              unit,
              timeSteps,
              showPeriod,
              getLeftOffsetFromDate
            });
            this.setState({
              intervals
            });
          }
        }
      }, {
        key: "render",
        value: function render() {
          var props = this.getStateAndHelpers();
          var Renderer = this.props.children;
          return _react["default"].createElement(Renderer, props);
        }
      }]);
      return CustomHeader2;
    }(_react["default"].Component);
    exports.CustomHeader = CustomHeader;
    _defineProperty(CustomHeader, "propTypes", {
      //component props
      children: _propTypes["default"].func.isRequired,
      unit: _propTypes["default"].string.isRequired,
      //Timeline context
      timeSteps: _propTypes["default"].object.isRequired,
      visibleTimeStart: _propTypes["default"].number.isRequired,
      visibleTimeEnd: _propTypes["default"].number.isRequired,
      canvasTimeStart: _propTypes["default"].number.isRequired,
      canvasTimeEnd: _propTypes["default"].number.isRequired,
      canvasWidth: _propTypes["default"].number.isRequired,
      showPeriod: _propTypes["default"].func.isRequired,
      headerData: _propTypes["default"].object,
      getLeftOffsetFromDate: _propTypes["default"].func.isRequired,
      height: _propTypes["default"].number.isRequired
    });
    var CustomHeaderWrapper = function CustomHeaderWrapper2(_ref3) {
      var children = _ref3.children, unit = _ref3.unit, headerData = _ref3.headerData, height = _ref3.height;
      return _react["default"].createElement(_TimelineStateContext.TimelineStateConsumer, null, function(_ref4) {
        var getTimelineState = _ref4.getTimelineState, showPeriod = _ref4.showPeriod, getLeftOffsetFromDate = _ref4.getLeftOffsetFromDate;
        var timelineState = getTimelineState();
        return _react["default"].createElement(_HeadersContext.TimelineHeadersConsumer, null, function(_ref5) {
          var timeSteps = _ref5.timeSteps;
          return _react["default"].createElement(CustomHeader, _extends({
            children,
            timeSteps,
            showPeriod,
            unit: unit ? unit : timelineState.timelineUnit
          }, timelineState, {
            headerData,
            getLeftOffsetFromDate,
            height
          }));
        });
      });
    };
    CustomHeaderWrapper.propTypes = {
      children: _propTypes["default"].func.isRequired,
      unit: _propTypes["default"].string,
      headerData: _propTypes["default"].object,
      height: _propTypes["default"].number
    };
    CustomHeaderWrapper.defaultProps = {
      height: 30
    };
    var _default = CustomHeaderWrapper;
    exports["default"] = _default;
  }
});

// node_modules/memoize-one/dist/memoize-one.esm.js
var memoize_one_esm_exports = {};
__export(memoize_one_esm_exports, {
  default: () => memoize_one_esm_default
});
function isEqual(first, second) {
  if (first === second) {
    return true;
  }
  if (safeIsNaN(first) && safeIsNaN(second)) {
    return true;
  }
  return false;
}
function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i = 0; i < newInputs.length; i++) {
    if (!isEqual(newInputs[i], lastInputs[i])) {
      return false;
    }
  }
  return true;
}
function memoizeOne(resultFn, isEqual2) {
  if (isEqual2 === void 0) {
    isEqual2 = areInputsEqual;
  }
  var lastThis;
  var lastArgs = [];
  var lastResult;
  var calledOnce = false;
  function memoized() {
    var newArgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }
    if (calledOnce && lastThis === this && isEqual2(newArgs, lastArgs)) {
      return lastResult;
    }
    lastResult = resultFn.apply(this, newArgs);
    calledOnce = true;
    lastThis = this;
    lastArgs = newArgs;
    return lastResult;
  }
  return memoized;
}
var safeIsNaN, memoize_one_esm_default;
var init_memoize_one_esm = __esm({
  "node_modules/memoize-one/dist/memoize-one.esm.js"() {
    safeIsNaN = Number.isNaN || function ponyfill(value) {
      return typeof value === "number" && value !== value;
    };
    memoize_one_esm_default = memoizeOne;
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/Interval.js
var require_Interval = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/Interval.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _calendar = require_calendar();
    var _events = require_events();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var Interval = function(_React$PureComponent) {
      _inherits(Interval2, _React$PureComponent);
      function Interval2() {
        var _getPrototypeOf2;
        var _this;
        _classCallCheck(this, Interval2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Interval2)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _defineProperty(_assertThisInitialized(_this), "onIntervalClick", function() {
          var _this$props = _this.props, primaryHeader = _this$props.primaryHeader, interval = _this$props.interval, unit = _this$props.unit, showPeriod = _this$props.showPeriod;
          if (primaryHeader) {
            var nextUnit = (0, _calendar.getNextUnit)(unit);
            var newStartTime = interval.startTime.clone().startOf(nextUnit);
            var newEndTime = interval.startTime.clone().endOf(nextUnit);
            showPeriod(newStartTime, newEndTime);
          } else {
            showPeriod(interval.startTime, interval.endTime);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "getIntervalProps", function() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          return _objectSpread({}, _this.props.getIntervalProps(_objectSpread({
            interval: _this.props.interval
          }, props)), {
            onClick: (0, _events.composeEvents)(_this.onIntervalClick, props.onClick)
          });
        });
        return _this;
      }
      _createClass(Interval2, [{
        key: "render",
        value: function render() {
          var _this$props2 = this.props, intervalText = _this$props2.intervalText, interval = _this$props2.interval, intervalRenderer = _this$props2.intervalRenderer, headerData = _this$props2.headerData;
          var Renderer = intervalRenderer;
          if (Renderer) {
            return _react["default"].createElement(Renderer, {
              getIntervalProps: this.getIntervalProps,
              intervalContext: {
                interval,
                intervalText
              },
              data: headerData
            });
          }
          return _react["default"].createElement("div", _extends({}, this.getIntervalProps({}), {
            className: "rct-dateHeader ".concat(this.props.primaryHeader ? "rct-dateHeader-primary" : "")
          }), _react["default"].createElement("span", null, intervalText));
        }
      }]);
      return Interval2;
    }(_react["default"].PureComponent);
    _defineProperty(Interval, "propTypes", {
      intervalRenderer: _propTypes["default"].func,
      unit: _propTypes["default"].string.isRequired,
      interval: _propTypes["default"].object.isRequired,
      showPeriod: _propTypes["default"].func.isRequired,
      intervalText: _propTypes["default"].string.isRequired,
      primaryHeader: _propTypes["default"].bool.isRequired,
      getIntervalProps: _propTypes["default"].func.isRequired,
      headerData: _propTypes["default"].object
    });
    var _default = Interval;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/CustomDateHeader.js
var require_CustomDateHeader = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/CustomDateHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.CustomDateHeader = CustomDateHeader;
    var _react = _interopRequireDefault(require_react());
    var _Interval = _interopRequireDefault(require_Interval());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function CustomDateHeader(_ref) {
      var _ref$headerContext = _ref.headerContext, intervals = _ref$headerContext.intervals, unit = _ref$headerContext.unit, getRootProps = _ref.getRootProps, getIntervalProps = _ref.getIntervalProps, showPeriod = _ref.showPeriod, _ref$data = _ref.data, style = _ref$data.style, intervalRenderer = _ref$data.intervalRenderer, className = _ref$data.className, getLabelFormat = _ref$data.getLabelFormat, unitProp = _ref$data.unitProp, headerData = _ref$data.headerData;
      return _react["default"].createElement("div", _extends({
        className
      }, getRootProps({
        style
      })), intervals.map(function(interval) {
        var intervalText = getLabelFormat([interval.startTime, interval.endTime], unit, interval.labelWidth);
        return _react["default"].createElement(_Interval["default"], {
          key: "label-".concat(interval.startTime.valueOf()),
          unit,
          interval,
          showPeriod,
          intervalText,
          primaryHeader: unitProp === "primaryHeader",
          getIntervalProps,
          intervalRenderer,
          headerData
        });
      }));
    }
  }
});

// node_modules/react-calendar-timeline/lib/lib/headers/DateHeader.js
var require_DateHeader = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/headers/DateHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _TimelineStateContext = require_TimelineStateContext();
    var _CustomHeader = _interopRequireDefault(require_CustomHeader());
    var _calendar = require_calendar();
    var _defaultConfig = require_default_config();
    var _memoizeOne = _interopRequireDefault((init_memoize_one_esm(), __toCommonJS(memoize_one_esm_exports)));
    var _CustomDateHeader = require_CustomDateHeader();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
    function _iterableToArrayLimit(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = void 0;
      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var DateHeader = function(_React$Component) {
      _inherits(DateHeader2, _React$Component);
      function DateHeader2() {
        var _getPrototypeOf2;
        var _this;
        _classCallCheck(this, DateHeader2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DateHeader2)).call.apply(_getPrototypeOf2, [this].concat(args)));
        _defineProperty(_assertThisInitialized(_this), "getHeaderUnit", function() {
          if (_this.props.unit === "primaryHeader") {
            return (0, _calendar.getNextUnit)(_this.props.timelineUnit);
          } else if (_this.props.unit) {
            return _this.props.unit;
          }
          return _this.props.timelineUnit;
        });
        _defineProperty(_assertThisInitialized(_this), "getRootStyle", (0, _memoizeOne["default"])(function(style) {
          return _objectSpread({
            height: 30
          }, style);
        }));
        _defineProperty(_assertThisInitialized(_this), "getLabelFormat", function(interval, unit, labelWidth) {
          var labelFormat = _this.props.labelFormat;
          if (typeof labelFormat === "string") {
            var startTime = interval[0];
            return startTime.format(labelFormat);
          } else if (typeof labelFormat === "function") {
            return labelFormat(interval, unit, labelWidth);
          } else {
            throw new Error("labelFormat should be function or string");
          }
        });
        _defineProperty(_assertThisInitialized(_this), "getHeaderData", (0, _memoizeOne["default"])(function(intervalRenderer, style, className, getLabelFormat, unitProp, headerData) {
          return {
            intervalRenderer,
            style,
            className,
            getLabelFormat,
            unitProp,
            headerData
          };
        }));
        return _this;
      }
      _createClass(DateHeader2, [{
        key: "render",
        value: function render() {
          var unit = this.getHeaderUnit();
          var _this$props = this.props, headerData = _this$props.headerData, height = _this$props.height;
          return _react["default"].createElement(_CustomHeader["default"], {
            unit,
            height,
            headerData: this.getHeaderData(this.props.intervalRenderer, this.getRootStyle(this.props.style), this.props.className, this.getLabelFormat, this.props.unit, this.props.headerData),
            children: _CustomDateHeader.CustomDateHeader
          });
        }
      }]);
      return DateHeader2;
    }(_react["default"].Component);
    _defineProperty(DateHeader, "propTypes", {
      unit: _propTypes["default"].string,
      style: _propTypes["default"].object,
      className: _propTypes["default"].string,
      timelineUnit: _propTypes["default"].string,
      labelFormat: _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].objectOf(_propTypes["default"].objectOf(_propTypes["default"].string)), _propTypes["default"].string]).isRequired,
      intervalRenderer: _propTypes["default"].func,
      headerData: _propTypes["default"].object,
      height: _propTypes["default"].number
    });
    var DateHeaderWrapper = function DateHeaderWrapper2(_ref) {
      var unit = _ref.unit, labelFormat = _ref.labelFormat, style = _ref.style, className = _ref.className, intervalRenderer = _ref.intervalRenderer, headerData = _ref.headerData, height = _ref.height;
      return _react["default"].createElement(_TimelineStateContext.TimelineStateConsumer, null, function(_ref2) {
        var getTimelineState = _ref2.getTimelineState;
        var timelineState = getTimelineState();
        return _react["default"].createElement(DateHeader, {
          timelineUnit: timelineState.timelineUnit,
          unit,
          labelFormat,
          style,
          className,
          intervalRenderer,
          headerData,
          height
        });
      });
    };
    DateHeaderWrapper.propTypes = {
      style: _propTypes["default"].object,
      className: _propTypes["default"].string,
      unit: _propTypes["default"].string,
      labelFormat: _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].objectOf(_propTypes["default"].objectOf(_propTypes["default"].string)), _propTypes["default"].string]),
      intervalRenderer: _propTypes["default"].func,
      headerData: _propTypes["default"].object,
      height: _propTypes["default"].number
    };
    DateHeaderWrapper.defaultProps = {
      labelFormat: formatLabel
    };
    function formatLabel(_ref3, unit, labelWidth) {
      var _ref4 = _slicedToArray(_ref3, 2), timeStart = _ref4[0], timeEnd = _ref4[1];
      var formatOptions = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : _defaultConfig.defaultHeaderFormats;
      var format;
      if (labelWidth >= 150) {
        format = formatOptions[unit]["long"];
      } else if (labelWidth >= 100) {
        format = formatOptions[unit]["mediumLong"];
      } else if (labelWidth >= 50) {
        format = formatOptions[unit]["medium"];
      } else {
        format = formatOptions[unit]["short"];
      }
      return timeStart.format(format);
    }
    var _default = DateHeaderWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/Timeline.js
var require_Timeline = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/Timeline.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireWildcard(require_react());
    var _moment = _interopRequireDefault((init_moment(), __toCommonJS(moment_exports)));
    var _Items = _interopRequireDefault(require_Items());
    var _Sidebar = _interopRequireDefault(require_Sidebar());
    var _Columns = _interopRequireDefault(require_Columns());
    var _GroupRows = _interopRequireDefault(require_GroupRows());
    var _ScrollElement = _interopRequireDefault(require_ScrollElement());
    var _MarkerCanvas = _interopRequireDefault(require_MarkerCanvas());
    var _window = _interopRequireDefault(require_window());
    var _calendar = require_calendar();
    var _generic = require_generic();
    var _defaultConfig = require_default_config();
    var _TimelineStateContext = require_TimelineStateContext();
    var _TimelineMarkersContext = require_TimelineMarkersContext();
    var _HeadersContext = require_HeadersContext();
    var _TimelineHeaders = _interopRequireDefault(require_TimelineHeaders());
    var _DateHeader = _interopRequireDefault(require_DateHeader());
    var _SidebarHeader = _interopRequireDefault(require_SidebarHeader());
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
    function _iterableToArrayLimit(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = void 0;
      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var ReactCalendarTimeline = function(_Component) {
      _inherits(ReactCalendarTimeline2, _Component);
      _createClass(ReactCalendarTimeline2, [{
        key: "getChildContext",
        value: function getChildContext() {
          var _this2 = this;
          return {
            getTimelineContext: function getTimelineContext() {
              return _this2.getTimelineContext();
            }
          };
        }
      }]);
      function ReactCalendarTimeline2(_props) {
        var _this;
        _classCallCheck(this, ReactCalendarTimeline2);
        _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactCalendarTimeline2).call(this, _props));
        _defineProperty(_assertThisInitialized(_this), "getTimelineContext", function() {
          var _this$state = _this.state, width = _this$state.width, visibleTimeStart = _this$state.visibleTimeStart, visibleTimeEnd = _this$state.visibleTimeEnd, canvasTimeStart = _this$state.canvasTimeStart, canvasTimeEnd = _this$state.canvasTimeEnd;
          return {
            timelineWidth: width,
            visibleTimeStart,
            visibleTimeEnd,
            canvasTimeStart,
            canvasTimeEnd
          };
        });
        _defineProperty(_assertThisInitialized(_this), "resize", function() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _this.props;
          var _this$container$getBo = _this.container.getBoundingClientRect(), containerWidth = _this$container$getBo.width;
          var width = containerWidth - props.sidebarWidth - props.rightSidebarWidth;
          var canvasWidth = (0, _calendar.getCanvasWidth)(width);
          var _stackTimelineItems = (0, _calendar.stackTimelineItems)(props.items, props.groups, canvasWidth, _this.state.canvasTimeStart, _this.state.canvasTimeEnd, props.keys, props.lineHeight, props.itemHeightRatio, props.stackItems, _this.state.draggingItem, _this.state.resizingItem, _this.state.dragTime, _this.state.resizingEdge, _this.state.resizeTime, _this.state.newGroupOrder), dimensionItems = _stackTimelineItems.dimensionItems, height = _stackTimelineItems.height, groupHeights = _stackTimelineItems.groupHeights, groupTops = _stackTimelineItems.groupTops;
          _this.setState({
            width,
            dimensionItems,
            height,
            groupHeights,
            groupTops
          });
          _this.scrollComponent.scrollLeft = width;
          _this.scrollHeaderRef.scrollLeft = width;
        });
        _defineProperty(_assertThisInitialized(_this), "onScroll", function(scrollX) {
          var width = _this.state.width;
          var canvasTimeStart = _this.state.canvasTimeStart;
          var zoom = _this.state.visibleTimeEnd - _this.state.visibleTimeStart;
          var visibleTimeStart = canvasTimeStart + zoom * scrollX / width;
          if (_this.state.visibleTimeStart !== visibleTimeStart || _this.state.visibleTimeEnd !== visibleTimeStart + zoom) {
            _this.props.onTimeChange(visibleTimeStart, visibleTimeStart + zoom, _this.updateScrollCanvas);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "updateScrollCanvas", function(visibleTimeStart, visibleTimeEnd, forceUpdateDimensions) {
          var items = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : _this.props.items;
          var groups = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : _this.props.groups;
          _this.setState((0, _calendar.calculateScrollCanvas)(visibleTimeStart, visibleTimeEnd, forceUpdateDimensions, items, groups, _this.props, _this.state));
        });
        _defineProperty(_assertThisInitialized(_this), "handleWheelZoom", function(speed, xPosition, deltaY) {
          _this.changeZoom(1 + speed * deltaY / 500, xPosition / _this.state.width);
        });
        _defineProperty(_assertThisInitialized(_this), "changeZoom", function(scale) {
          var offset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0.5;
          var _this$props = _this.props, minZoom = _this$props.minZoom, maxZoom = _this$props.maxZoom;
          var oldZoom = _this.state.visibleTimeEnd - _this.state.visibleTimeStart;
          var newZoom = Math.min(Math.max(Math.round(oldZoom * scale), minZoom), maxZoom);
          var newVisibleTimeStart = Math.round(_this.state.visibleTimeStart + (oldZoom - newZoom) * offset);
          _this.props.onTimeChange(newVisibleTimeStart, newVisibleTimeStart + newZoom, _this.updateScrollCanvas);
        });
        _defineProperty(_assertThisInitialized(_this), "showPeriod", function(from, to) {
          var visibleTimeStart = from.valueOf();
          var visibleTimeEnd = to.valueOf();
          var zoom = visibleTimeEnd - visibleTimeStart;
          if (zoom < 36e4) {
            return;
          }
          _this.props.onTimeChange(visibleTimeStart, visibleTimeStart + zoom, _this.updateScrollCanvas);
        });
        _defineProperty(_assertThisInitialized(_this), "selectItem", function(item, clickType, e) {
          if (_this.isItemSelected(item) || _this.props.itemTouchSendsClick && clickType === "touch") {
            if (item && _this.props.onItemClick) {
              var time = _this.timeFromItemEvent(e);
              _this.props.onItemClick(item, e, time);
            }
          } else {
            _this.setState({
              selectedItem: item
            });
            if (item && _this.props.onItemSelect) {
              var _time = _this.timeFromItemEvent(e);
              _this.props.onItemSelect(item, e, _time);
            } else if (item === null && _this.props.onItemDeselect) {
              _this.props.onItemDeselect(e);
            }
          }
        });
        _defineProperty(_assertThisInitialized(_this), "doubleClickItem", function(item, e) {
          if (_this.props.onItemDoubleClick) {
            var time = _this.timeFromItemEvent(e);
            _this.props.onItemDoubleClick(item, e, time);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "contextMenuClickItem", function(item, e) {
          if (_this.props.onItemContextMenu) {
            var time = _this.timeFromItemEvent(e);
            _this.props.onItemContextMenu(item, e, time);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "getTimeFromRowClickEvent", function(e) {
          var dragSnap = _this.props.dragSnap;
          var _this$state2 = _this.state, width = _this$state2.width, canvasTimeStart = _this$state2.canvasTimeStart, canvasTimeEnd = _this$state2.canvasTimeEnd;
          var offsetX = e.nativeEvent.offsetX;
          var time = (0, _calendar.calculateTimeForXPosition)(canvasTimeStart, canvasTimeEnd, (0, _calendar.getCanvasWidth)(width), offsetX);
          time = Math.floor(time / dragSnap) * dragSnap;
          return time;
        });
        _defineProperty(_assertThisInitialized(_this), "timeFromItemEvent", function(e) {
          var _this$state3 = _this.state, width = _this$state3.width, visibleTimeStart = _this$state3.visibleTimeStart, visibleTimeEnd = _this$state3.visibleTimeEnd;
          var dragSnap = _this.props.dragSnap;
          var scrollComponent = _this.scrollComponent;
          var _scrollComponent$getB = scrollComponent.getBoundingClientRect(), scrollX = _scrollComponent$getB.left;
          var xRelativeToTimeline = e.clientX - scrollX;
          var relativeItemPosition = xRelativeToTimeline / width;
          var zoom = visibleTimeEnd - visibleTimeStart;
          var timeOffset = relativeItemPosition * zoom;
          var time = Math.round(visibleTimeStart + timeOffset);
          time = Math.floor(time / dragSnap) * dragSnap;
          return time;
        });
        _defineProperty(_assertThisInitialized(_this), "dragItem", function(item, dragTime, newGroupOrder) {
          var newGroup = _this.props.groups[newGroupOrder];
          var keys = _this.props.keys;
          _this.setState({
            draggingItem: item,
            dragTime,
            newGroupOrder,
            dragGroupTitle: newGroup ? (0, _generic._get)(newGroup, keys.groupLabelKey) : ""
          });
          _this.updatingItem({
            eventType: "move",
            itemId: item,
            time: dragTime,
            newGroupOrder
          });
        });
        _defineProperty(_assertThisInitialized(_this), "dropItem", function(item, dragTime, newGroupOrder) {
          _this.setState({
            draggingItem: null,
            dragTime: null,
            dragGroupTitle: null
          });
          if (_this.props.onItemMove) {
            _this.props.onItemMove(item, dragTime, newGroupOrder);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "resizingItem", function(item, resizeTime, edge) {
          _this.setState({
            resizingItem: item,
            resizingEdge: edge,
            resizeTime
          });
          _this.updatingItem({
            eventType: "resize",
            itemId: item,
            time: resizeTime,
            edge
          });
        });
        _defineProperty(_assertThisInitialized(_this), "resizedItem", function(item, resizeTime, edge, timeDelta) {
          _this.setState({
            resizingItem: null,
            resizingEdge: null,
            resizeTime: null
          });
          if (_this.props.onItemResize && timeDelta !== 0) {
            _this.props.onItemResize(item, resizeTime, edge);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "updatingItem", function(_ref) {
          var eventType = _ref.eventType, itemId = _ref.itemId, time = _ref.time, edge = _ref.edge, newGroupOrder = _ref.newGroupOrder;
          if (_this.props.onItemDrag) {
            _this.props.onItemDrag({
              eventType,
              itemId,
              time,
              edge,
              newGroupOrder
            });
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleRowClick", function(e, rowIndex) {
          if (_this.hasSelectedItem()) {
            _this.selectItem(null);
          }
          if (_this.props.onCanvasClick == null)
            return;
          var time = _this.getTimeFromRowClickEvent(e);
          var groupId = (0, _generic._get)(_this.props.groups[rowIndex], _this.props.keys.groupIdKey);
          _this.props.onCanvasClick(groupId, time, e);
        });
        _defineProperty(_assertThisInitialized(_this), "handleRowDoubleClick", function(e, rowIndex) {
          if (_this.props.onCanvasDoubleClick == null)
            return;
          var time = _this.getTimeFromRowClickEvent(e);
          var groupId = (0, _generic._get)(_this.props.groups[rowIndex], _this.props.keys.groupIdKey);
          _this.props.onCanvasDoubleClick(groupId, time, e);
        });
        _defineProperty(_assertThisInitialized(_this), "handleScrollContextMenu", function(e, rowIndex) {
          if (_this.props.onCanvasContextMenu == null)
            return;
          var timePosition = _this.getTimeFromRowClickEvent(e);
          var groupId = (0, _generic._get)(_this.props.groups[rowIndex], _this.props.keys.groupIdKey);
          if (_this.props.onCanvasContextMenu) {
            e.preventDefault();
            _this.props.onCanvasContextMenu(groupId, timePosition, e);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "handleHeaderRef", function(el) {
          _this.scrollHeaderRef = el;
          _this.props.headerRef(el);
        });
        _defineProperty(_assertThisInitialized(_this), "isTimelineHeader", function(child) {
          if (child.type === void 0)
            return false;
          return child.type.secretKey === _TimelineHeaders["default"].secretKey;
        });
        _defineProperty(_assertThisInitialized(_this), "renderHeaders", function() {
          if (_this.props.children) {
            var headerRenderer;
            _react["default"].Children.map(_this.props.children, function(child) {
              if (_this.isTimelineHeader(child)) {
                headerRenderer = child;
              }
            });
            if (headerRenderer) {
              return headerRenderer;
            }
          }
          return _react["default"].createElement(_TimelineHeaders["default"], null, _react["default"].createElement(_DateHeader["default"], {
            unit: "primaryHeader"
          }), _react["default"].createElement(_DateHeader["default"], null));
        });
        _defineProperty(_assertThisInitialized(_this), "getScrollElementRef", function(el) {
          _this.props.scrollRef(el);
          _this.scrollComponent = el;
        });
        _this.getSelected = _this.getSelected.bind(_assertThisInitialized(_this));
        _this.hasSelectedItem = _this.hasSelectedItem.bind(_assertThisInitialized(_this));
        _this.isItemSelected = _this.isItemSelected.bind(_assertThisInitialized(_this));
        var _visibleTimeStart = null;
        var _visibleTimeEnd = null;
        if (_this.props.defaultTimeStart && _this.props.defaultTimeEnd) {
          _visibleTimeStart = _this.props.defaultTimeStart.valueOf();
          _visibleTimeEnd = _this.props.defaultTimeEnd.valueOf();
        } else if (_this.props.visibleTimeStart && _this.props.visibleTimeEnd) {
          _visibleTimeStart = _this.props.visibleTimeStart;
          _visibleTimeEnd = _this.props.visibleTimeEnd;
        } else {
          throw new Error('You must provide either "defaultTimeStart" and "defaultTimeEnd" or "visibleTimeStart" and "visibleTimeEnd" to initialize the Timeline');
        }
        var _getCanvasBoundariesF = (0, _calendar.getCanvasBoundariesFromVisibleTime)(_visibleTimeStart, _visibleTimeEnd), _getCanvasBoundariesF2 = _slicedToArray(_getCanvasBoundariesF, 2), _canvasTimeStart = _getCanvasBoundariesF2[0], _canvasTimeEnd = _getCanvasBoundariesF2[1];
        _this.state = {
          width: 1e3,
          visibleTimeStart: _visibleTimeStart,
          visibleTimeEnd: _visibleTimeEnd,
          canvasTimeStart: _canvasTimeStart,
          canvasTimeEnd: _canvasTimeEnd,
          selectedItem: null,
          dragTime: null,
          dragGroupTitle: null,
          resizeTime: null,
          resizingItem: null,
          resizingEdge: null
        };
        var _canvasWidth = (0, _calendar.getCanvasWidth)(_this.state.width);
        var _stackTimelineItems2 = (0, _calendar.stackTimelineItems)(_props.items, _props.groups, _canvasWidth, _this.state.canvasTimeStart, _this.state.canvasTimeEnd, _props.keys, _props.lineHeight, _props.itemHeightRatio, _props.stackItems, _this.state.draggingItem, _this.state.resizingItem, _this.state.dragTime, _this.state.resizingEdge, _this.state.resizeTime, _this.state.newGroupOrder), _dimensionItems = _stackTimelineItems2.dimensionItems, _height = _stackTimelineItems2.height, _groupHeights = _stackTimelineItems2.groupHeights, _groupTops = _stackTimelineItems2.groupTops;
        _this.state.dimensionItems = _dimensionItems;
        _this.state.height = _height;
        _this.state.groupHeights = _groupHeights;
        _this.state.groupTops = _groupTops;
        return _this;
      }
      _createClass(ReactCalendarTimeline2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.resize(this.props);
          if (this.props.resizeDetector && this.props.resizeDetector.addListener) {
            this.props.resizeDetector.addListener(this);
          }
          _window["default"].addListener(this);
          this.lastTouchDistance = null;
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.props.resizeDetector && this.props.resizeDetector.addListener) {
            this.props.resizeDetector.removeListener(this);
          }
          _window["default"].removeListener(this);
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps, prevState) {
          var newZoom = this.state.visibleTimeEnd - this.state.visibleTimeStart;
          var oldZoom = prevState.visibleTimeEnd - prevState.visibleTimeStart;
          if (this.props.onZoom && newZoom !== oldZoom) {
            this.props.onZoom(this.getTimelineContext());
          }
          if (this.props.onBoundsChange && this.state.canvasTimeStart !== prevState.canvasTimeStart) {
            this.props.onBoundsChange(this.state.canvasTimeStart, this.state.canvasTimeStart + newZoom * 3);
          }
          var scrollLeft = Math.round(this.state.width * (this.state.visibleTimeStart - this.state.canvasTimeStart) / newZoom);
          var componentScrollLeft = Math.round(prevState.width * (prevState.visibleTimeStart - prevState.canvasTimeStart) / oldZoom);
          if (componentScrollLeft !== scrollLeft) {
            this.scrollComponent.scrollLeft = scrollLeft;
            this.scrollHeaderRef.scrollLeft = scrollLeft;
          }
        }
      }, {
        key: "columns",
        value: function columns(canvasTimeStart, canvasTimeEnd, canvasWidth, minUnit, timeSteps, height) {
          return _react["default"].createElement(_Columns["default"], {
            canvasTimeStart,
            canvasTimeEnd,
            canvasWidth,
            lineCount: (0, _generic._length)(this.props.groups),
            minUnit,
            timeSteps,
            height,
            verticalLineClassNamesForTime: this.props.verticalLineClassNamesForTime
          });
        }
      }, {
        key: "rows",
        value: function rows(canvasWidth, groupHeights, groups) {
          return _react["default"].createElement(_GroupRows["default"], {
            groups,
            canvasWidth,
            lineCount: (0, _generic._length)(this.props.groups),
            groupHeights,
            clickTolerance: this.props.clickTolerance,
            onRowClick: this.handleRowClick,
            onRowDoubleClick: this.handleRowDoubleClick,
            horizontalLineClassNamesForGroup: this.props.horizontalLineClassNamesForGroup,
            onRowContextClick: this.handleScrollContextMenu
          });
        }
      }, {
        key: "items",
        value: function items(canvasTimeStart, zoom, canvasTimeEnd, canvasWidth, minUnit, dimensionItems, groupHeights, groupTops) {
          return _react["default"].createElement(_Items["default"], {
            canvasTimeStart,
            canvasTimeEnd,
            canvasWidth,
            dimensionItems,
            groupTops,
            items: this.props.items,
            groups: this.props.groups,
            keys: this.props.keys,
            selectedItem: this.state.selectedItem,
            dragSnap: this.props.dragSnap,
            minResizeWidth: this.props.minResizeWidth,
            canChangeGroup: this.props.canChangeGroup,
            canMove: this.props.canMove,
            canResize: this.props.canResize,
            useResizeHandle: this.props.useResizeHandle,
            canSelect: this.props.canSelect,
            moveResizeValidator: this.props.moveResizeValidator,
            itemSelect: this.selectItem,
            itemDrag: this.dragItem,
            itemDrop: this.dropItem,
            onItemDoubleClick: this.doubleClickItem,
            onItemContextMenu: this.contextMenuClickItem,
            itemResizing: this.resizingItem,
            itemResized: this.resizedItem,
            itemRenderer: this.props.itemRenderer,
            selected: this.props.selected,
            scrollRef: this.scrollComponent
          });
        }
      }, {
        key: "sidebar",
        value: function sidebar(height, groupHeights) {
          var sidebarWidth = this.props.sidebarWidth;
          return sidebarWidth && _react["default"].createElement(_Sidebar["default"], {
            groups: this.props.groups,
            groupRenderer: this.props.groupRenderer,
            keys: this.props.keys,
            width: sidebarWidth,
            groupHeights,
            height
          });
        }
      }, {
        key: "rightSidebar",
        value: function rightSidebar(height, groupHeights) {
          var rightSidebarWidth = this.props.rightSidebarWidth;
          return rightSidebarWidth && _react["default"].createElement(_Sidebar["default"], {
            groups: this.props.groups,
            keys: this.props.keys,
            groupRenderer: this.props.groupRenderer,
            isRightSidebar: true,
            width: rightSidebarWidth,
            groupHeights,
            height
          });
        }
        /**
         * check if child of type TimelineHeader
         * refer to for explanation https://github.com/gaearon/react-hot-loader#checking-element-types 
         */
      }, {
        key: "childrenWithProps",
        value: function childrenWithProps(canvasTimeStart, canvasTimeEnd, canvasWidth, dimensionItems, groupHeights, groupTops, height, visibleTimeStart, visibleTimeEnd, minUnit, timeSteps) {
          var _this3 = this;
          if (!this.props.children) {
            return null;
          }
          var childArray = Array.isArray(this.props.children) ? this.props.children.filter(function(c) {
            return c;
          }) : [this.props.children];
          var childProps = {
            canvasTimeStart,
            canvasTimeEnd,
            canvasWidth,
            visibleTimeStart,
            visibleTimeEnd,
            dimensionItems,
            items: this.props.items,
            groups: this.props.groups,
            keys: this.props.keys,
            groupHeights,
            groupTops,
            selected: this.getSelected(),
            height,
            minUnit,
            timeSteps
          };
          return _react["default"].Children.map(childArray, function(child) {
            if (!_this3.isTimelineHeader(child)) {
              return _react["default"].cloneElement(child, childProps);
            } else {
              return null;
            }
          });
        }
      }, {
        key: "getSelected",
        value: function getSelected() {
          return this.state.selectedItem && !this.props.selected ? [this.state.selectedItem] : this.props.selected || [];
        }
      }, {
        key: "hasSelectedItem",
        value: function hasSelectedItem() {
          if (!Array.isArray(this.props.selected))
            return !!this.state.selectedItem;
          return this.props.selected.length > 0;
        }
      }, {
        key: "isItemSelected",
        value: function isItemSelected(itemId) {
          var selectedItems = this.getSelected();
          return selectedItems.some(function(i) {
            return i === itemId;
          });
        }
      }, {
        key: "render",
        value: function render() {
          var _this4 = this;
          var _this$props2 = this.props, items = _this$props2.items, groups = _this$props2.groups, sidebarWidth = _this$props2.sidebarWidth, rightSidebarWidth = _this$props2.rightSidebarWidth, timeSteps = _this$props2.timeSteps, traditionalZoom = _this$props2.traditionalZoom;
          var _this$state4 = this.state, draggingItem = _this$state4.draggingItem, resizingItem = _this$state4.resizingItem, width = _this$state4.width, visibleTimeStart = _this$state4.visibleTimeStart, visibleTimeEnd = _this$state4.visibleTimeEnd, canvasTimeStart = _this$state4.canvasTimeStart, canvasTimeEnd = _this$state4.canvasTimeEnd;
          var _this$state5 = this.state, dimensionItems = _this$state5.dimensionItems, height = _this$state5.height, groupHeights = _this$state5.groupHeights, groupTops = _this$state5.groupTops;
          var zoom = visibleTimeEnd - visibleTimeStart;
          var canvasWidth = (0, _calendar.getCanvasWidth)(width);
          var minUnit = (0, _calendar.getMinUnit)(zoom, width, timeSteps);
          var isInteractingWithItem = !!draggingItem || !!resizingItem;
          if (isInteractingWithItem) {
            var stackResults = (0, _calendar.stackTimelineItems)(items, groups, canvasWidth, this.state.canvasTimeStart, this.state.canvasTimeEnd, this.props.keys, this.props.lineHeight, this.props.itemHeightRatio, this.props.stackItems, this.state.draggingItem, this.state.resizingItem, this.state.dragTime, this.state.resizingEdge, this.state.resizeTime, this.state.newGroupOrder);
            dimensionItems = stackResults.dimensionItems;
            height = stackResults.height;
            groupHeights = stackResults.groupHeights;
            groupTops = stackResults.groupTops;
          }
          var outerComponentStyle = {
            height: "".concat(height, "px")
          };
          return _react["default"].createElement(_TimelineStateContext.TimelineStateProvider, {
            visibleTimeStart,
            visibleTimeEnd,
            canvasTimeStart,
            canvasTimeEnd,
            canvasWidth,
            showPeriod: this.showPeriod,
            timelineUnit: minUnit,
            timelineWidth: this.state.width
          }, _react["default"].createElement(_TimelineMarkersContext.TimelineMarkersProvider, null, _react["default"].createElement(_HeadersContext.TimelineHeadersProvider, {
            registerScroll: this.handleHeaderRef,
            timeSteps,
            leftSidebarWidth: this.props.sidebarWidth,
            rightSidebarWidth: this.props.rightSidebarWidth
          }, _react["default"].createElement("div", {
            style: this.props.style,
            ref: function ref(el) {
              return _this4.container = el;
            },
            className: "react-calendar-timeline ".concat(this.props.className)
          }, this.renderHeaders(), _react["default"].createElement("div", {
            style: outerComponentStyle,
            className: "rct-outer"
          }, sidebarWidth > 0 ? this.sidebar(height, groupHeights) : null, _react["default"].createElement(_ScrollElement["default"], {
            scrollRef: this.getScrollElementRef,
            width,
            height,
            onZoom: this.changeZoom,
            onWheelZoom: this.handleWheelZoom,
            traditionalZoom,
            onScroll: this.onScroll,
            isInteractingWithItem
          }, _react["default"].createElement(_MarkerCanvas["default"], null, this.columns(canvasTimeStart, canvasTimeEnd, canvasWidth, minUnit, timeSteps, height), this.rows(canvasWidth, groupHeights, groups), this.items(canvasTimeStart, zoom, canvasTimeEnd, canvasWidth, minUnit, dimensionItems, groupHeights, groupTops), this.childrenWithProps(canvasTimeStart, canvasTimeEnd, canvasWidth, dimensionItems, groupHeights, groupTops, height, visibleTimeStart, visibleTimeEnd, minUnit, timeSteps))), rightSidebarWidth > 0 ? this.rightSidebar(height, groupHeights) : null)))));
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          var visibleTimeStart = nextProps.visibleTimeStart, visibleTimeEnd = nextProps.visibleTimeEnd, items = nextProps.items, groups = nextProps.groups;
          var derivedState = {
            items,
            groups
            // if the items or groups have changed we must re-render
          };
          var forceUpdate = items !== prevState.items || groups !== prevState.groups;
          if (visibleTimeStart && visibleTimeEnd) {
            Object.assign(derivedState, (0, _calendar.calculateScrollCanvas)(visibleTimeStart, visibleTimeEnd, forceUpdate, items, groups, nextProps, prevState));
          } else if (forceUpdate) {
            var canvasWidth = (0, _calendar.getCanvasWidth)(prevState.width);
            Object.assign(derivedState, (0, _calendar.stackTimelineItems)(items, groups, canvasWidth, prevState.canvasTimeStart, prevState.canvasTimeEnd, nextProps.keys, nextProps.lineHeight, nextProps.itemHeightRatio, nextProps.stackItems, prevState.draggingItem, prevState.resizingItem, prevState.dragTime, prevState.resizingEdge, prevState.resizeTime, prevState.newGroupOrder));
          }
          return derivedState;
        }
      }]);
      return ReactCalendarTimeline2;
    }(_react.Component);
    exports["default"] = ReactCalendarTimeline;
    _defineProperty(ReactCalendarTimeline, "propTypes", {
      groups: _propTypes["default"].oneOfType([_propTypes["default"].array, _propTypes["default"].object]).isRequired,
      items: _propTypes["default"].oneOfType([_propTypes["default"].array, _propTypes["default"].object]).isRequired,
      sidebarWidth: _propTypes["default"].number,
      rightSidebarWidth: _propTypes["default"].number,
      dragSnap: _propTypes["default"].number,
      minResizeWidth: _propTypes["default"].number,
      stickyHeader: _propTypes["default"].bool,
      lineHeight: _propTypes["default"].number,
      itemHeightRatio: _propTypes["default"].number,
      minZoom: _propTypes["default"].number,
      maxZoom: _propTypes["default"].number,
      clickTolerance: _propTypes["default"].number,
      canChangeGroup: _propTypes["default"].bool,
      canMove: _propTypes["default"].bool,
      canResize: _propTypes["default"].oneOf([true, false, "left", "right", "both"]),
      useResizeHandle: _propTypes["default"].bool,
      canSelect: _propTypes["default"].bool,
      stackItems: _propTypes["default"].bool,
      traditionalZoom: _propTypes["default"].bool,
      itemTouchSendsClick: _propTypes["default"].bool,
      horizontalLineClassNamesForGroup: _propTypes["default"].func,
      onItemMove: _propTypes["default"].func,
      onItemResize: _propTypes["default"].func,
      onItemClick: _propTypes["default"].func,
      onItemSelect: _propTypes["default"].func,
      onItemDeselect: _propTypes["default"].func,
      onCanvasClick: _propTypes["default"].func,
      onItemDoubleClick: _propTypes["default"].func,
      onItemContextMenu: _propTypes["default"].func,
      onCanvasDoubleClick: _propTypes["default"].func,
      onCanvasContextMenu: _propTypes["default"].func,
      onZoom: _propTypes["default"].func,
      onItemDrag: _propTypes["default"].func,
      moveResizeValidator: _propTypes["default"].func,
      itemRenderer: _propTypes["default"].func,
      groupRenderer: _propTypes["default"].func,
      className: _propTypes["default"].string,
      style: _propTypes["default"].object,
      keys: _propTypes["default"].shape({
        groupIdKey: _propTypes["default"].string,
        groupTitleKey: _propTypes["default"].string,
        groupLabelKey: _propTypes["default"].string,
        groupRightTitleKey: _propTypes["default"].string,
        itemIdKey: _propTypes["default"].string,
        itemTitleKey: _propTypes["default"].string,
        itemDivTitleKey: _propTypes["default"].string,
        itemGroupKey: _propTypes["default"].string,
        itemTimeStartKey: _propTypes["default"].string,
        itemTimeEndKey: _propTypes["default"].string
      }),
      headerRef: _propTypes["default"].func,
      scrollRef: _propTypes["default"].func,
      timeSteps: _propTypes["default"].shape({
        second: _propTypes["default"].number,
        minute: _propTypes["default"].number,
        hour: _propTypes["default"].number,
        day: _propTypes["default"].number,
        month: _propTypes["default"].number,
        year: _propTypes["default"].number
      }),
      defaultTimeStart: _propTypes["default"].object,
      defaultTimeEnd: _propTypes["default"].object,
      visibleTimeStart: _propTypes["default"].number,
      visibleTimeEnd: _propTypes["default"].number,
      onTimeChange: _propTypes["default"].func,
      onBoundsChange: _propTypes["default"].func,
      selected: _propTypes["default"].array,
      headerLabelFormats: _propTypes["default"].shape({
        yearShort: _propTypes["default"].string,
        yearLong: _propTypes["default"].string,
        monthShort: _propTypes["default"].string,
        monthMedium: _propTypes["default"].string,
        monthMediumLong: _propTypes["default"].string,
        monthLong: _propTypes["default"].string,
        dayShort: _propTypes["default"].string,
        dayLong: _propTypes["default"].string,
        hourShort: _propTypes["default"].string,
        hourMedium: _propTypes["default"].string,
        hourMediumLong: _propTypes["default"].string,
        hourLong: _propTypes["default"].string
      }),
      subHeaderLabelFormats: _propTypes["default"].shape({
        yearShort: _propTypes["default"].string,
        yearLong: _propTypes["default"].string,
        monthShort: _propTypes["default"].string,
        monthMedium: _propTypes["default"].string,
        monthLong: _propTypes["default"].string,
        dayShort: _propTypes["default"].string,
        dayMedium: _propTypes["default"].string,
        dayMediumLong: _propTypes["default"].string,
        dayLong: _propTypes["default"].string,
        hourShort: _propTypes["default"].string,
        hourLong: _propTypes["default"].string,
        minuteShort: _propTypes["default"].string,
        minuteLong: _propTypes["default"].string
      }),
      resizeDetector: _propTypes["default"].shape({
        addListener: _propTypes["default"].func,
        removeListener: _propTypes["default"].func
      }),
      verticalLineClassNamesForTime: _propTypes["default"].func,
      children: _propTypes["default"].node
    });
    _defineProperty(ReactCalendarTimeline, "defaultProps", {
      sidebarWidth: 150,
      rightSidebarWidth: 0,
      dragSnap: 1e3 * 60 * 15,
      // 15min
      minResizeWidth: 20,
      stickyHeader: true,
      lineHeight: 30,
      itemHeightRatio: 0.65,
      minZoom: 60 * 60 * 1e3,
      // 1 hour
      maxZoom: 5 * 365.24 * 86400 * 1e3,
      // 5 years
      clickTolerance: 3,
      // how many pixels can we drag for it to be still considered a click?
      canChangeGroup: true,
      canMove: true,
      canResize: "right",
      useResizeHandle: false,
      canSelect: true,
      stackItems: false,
      traditionalZoom: false,
      horizontalLineClassNamesForGroup: null,
      onItemMove: null,
      onItemResize: null,
      onItemClick: null,
      onItemSelect: null,
      onItemDeselect: null,
      onItemDrag: null,
      onCanvasClick: null,
      onItemDoubleClick: null,
      onItemContextMenu: null,
      onZoom: null,
      verticalLineClassNamesForTime: null,
      moveResizeValidator: null,
      dayBackground: null,
      defaultTimeStart: null,
      defaultTimeEnd: null,
      itemTouchSendsClick: false,
      style: {},
      className: "",
      keys: _defaultConfig.defaultKeys,
      timeSteps: _defaultConfig.defaultTimeSteps,
      headerRef: function headerRef() {
      },
      scrollRef: function scrollRef() {
      },
      // if you pass in visibleTimeStart and visibleTimeEnd, you must also pass onTimeChange(visibleTimeStart, visibleTimeEnd),
      // which needs to update the props visibleTimeStart and visibleTimeEnd to the ones passed
      visibleTimeStart: null,
      visibleTimeEnd: null,
      onTimeChange: function onTimeChange(visibleTimeStart, visibleTimeEnd, updateScrollCanvas) {
        updateScrollCanvas(visibleTimeStart, visibleTimeEnd);
      },
      // called when the canvas area of the calendar changes
      onBoundsChange: null,
      children: null,
      headerLabelFormats: _defaultConfig.defaultHeaderLabelFormats,
      subHeaderLabelFormats: _defaultConfig.defaultSubHeaderLabelFormats,
      selected: null
    });
    _defineProperty(ReactCalendarTimeline, "childContextTypes", {
      getTimelineContext: _propTypes["default"].func
    });
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/public/TimelineMarkers.js
var require_TimelineMarkers = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/public/TimelineMarkers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var TimelineMarkers = function TimelineMarkers2(props) {
      return props.children || null;
    };
    var _default = TimelineMarkers;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/public/TodayMarker.js
var require_TodayMarker2 = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/public/TodayMarker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _TimelineMarkersContext = require_TimelineMarkersContext();
    var _markerType = require_markerType();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var TodayMarker = function(_React$Component) {
      _inherits(TodayMarker2, _React$Component);
      function TodayMarker2() {
        _classCallCheck(this, TodayMarker2);
        return _possibleConstructorReturn(this, _getPrototypeOf(TodayMarker2).apply(this, arguments));
      }
      _createClass(TodayMarker2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this$props$subscribe = this.props.subscribeMarker({
            type: _markerType.TimelineMarkerType.Today,
            renderer: this.props.children,
            interval: this.props.interval
          }), unsubscribe = _this$props$subscribe.unsubscribe, getMarker = _this$props$subscribe.getMarker;
          this.unsubscribe = unsubscribe;
          this.getMarker = getMarker;
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.unsubscribe != null) {
            this.unsubscribe();
            this.unsubscribe = null;
          }
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          if (prevProps.interval !== this.props.interval && this.getMarker) {
            var marker = this.getMarker();
            this.props.updateMarker(_objectSpread({}, marker, {
              interval: this.props.interval
            }));
          }
        }
      }, {
        key: "render",
        value: function render() {
          return null;
        }
      }]);
      return TodayMarker2;
    }(_react["default"].Component);
    _defineProperty(TodayMarker, "propTypes", {
      subscribeMarker: _propTypes["default"].func.isRequired,
      updateMarker: _propTypes["default"].func.isRequired,
      interval: _propTypes["default"].number,
      children: _propTypes["default"].func
    });
    _defineProperty(TodayMarker, "defaultProps", {
      interval: 1e3 * 10
      // default to ten seconds
    });
    var TodayMarkerWrapper = function TodayMarkerWrapper2(props) {
      return _react["default"].createElement(_TimelineMarkersContext.TimelineMarkersConsumer, null, function(_ref) {
        var subscribeMarker = _ref.subscribeMarker, updateMarker = _ref.updateMarker;
        return _react["default"].createElement(TodayMarker, _extends({
          subscribeMarker,
          updateMarker
        }, props));
      });
    };
    TodayMarkerWrapper.displayName = "TodayMarkerWrapper";
    var _default = TodayMarkerWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/public/CustomMarker.js
var require_CustomMarker2 = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/public/CustomMarker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _TimelineMarkersContext = require_TimelineMarkersContext();
    var _markerType = require_markerType();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        if (i % 2) {
          var source = arguments[i] != null ? arguments[i] : {};
          var ownKeys = Object.keys(source);
          if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
              return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
          }
          ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
          });
        } else {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(arguments[i]));
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var CustomMarker = function(_React$Component) {
      _inherits(CustomMarker2, _React$Component);
      function CustomMarker2() {
        _classCallCheck(this, CustomMarker2);
        return _possibleConstructorReturn(this, _getPrototypeOf(CustomMarker2).apply(this, arguments));
      }
      _createClass(CustomMarker2, [{
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          if (prevProps.date !== this.props.date && this.getMarker) {
            var marker = this.getMarker();
            this.props.updateMarker(_objectSpread({}, marker, {
              date: this.props.date
            }));
          }
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this$props$subscribe = this.props.subscribeMarker({
            type: _markerType.TimelineMarkerType.Custom,
            renderer: this.props.children,
            date: this.props.date
          }), unsubscribe = _this$props$subscribe.unsubscribe, getMarker = _this$props$subscribe.getMarker;
          this.unsubscribe = unsubscribe;
          this.getMarker = getMarker;
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.unsubscribe != null) {
            this.unsubscribe();
            this.unsubscribe = null;
          }
        }
      }, {
        key: "render",
        value: function render() {
          return null;
        }
      }]);
      return CustomMarker2;
    }(_react["default"].Component);
    _defineProperty(CustomMarker, "propTypes", {
      subscribeMarker: _propTypes["default"].func.isRequired,
      updateMarker: _propTypes["default"].func.isRequired,
      children: _propTypes["default"].func,
      date: _propTypes["default"].number.isRequired
    });
    var CustomMarkerWrapper = function CustomMarkerWrapper2(props) {
      return _react["default"].createElement(_TimelineMarkersContext.TimelineMarkersConsumer, null, function(_ref) {
        var subscribeMarker = _ref.subscribeMarker, updateMarker = _ref.updateMarker;
        return _react["default"].createElement(CustomMarker, _extends({
          subscribeMarker,
          updateMarker
        }, props));
      });
    };
    CustomMarkerWrapper.displayName = "CustomMarkerWrapper";
    var _default = CustomMarkerWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/lib/markers/public/CursorMarker.js
var require_CursorMarker2 = __commonJS({
  "node_modules/react-calendar-timeline/lib/lib/markers/public/CursorMarker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _TimelineMarkersContext = require_TimelineMarkersContext();
    var _markerType = require_markerType();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var CursorMarker = function(_React$Component) {
      _inherits(CursorMarker2, _React$Component);
      function CursorMarker2() {
        _classCallCheck(this, CursorMarker2);
        return _possibleConstructorReturn(this, _getPrototypeOf(CursorMarker2).apply(this, arguments));
      }
      _createClass(CursorMarker2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this$props$subscribe = this.props.subscribeMarker({
            type: _markerType.TimelineMarkerType.Cursor,
            renderer: this.props.children
          }), unsubscribe = _this$props$subscribe.unsubscribe;
          this.unsubscribe = unsubscribe;
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.unsubscribe != null) {
            this.unsubscribe();
            this.unsubscribe = null;
          }
        }
      }, {
        key: "render",
        value: function render() {
          return null;
        }
      }]);
      return CursorMarker2;
    }(_react["default"].Component);
    _defineProperty(CursorMarker, "propTypes", {
      subscribeMarker: _propTypes["default"].func.isRequired,
      children: _propTypes["default"].func
    });
    var CursorMarkerWrapper = function CursorMarkerWrapper2(props) {
      return _react["default"].createElement(_TimelineMarkersContext.TimelineMarkersConsumer, null, function(_ref) {
        var subscribeMarker = _ref.subscribeMarker;
        return _react["default"].createElement(CursorMarker, _extends({
          subscribeMarker
        }, props));
      });
    };
    CursorMarkerWrapper.displayName = "CursorMarkerWrapper";
    var _default = CursorMarkerWrapper;
    exports["default"] = _default;
  }
});

// node_modules/react-calendar-timeline/lib/index.js
var require_lib2 = __commonJS({
  "node_modules/react-calendar-timeline/lib/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "TimelineMarkers", {
      enumerable: true,
      get: function get() {
        return _TimelineMarkers["default"];
      }
    });
    Object.defineProperty(exports, "TodayMarker", {
      enumerable: true,
      get: function get() {
        return _TodayMarker["default"];
      }
    });
    Object.defineProperty(exports, "CustomMarker", {
      enumerable: true,
      get: function get() {
        return _CustomMarker["default"];
      }
    });
    Object.defineProperty(exports, "CursorMarker", {
      enumerable: true,
      get: function get() {
        return _CursorMarker["default"];
      }
    });
    Object.defineProperty(exports, "TimelineHeaders", {
      enumerable: true,
      get: function get() {
        return _TimelineHeaders["default"];
      }
    });
    Object.defineProperty(exports, "SidebarHeader", {
      enumerable: true,
      get: function get() {
        return _SidebarHeader["default"];
      }
    });
    Object.defineProperty(exports, "CustomHeader", {
      enumerable: true,
      get: function get() {
        return _CustomHeader["default"];
      }
    });
    Object.defineProperty(exports, "DateHeader", {
      enumerable: true,
      get: function get() {
        return _DateHeader["default"];
      }
    });
    exports["default"] = void 0;
    var _Timeline = _interopRequireDefault(require_Timeline());
    var _TimelineMarkers = _interopRequireDefault(require_TimelineMarkers());
    var _TodayMarker = _interopRequireDefault(require_TodayMarker2());
    var _CustomMarker = _interopRequireDefault(require_CustomMarker2());
    var _CursorMarker = _interopRequireDefault(require_CursorMarker2());
    var _TimelineHeaders = _interopRequireDefault(require_TimelineHeaders());
    var _SidebarHeader = _interopRequireDefault(require_SidebarHeader());
    var _CustomHeader = _interopRequireDefault(require_CustomHeader());
    var _DateHeader = _interopRequireDefault(require_DateHeader());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var _default = _Timeline["default"];
    exports["default"] = _default;
  }
});
export default require_lib2();
/*! Bundled license information:

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)

classnames/index.js:
  (*!
  	Copyright (c) 2018 Jed Watson.
  	Licensed under the MIT License (MIT), see
  	http://jedwatson.github.io/classnames
  *)
*/
//# sourceMappingURL=react-calendar-timeline.js.map
